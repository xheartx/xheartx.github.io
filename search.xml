<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[WEB前端面试题]]></title>
      <url>http://blog.xheartx.com/2016/07/05/2016-07-05-Web-Interview/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-07-05-02.jpg" alt="WEB前端面试题"></p>
<p><strong>自用笔记：本文属于自用笔记，不做详解，仅供参考。在此记录一些收录的面试题。</strong></p>
<a id="more"></a>
<p>#前端开发面试题</p>
<blockquote>
<ol>
<li>面试题目： 根据你的等级和职位的变化，入门级到专家级，广度和深度都会有所增加。</li>
<li>题目类型： 理论知识、算法、项目细节、技术视野、开放性题、工作案例。</li>
<li>细节追问： 可以确保问到你开始不懂或面试官开始不懂为止，这样可以大大延展题目的区分度和深度，知道你的实际能力。因为这种知识关联是长时期的学习，临时抱佛脚绝对是记不住的。</li>
<li>回答问题再棒，面试官（可能是你面试职位的直接领导），会考虑我要不要这个人做我的同事？所以态度很重要、除了能做事，还要会做人。（感觉更像是相亲( •̣̣̣̣̣̥́௰•̣̣̣̣̣̥̀ )）</li>
<li>资深的前端开发能把absolute和relative弄混，这样的人不要也罢，因为团队需要的是：你这个人具有可以依靠的才能（靠谱）。</li>
</ol>
</blockquote>
<p><strong>前端开发知识点：</strong></p>
<blockquote>
<p>HTML&amp;CSS：<br>    对Web标准的理解、浏览器内核差异、兼容性、hack、CSS基本功：布局、盒子模型、选择器优先级、<br>    HTML5、CSS3、Flexbox</p>
</blockquote>
<p>JavaScript：<br>    数据类型、运算、对象、Function、继承、闭包、作用域、原型链、事件、RegExp、JSON、Ajax、<br>    DOM、BOM、内存泄漏、跨域、异步装载、模板引擎、前端MVC、路由、模块化、Canvas、ECMAScript 6、Nodejs</p>
<p>其他：<br>    移动端、响应式、自动化构建、HTTP、离线存储、WEB安全、优化、重构、团队协作、可维护、易用性、SEO、UED、架构、职业生涯、快速学习能力</p>
<p>作为一名前端工程师，<strong>无论工作年头长短都应该掌握的知识点</strong>：</p>
<blockquote>
<p>1、DOM结构 —— 两个节点之间可能存在哪些关系以及如何在节点之间任意移动。<br>2、DOM操作 ——如何添加、移除、移动、复制、创建和查找节点等。<br>3、事件 —— 如何使用事件，以及IE和标准DOM事件模型之间存在的差别。<br>4、XMLHttpRequest —— 这是什么、怎样完整地执行一次GET请求、怎样检测错误。<br>5、严格模式与混杂模式 —— 如何触发这两种模式，区分它们有何意义。<br>6、盒模型 —— 外边距、内边距和边框之间的关系，及IE8以下版本的浏览器中的盒模型<br>7、块级元素与行内元素 —— 怎么用CSS控制它们、以及如何合理的使用它们<br>8、浮动元素 ——怎么使用它们、它们有什么问题以及怎么解决这些问题。<br>9、HTML与XHTML ——二者有什么区别，你觉得应该使用哪一个并说出理由。<br>10、JSON —— 作用、用途、设计结构。</p>
</blockquote>
<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h3 id="Doctype作用？标准模式与兼容模式各有什么区别"><a href="#Doctype作用？标准模式与兼容模式各有什么区别" class="headerlink" title="Doctype作用？标准模式与兼容模式各有什么区别?"></a>Doctype作用？标准模式与兼容模式各有什么区别?</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）、&lt;!DOCTYPE&gt;声明位于位于HTML文档中的第一行，处于 &lt;html&gt; 标签之前。告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。</span><br><span class="line"></span><br><span class="line">（2）、标准模式的排版 和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。</span><br></pre></td></tr></table></figure>
<h3 id="HTML5-为什么只需要写-lt-DOCTYPE-HTML-gt-？"><a href="#HTML5-为什么只需要写-lt-DOCTYPE-HTML-gt-？" class="headerlink" title="HTML5 为什么只需要写 &lt;!DOCTYPE HTML&gt;？"></a>HTML5 为什么只需要写 &lt;!DOCTYPE HTML&gt;？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HTML5 不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）；</span><br><span class="line"></span><br><span class="line">而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。</span><br></pre></td></tr></table></figure>
<h3 id="行内元素有哪些？块级元素有哪些？-空-void-元素有那些？"><a href="#行内元素有哪些？块级元素有哪些？-空-void-元素有那些？" class="headerlink" title="行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？"></a>行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">首先：CSS规范规定，每个元素都有display属性，确定该元素的类型，每个元素都有默认的display值，如div的display默认值为“block”，则为“块级”元素；span默认display属性值为“inline”，是“行内”元素。</span><br><span class="line"></span><br><span class="line">（1）行内元素有：a b span img input select strong（强调的语气）</span><br><span class="line">（2）块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p</span><br><span class="line"></span><br><span class="line">（3）常见的空元素：</span><br><span class="line">&lt;br&gt; &lt;hr&gt; &lt;img&gt; &lt;input&gt; &lt;link&gt; &lt;meta&gt;</span><br><span class="line">鲜为人知的是：</span><br><span class="line">&lt;area&gt; &lt;base&gt; &lt;col&gt; &lt;command&gt; &lt;embed&gt; &lt;keygen&gt; &lt;param&gt; &lt;source&gt; &lt;track&gt; &lt;wbr&gt;</span><br></pre></td></tr></table></figure>
<h3 id="页面导入样式时，使用link和-import有什么区别？"><a href="#页面导入样式时，使用link和-import有什么区别？" class="headerlink" title="页面导入样式时，使用link和@import有什么区别？"></a>页面导入样式时，使用link和@import有什么区别？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">（1）link属于XHTML标签，除了加载CSS外，还能用于定义RSS, 定义rel连接属性等作用；而@import是CSS提供的，只能用于加载CSS;</span><br><span class="line"></span><br><span class="line">（2）页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;</span><br><span class="line"></span><br><span class="line">（3）import是CSS2.1 提出的，只在IE5以上才能被识别，而link是XHTML标签，无兼容问题;</span><br></pre></td></tr></table></figure>
<h3 id="介绍一下你对浏览器内核的理解？"><a href="#介绍一下你对浏览器内核的理解？" class="headerlink" title="介绍一下你对浏览器内核的理解？"></a>介绍一下你对浏览器内核的理解？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和JS引擎。</span><br><span class="line">渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。</span><br><span class="line"></span><br><span class="line">JS引擎则：解析和执行javascript来实现网页的动态效果。</span><br><span class="line"></span><br><span class="line">最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。</span><br></pre></td></tr></table></figure>
<h3 id="常见的浏览器内核有哪些？"><a href="#常见的浏览器内核有哪些？" class="headerlink" title="常见的浏览器内核有哪些？"></a>常见的浏览器内核有哪些？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Trident内核(IE-ms)：</span><br><span class="line">IE,MaxThon,TT,The World,360,搜狗浏览器等。[又称MSHTML]</span><br><span class="line"></span><br><span class="line">Gecko内核(Firefox-moz)：</span><br><span class="line">Netscape6及以上版本，FF,MozillaSuite/SeaMonkey等</span><br><span class="line"></span><br><span class="line">Presto内核(Opera-o)：</span><br><span class="line">Opera7及以上。      [Opera内核原为：Presto，现为：Blink;]</span><br><span class="line"></span><br><span class="line">Webkit内核(Chrome/Safari-webkit)：</span><br><span class="line">Safari,Chrome等。   [ Chrome的：Blink（WebKit的分支）]</span><br><span class="line"></span><br><span class="line">详细文章：[浏览器内核的解析和对比](http://www.cnblogs.com/fullhouse/archive/2011/12/19/2293455.html)</span><br></pre></td></tr></table></figure>
<h3 id="html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分-HTML-和-HTML5？"><a href="#html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分-HTML-和-HTML5？" class="headerlink" title="html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？"></a>html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt;* HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。</span><br><span class="line">	  绘画 canvas;</span><br><span class="line">	  用于媒介回放的 video 和 audio 元素;</span><br><span class="line">	  本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失;</span><br><span class="line">      sessionStorage 的数据在浏览器关闭后自动删除;</span><br><span class="line">	  语意化更好的内容元素，比如 article、footer、header、nav、section;</span><br><span class="line">	  表单控件，calendar、date、time、email、url、search;</span><br><span class="line">	  新的技术webworker, websockt, Geolocation;</span><br><span class="line">  移除的元素：</span><br><span class="line">	  纯表现的元素：basefont，big，center，font, s，strike，tt，u;</span><br><span class="line">	  对可用性产生负面影响的元素：frame，frameset，noframes；</span><br><span class="line">* 支持HTML5新标签：</span><br><span class="line">	 IE8/IE7/IE6支持通过document.createElement方法产生的标签，</span><br><span class="line">  	 可以利用这一特性让这些浏览器支持HTML5新标签，</span><br><span class="line">  	 浏览器支持新标签后，还需要添加标签默认的样式。</span><br><span class="line"></span><br><span class="line">     当然最好的方式是直接使用成熟的框架、比如html5shim;</span><br><span class="line">	 &lt;!--[if lt IE 9]&gt;</span><br><span class="line">		&lt;script&gt; src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&lt;/script&gt;</span><br><span class="line">	 &lt;![endif]--&gt;</span><br><span class="line">* 如何区分HTML5： DOCTYPE声明\新增的结构元素\功能元素</span><br></pre></td></tr></table></figure>
<h3 id="简述一下你对HTML语义化的理解？"><a href="#简述一下你对HTML语义化的理解？" class="headerlink" title="简述一下你对HTML语义化的理解？"></a>简述一下你对HTML语义化的理解？</h3><blockquote>
<p>用正确的标签做正确的事情。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;</span><br><span class="line">及时在没有样式CCS情况下也以一种文档格式显示，并且是容易阅读的;</span><br><span class="line">搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;</span><br><span class="line">使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。</span><br></pre></td></tr></table></figure>
<h3 id="HTML5的离线储存怎么使用，工作原理能不能解释一下？"><a href="#HTML5的离线储存怎么使用，工作原理能不能解释一下？" class="headerlink" title="HTML5的离线储存怎么使用，工作原理能不能解释一下？"></a>HTML5的离线储存怎么使用，工作原理能不能解释一下？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。</span><br><span class="line">原理：HTML5的离线存储是基于一个新建的.appcache文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如何使用：</span><br><span class="line">1、页面头部像下面一样加入一个manifest的属性；</span><br><span class="line">2、在cache.manifest文件的编写离线存储的资源；</span><br><span class="line">	CACHE MANIFEST</span><br><span class="line">	#v0.11</span><br><span class="line">	CACHE:</span><br><span class="line">	js/app.js</span><br><span class="line">	css/style.css</span><br><span class="line">	NETWORK:</span><br><span class="line">	resourse/logo.png</span><br><span class="line">	FALLBACK:</span><br><span class="line">	/ /offline.html</span><br><span class="line">3、在离线状态时，操作window.applicationCache进行需求实现。</span><br><span class="line"></span><br><span class="line">详细的使用请参考：[有趣的HTML5：离线存储](http://segmentfault.com/a/1190000000732617)</span><br></pre></td></tr></table></figure>
<h3 id="浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？"><a href="#浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？" class="headerlink" title="浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？"></a>浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在线的情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线存储。如果已经访问过app并且资源已经离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。</span><br><span class="line">离线的情况下，浏览器就直接使用离线存储的资源。</span><br></pre></td></tr></table></figure>
<p>详细的使用请参考：<a href="http://segmentfault.com/a/1190000000732617" target="_blank" rel="external">有趣的HTML5：离线存储</a></p>
<h3 id="请描述一下-cookies，sessionStorage-和-localStorage-的区别？"><a href="#请描述一下-cookies，sessionStorage-和-localStorage-的区别？" class="headerlink" title="请描述一下 cookies，sessionStorage 和 localStorage 的区别？"></a>请描述一下 cookies，sessionStorage 和 localStorage 的区别？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cookie是网站为了标示用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。</span><br><span class="line">cookie数据始终在同源的http请求中携带（即使不需要），记会在浏览器和服务器间来回传递。</span><br><span class="line">sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。</span><br><span class="line"></span><br><span class="line">存储大小：</span><br><span class="line">	cookie数据大小不能超过4k。</span><br><span class="line">	sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。</span><br><span class="line"></span><br><span class="line">有期时间：</span><br><span class="line">	localStorage    存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；</span><br><span class="line">	sessionStorage  数据在当前浏览器窗口关闭后自动删除。</span><br><span class="line">	cookie          设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭</span><br></pre></td></tr></table></figure>
<h3 id="iframe有那些缺点？"><a href="#iframe有那些缺点？" class="headerlink" title="iframe有那些缺点？"></a>iframe有那些缺点？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*iframe会阻塞主页面的Onload事件；</span><br><span class="line">*搜索引擎的检索程序无法解读这种页面，不利于SEO;</span><br><span class="line"></span><br><span class="line">*iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</span><br><span class="line"></span><br><span class="line">使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript</span><br><span class="line">动态给iframe添加src属性值，这样可以绕开以上两个问题。</span><br></pre></td></tr></table></figure>
<h3 id="Label的作用是什么？是怎么用的？"><a href="#Label的作用是什么？是怎么用的？" class="headerlink" title="Label的作用是什么？是怎么用的？"></a>Label的作用是什么？是怎么用的？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">label标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。</span><br><span class="line"></span><br><span class="line">&lt;label for=&quot;Name&quot;&gt;Number:&lt;/label&gt;</span><br><span class="line">&lt;input type=“text“name=&quot;Name&quot; id=&quot;Name&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;label&gt;Date:&lt;input type=&quot;text&quot; name=&quot;B&quot;/&gt;&lt;/label&gt;</span><br></pre></td></tr></table></figure>
<h3 id="HTML5的form如何关闭自动完成功能？"><a href="#HTML5的form如何关闭自动完成功能？" class="headerlink" title="HTML5的form如何关闭自动完成功能？"></a>HTML5的form如何关闭自动完成功能？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">给不想要提示的 form 或下某个input 设置为 autocomplete=off。</span><br></pre></td></tr></table></figure>
<h3 id="如何实现浏览器内多个标签页之间的通信-阿里"><a href="#如何实现浏览器内多个标签页之间的通信-阿里" class="headerlink" title="如何实现浏览器内多个标签页之间的通信? (阿里)"></a>如何实现浏览器内多个标签页之间的通信? (阿里)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">调用localstorge、cookies等本地存储方式</span><br></pre></td></tr></table></figure>
<h3 id="webSocket如何兼容低浏览器？-阿里"><a href="#webSocket如何兼容低浏览器？-阿里" class="headerlink" title="webSocket如何兼容低浏览器？(阿里)"></a>webSocket如何兼容低浏览器？(阿里)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Adobe Flash Socket 、</span><br><span class="line">ActiveX HTMLFile (IE) 、</span><br><span class="line">基于 multipart 编码发送 XHR 、</span><br><span class="line">基于长轮询的 XHR</span><br></pre></td></tr></table></figure>
<h3 id="页面可见性（Page-Visibility）API-可以有哪些用途？"><a href="#页面可见性（Page-Visibility）API-可以有哪些用途？" class="headerlink" title="页面可见性（Page Visibility）API 可以有哪些用途？"></a>页面可见性（Page Visibility）API 可以有哪些用途？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在页面被切换到其他后台进程的时候，自动暂停音乐或视频的播放；</span><br></pre></td></tr></table></figure>
<h3 id="如何在页面上实现一个圆形的可点击区域？"><a href="#如何在页面上实现一个圆形的可点击区域？" class="headerlink" title="如何在页面上实现一个圆形的可点击区域？"></a>如何在页面上实现一个圆形的可点击区域？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、map+area或者svg</span><br><span class="line">2、border-radius</span><br><span class="line">3、纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等</span><br></pre></td></tr></table></figure>
<h3 id="实现不使用-border-画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。"><a href="#实现不使用-border-画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。" class="headerlink" title="实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。"></a>实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;height:1px;overflow:hidden;background:#ccc&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h3 id="网页验证码是干嘛的，是为了解决什么安全问题。"><a href="#网页验证码是干嘛的，是为了解决什么安全问题。" class="headerlink" title="网页验证码是干嘛的，是为了解决什么安全问题。"></a>网页验证码是干嘛的，是为了解决什么安全问题。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">区分用户是计算机还是人的公共全自动程序。可以防止：恶意破解密码、刷票、论坛灌水；</span><br><span class="line">有效防止黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试；</span><br></pre></td></tr></table></figure>
<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="介绍一下CSS的盒子模型？"><a href="#介绍一下CSS的盒子模型？" class="headerlink" title="介绍一下CSS的盒子模型？"></a>介绍一下CSS的盒子模型？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）有两种， IE 盒子模型、标准 W3C 盒子模型；IE的content部分包含了 border 和 pading;</span><br><span class="line"></span><br><span class="line">（2）盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border).</span><br></pre></td></tr></table></figure>
<h3 id="自定义字体引入"><a href="#自定义字体引入" class="headerlink" title="自定义字体引入"></a>自定义字体引入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">	font-family: &quot;iconfont&quot;;</span><br><span class="line">	src: url(&apos;iconfont.eot?v=20151214&apos;); /* IE9*/</span><br><span class="line">	src: url(&apos;iconfont.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;), /* IE6-IE8 */</span><br><span class="line">	url(&apos;iconfont.woff?v=20151214&apos;) format(&apos;woff&apos;), /* chrome, firefox */</span><br><span class="line">	url(&apos;iconfont.ttf?v=20151214&apos;) format(&apos;truetype&apos;), /* chrome, firefox, opera, Safari, Android, iOS 4.2+*/</span><br><span class="line">	url(&apos;iconfont.svg#iconfont&apos;) format(&apos;svg&apos;); /* iOS 4.1- */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">### CSS选择符有哪些？哪些属性可以继承？</span><br></pre></td></tr></table></figure>
<ul>
<li><p>1.id选择器（ # myid）<br>2.类选择器（.myclassname）<br>3.标签选择器（div, h1, p）<br>4.相邻选择器（h1 + p）<br>5.子选择器（ul &gt; li）<br>6.后代选择器（li a）<br>7.通配符选择器（ * ）<br>8.属性选择器（a[rel = “external”]）<br>9.伪类选择器（a: hover, li: nth ### child）</p>
</li>
<li><p>可继承的样式： font-size font-family color, UL LI DL DD DT;</p>
</li>
<li><p>不可继承的样式：border padding margin width height ;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">### CSS优先级算法如何计算？</span><br></pre></td></tr></table></figure>
</li>
<li><p>优先级就近原则，同权重情况下样式定义最近者为准;</p>
</li>
<li><p>载入样式以最后载入的定位为准;</p>
</li>
</ul>
<p>优先级为:<br>   !important &gt;  id &gt; class &gt; tag<br>    important 比 内联优先级高<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### CSS3新增伪类有那些？</span><br></pre></td></tr></table></figure></p>
<p>CSS3新增伪类举例：<br>    p:first-of-type    选择属于其父元素的首个 </p><p> 元素的每个 </p><p> 元素。<br>    p:last-of-type    选择属于其父元素的最后 </p><p> 元素的每个 </p><p> 元素。<br>    p:only-of-type    选择属于其父元素唯一的 </p><p> 元素的每个 </p><p> 元素。<br>    p:only-child    选择属于其父元素的唯一子元素的每个 </p><p> 元素。<br>    p:nth-child(2)    选择属于其父元素的第二个子元素的每个 </p><p> 元素。<br>        :enabled          :disabled 控制表单控件的禁用状态。<br>    :checked        单选框或复选框被选中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 如何居中div？如何居中一个浮动元素？如何让绝对定位的div居中？</span><br></pre></td></tr></table></figure></p>
<ul>
<li><p>给div设置一个宽度，然后添加margin:0 auto属性</p>
<pre><code>div{
    width:200px;
    margin:0 auto;
 }
</code></pre></li>
</ul>
<ul>
<li><p>居中一个浮动元素</p>
<pre><code> 确定容器的宽高 宽500 高 300 的层
 设置层的外边距

.div {
     width:500px ; height:300px;//高度可以不设
     margin: -150px 0 0 -250px;
     position:relative;         //相对定位
     background-color:pink;     //方便看效果
     left:50%;
     top:50%;
}
</code></pre></li>
<li><p>让绝对定位的div居中</p>
<p> position: absolute;<br> width: 1200px;<br> background: none;<br> margin: 0 auto;<br> top: 0;<br> left: 0;<br> bottom: 0;<br> right: 0;</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### display有哪些值？说明他们的作用。</span><br></pre></td></tr></table></figure>
<p>block 象块类型元素一样显示。<br>none 缺省值。象行内元素类型一样显示。<br>inline-block 象行内元素一样显示，但其内容象块类型元素一样显示。<br>list-item 象块类型元素一样显示，并添加样式列表标记。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### position的值relative和absolute定位原点是？</span><br></pre></td></tr></table></figure></p>
<p>absolute<br>生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。</p>
<p>fixed （老IE不支持）<br>生成绝对定位的元素，相对于浏览器窗口进行定位。</p>
<p>relative<br>生成相对定位的元素，相对于其正常位置进行定位。</p>
<p>static<br>默认值。没有定位，元素出现在正常的流中<br>（忽略 top, bottom, left, right z-index 声明）。</p>
<p>inherit<br>规定从父元素继承 position 属性的值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### CSS3有哪些新特性？</span><br></pre></td></tr></table></figure></p>
<p>CSS3实现圆角（border-radius:8px），<br>阴影（box-shadow:10px），<br>文字特效（text-shadow、），<br>线性渐变（gradient），<br>旋转（transform）<br>transform:rotate(9deg) scale(0.85,0.90) translate(0px,-30px) skew(-9deg,0deg);//旋转,缩放,定位,倾斜<br>增加了更多的CSS选择器<br>多背景 rgba<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 请解释一下CSS3的Flexbox（弹性盒布局模型）,以及适用场景？</span><br><span class="line"></span><br><span class="line">### 用纯CSS创建一个三角形的原理是什么？</span><br></pre></td></tr></table></figure></p>
<p>把上、左、右三条边隐藏掉（颜色设为 transparent）</p>
<p>#demo {<br>  width: 0;<br>  height: 0;<br>  border-width: 20px;<br>  border-style: solid;<br>  border-color: transparent transparent red transparent;<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 一个满屏 品 字布局 如何设计?</span><br></pre></td></tr></table></figure></p>
<p>简单的方式：<br>上面的div宽100%，<br>下面的两个div分别宽50%，<br>然后用float或者inline使其不换行即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 常见兼容性问题？</span><br></pre></td></tr></table></figure></p>
<ul>
<li><p>png24位的图片在iE6浏览器上出现背景，解决方案是做成PNG8.</p>
</li>
<li><p>浏览器默认的margin和padding不同。解决方案是加一个全局的*{margin:0;padding:0;}来统一。</p>
</li>
<li><p>IE6双边距bug:块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大。</p>
<p>浮动ie产生的双倍距离 #box{ float:left; width:10px; margin:0 0 0 100px;}</p>
<p>这种情况之下IE会产生20px的距离，解决方案是在float的标签样式控制中加入 ——<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">渐进识别的方式，从总体中逐渐排除局部。</span><br><span class="line"></span><br><span class="line">首先，巧妙的使用“```\9```”这一标记，将IE游览器从所有情况中分离出来。</span><br><span class="line">接着，再次使用“+”将IE8和IE7、IE6分离开来，这样IE8已经独立识别。</span><br></pre></td></tr></table></figure></p>
<p>css</p>
<pre><code>.bb{
    background-color:#f1ee18;/*所有识别*/
    .background-color:#00deff\9; /*IE6、7、8识别*/
    +background-color:#a200ff;/*IE6、7识别*/
    _background-color:#1e0bd1;/*IE6识别*/
}
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">*  IE下,可以使用获取常规属性的方法来获取自定义属性,</span><br><span class="line">   也可以使用getAttribute()获取自定义属性;</span><br><span class="line">   Firefox下,只能使用getAttribute()获取自定义属性。</span><br><span class="line">   解决方法:统一通过getAttribute()获取自定义属性。</span><br><span class="line"></span><br><span class="line">*  IE下,even对象有x,y属性,但是没有pageX,pageY属性;</span><br><span class="line">   Firefox下,event对象有pageX,pageY属性,但是没有x,y属性。</span><br><span class="line"></span><br><span class="line">*  解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。</span><br><span class="line"></span><br><span class="line">*  Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示,</span><br><span class="line">   可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决。</span><br><span class="line"></span><br><span class="line">超链接访问过后hover样式就不出现了 被点击访问过的超链接样式不在具有hover和active了解决方法是改变CSS属性的排列顺序:</span><br><span class="line">L-V-H-A :  a:link &#123;未被点击&#125; a:visited &#123;已被点击&#125; a:hover &#123;悬浮&#125; a:active &#123;点击变化&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？"><a href="#li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？" class="headerlink" title="li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？"></a>li与li之间有看不见的空白间隔是什么原因引起的？有什么解决办法？</h3><h3 id="经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧-？"><a href="#经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧-？" class="headerlink" title="经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧 ？"></a>经常遇到的浏览器的兼容性有哪些？原因，解决方法是什么，常用hack的技巧 ？</h3><h3 id="为什么要初始化CSS样式。"><a href="#为什么要初始化CSS样式。" class="headerlink" title="为什么要初始化CSS样式。"></a>为什么要初始化CSS样式。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。</span><br><span class="line"></span><br><span class="line">- 当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。</span><br><span class="line"></span><br><span class="line">最简单的初始化方法： * &#123;padding: 0; margin: 0;&#125; （强烈不建议）</span><br></pre></td></tr></table></figure>
<p>淘宝的样式初始化代码：<br>body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }<br>body, button, input, select, textarea { font:12px/1.5tahoma, arial, \5b8b\4f53; }<br>h1, h2, h3, h4, h5, h6{ font-size:100%; }<br>address, cite, dfn, em, var { font-style:normal; }<br>code, kbd, pre, samp { font-family:couriernew, courier, monospace; }<br>small{ font-size:12px; }<br>ul, ol { list-style:none; }<br>a { text-decoration:none; }<br>a:hover { text-decoration:underline; }<br>sup { vertical-align:text-top; }<br>sub{ vertical-align:text-bottom; }<br>legend { color:#000; }<br>fieldset, img { border:0; }<br>button, input, select, textarea { font-size:100%; }<br>table { border-collapse:collapse; border-spacing:0; }<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">### absolute的containing block(容器块)计算方式跟正常流有什么不同？</span><br></pre></td></tr></table></figure></p>
<p>无论属于哪种，都要先找到其祖先元素中最近的 position 值不为 static 的元素，然后再判断：<br>1、若此元素为 inline 元素，则 containing block 为能够包含这个元素生成的第一个和最后一个 inline box 的 padding box (除 margin, border 外的区域) 的最小矩形；<br>2、否则,则由这个祖先元素的 padding box 构成。<br>如果都找不到，则为 initial containing block。</p>
<p>补充：</p>
<ol>
<li>static(默认的)/relative：简单说就是它的父元素的内容框（即去掉padding的部分）</li>
<li>absolute: 向上找最近的定位为absolute/relative的元素</li>
<li>fixed: 它的containing block一律为根元素(html/body)，根元素也是initial containing block<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### CSS里的visibility属性有个collapse属性值是干嘛用的？在不同浏览器下以后什么区别？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### position跟display、margin collapse、overflow、float这些特性相互叠加后会怎么样？</span><br><span class="line"></span><br><span class="line">### 对BFC规范(块级格式化上下文：block formatting context)的理解？</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>（W3C CSS 2.1 规范中的一个概念,它是一个独立容器，决定了元素如何对其内容进行定位,以及与其他元素的关系和相互作用。）<br>一个页面是由很多个 Box 组成的,元素的类型和 display 属性,决定了这个 Box 的类型。<br>不同类型的 Box,会参与不同的 Formatting Context（决定如何渲染文档的容器）,因此Box内的元素会以不同的方式渲染,也就是说BFC内部的元素和外部的元素不会互相影响。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### css定义的权重</span><br></pre></td></tr></table></figure></p>
<p>以下是权重的规则：标签的权重为1，class的权重为10，id的权重为100，以下例子是演示各种定义的权重值：</p>
<p>/<em>权重为1</em>/<br>div{<br>}<br>/<em>权重为10</em>/<br>.class1{<br>}<br>/<em>权重为100</em>/</p>
<p>#id1{<br>}<br>/<em>权重为100+1=101</em>/</p>
<p>#id1 div{<br>}<br>/<em>权重为10+1=11</em>/<br>.class1 div{<br>}<br>/<em>权重为10+10+1=21</em>/<br>.class1 .class2 div{<br>}</p>
<p>如果权重相同，则最后定义的样式会起作用，但是应该避免这种情况出现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 请解释一下为什么会出现浮动和什么时候需要清除浮动？清除浮动的方式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 移动端的布局用过媒体查询吗？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 使用 CSS 预处理器吗？喜欢那个？</span><br></pre></td></tr></table></figure></p>
<p>SASS (SASS、LESS没有本质区别，只因为团队前端都是用的SASS)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### CSS优化、提高性能的方法有哪些？</span><br><span class="line"></span><br><span class="line">### 浏览器是怎样解析CSS选择器的？</span><br><span class="line"></span><br><span class="line">### 在网页中的应该使用奇数还是偶数的字体？为什么呢？</span><br><span class="line"></span><br><span class="line">### margin和padding分别适合什么场景使用？</span><br><span class="line"></span><br><span class="line">### 抽离样式模块怎么写，说出思路，有无实践经验？[阿里航旅的面试题]</span><br><span class="line"></span><br><span class="line">### 元素竖向的百分比设定是相对于容器的高度吗？</span><br><span class="line"></span><br><span class="line">### 全屏滚动的原理是什么？用到了CSS的那些属性？</span><br><span class="line"></span><br><span class="line">### 什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？</span><br><span class="line"></span><br><span class="line">### 视差滚动效果，如何给每页做不同的动画？（回到顶部，向下滑动要再次出现，和只出现一次分别怎么做？）</span><br><span class="line"></span><br><span class="line">### ::before 和 :after中双冒号和单冒号 有什么区别？解释一下这2个伪元素的作用。</span><br><span class="line"></span><br><span class="line">### 如何修改chrome记住密码后自动填充表单的黄色背景 ？</span><br><span class="line"></span><br><span class="line">### 你对line-height是如何理解的？</span><br><span class="line"></span><br><span class="line">### 设置元素浮动后，该元素的display值是多少？（自动变成display:block）</span><br><span class="line"></span><br><span class="line">### 怎么让Chrome支持小于12px 的文字？</span><br><span class="line"></span><br><span class="line">### 让页面里的字体变清晰，变细用CSS怎么做？（-webkit-font-smoothing: antialiased;）</span><br><span class="line"></span><br><span class="line">### font-style属性可以让它赋值为“oblique” oblique是什么意思？</span><br><span class="line"></span><br><span class="line">### position:fixed;在android下无效怎么处理？</span><br><span class="line"></span><br><span class="line">### 如果需要手动写动画，你认为最小时间间隔是多久，为什么？（阿里）</span><br></pre></td></tr></table></figure></p>
<p>多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1/60＊1000ms ＝ 16.7ms<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### display:inline-block 什么时候会显示间隙？(携程)</span><br></pre></td></tr></table></figure></p>
<p>移除空格、使用margin负值、使用font-size:0、letter-spacing、word-spacing<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### overflow: scroll时不能平滑滚动的问题怎么处理？</span><br><span class="line"></span><br><span class="line">### 有一个高度自适应的div，里面有两个div，一个高度100px，希望另一个填满剩下的高度。</span><br><span class="line"></span><br><span class="line">### png、jpg、gif 这些图片格式解释一下，分别什么时候用。有没有了解过webp？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 什么是Cookie 隔离？（或者说：请求资源的时候不要让它带cookie怎么做）</span><br></pre></td></tr></table></figure></p>
<p>如果静态文件都放在主域名下，那静态文件请求的时候都带有的cookie的数据提交给server的，非常浪费流量，<br>所以不如隔离开。</p>
<p>因为cookie有域的限制，因此不能跨域提交请求，故使用非主要域名的时候，请求头中就不会带有cookie数据，<br>这样可以降低请求头的大小，降低请求时间，从而达到降低整体请求延时的目的。</p>
<p>同时这种方式不会将cookie传入Web Server，也减少了Web Server对cookie的处理分析环节，<br>提高了webserver的http请求的解析速度。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## JavaScript</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###  介绍js的基本数据类型。</span><br></pre></td></tr></table></figure></p>
<pre><code>Undefined、Null、Boolean、Number、String
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  介绍js有哪些内置对象？</span><br></pre></td></tr></table></figure>
<p>Object 是 JavaScript 中所有对象的父对象</p>
<p>数据封装类对象：Object、Array、Boolean、Number 和 String<br>其他对象：Function、Arguments、Math、Date、RegExp、Error<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  说几条写JavaScript的基本规范？</span><br></pre></td></tr></table></figure></p>
<p>1.不要在同一行声明多个变量。<br>2.请使用 ===/!==来比较true/false或者数值<br>3.使用对象字面量替代new Array这种形式<br>4.不要使用全局函数。<br>5.Switch语句必须带有default分支<br>6.函数不应该有时候有返回值，有时候没有返回值。<br>7.For循环必须使用大括号<br>8.If语句必须使用大括号<br>9.for-in循环中的变量 应该使用var关键字明确限定作用域，从而避免作用域污染。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  JavaScript原型，原型链 ? 有什么特点？</span><br></pre></td></tr></table></figure></p>
<p>每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，<br>如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，<br>于是就这样一直找下去，也就是我们平时所说的原型链的概念。<br>关系：instance.constructor.prototype = instance.<strong>proto</strong></p>
<p>特点：<br>JavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。</p>
<p> 当我们需要一个属性的时，Javascript引擎会先看当前对象中是否有这个属性， 如果没有的话，<br> 就会查找他的Prototype对象是否有这个属性，如此递推下去，一直检索到 Object 内建对象。<br>    function Func(){}<br>    Func.prototype.name = “Sean”;<br>    Func.prototype.getInfo = function() {<br>      return this.name;<br>    }<br>    var person = new Func();//现在可以参考var person = Object.create(oldObject);<br>    console.log(person.getInfo());//它拥有了Func的属性和方法<br>    //“Sean”<br>    console.log(Func.prototype);<br>    // Func { name=”Sean”, getInfo=function()}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  JavaScript有几种类型的值？，你能画一下他们的内存图吗？</span><br></pre></td></tr></table></figure></p>
<p>堆：原始数据类型（Undefined，Null，Boolean，Number、String）<br>栈：引用数据类型（对象、数组和函数）</p>
<p>两种类型的区别是：存储位置不同；<br>原始数据类型直接存储在栈(stack)中的简单数据段，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储；<br>引用数据类型存储在堆(heap)中的对象,占据空间大、大小不固定,如果存储在栈中，将会影响程序运行的性能；引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其<br>在栈中的地址，取得地址后从堆中获得实体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">	![Stated Clearly Image](http://www.w3school.com.cn/i/ct_js_value.gif)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###  Javascript如何实现继承？</span><br></pre></td></tr></table></figure></p>
<p>1、构造继承<br>2、原型继承<br>3、实例继承<br>4、拷贝继承</p>
<p>原型prototype机制或apply和call方法去实现较简单，建议使用构造函数与原型混合方式。</p>
<p> function Parent(){<br>        this.name = ‘wang’;<br>    }</p>
<pre><code>function Child(){
    this.age = 28;
}
Child.prototype = new Parent();//继承了Parent，通过原型

var demo = new Child();
alert(demo.age);
alert(demo.name);//得到被继承的属性
</code></pre><p>  }<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  javascript创建对象的几种方式？</span><br></pre></td></tr></table></figure></p>
<p>javascript创建对象简单的说,无非就是使用内置对象或各种自定义对象，当然还可以用JSON；但写法有很多种，也能混合使用。</p>
<p>1、对象字面量的方式   </p>
<pre><code>person={firstname:&quot;Mark&quot;,lastname:&quot;Yun&quot;,age:25,eyecolor:&quot;black&quot;};
</code></pre><p>2、用function来模拟无参的构造函数</p>
<pre><code>function Person(){}
var person=new Person();//定义一个function，如果使用new&quot;实例化&quot;,该function可以看作是一个Class
person.name=&quot;Mark&quot;;
person.age=&quot;25&quot;;
person.work=function(){
alert(person.name+&quot; hello...&quot;);
}
person.work();
</code></pre><p>3、用function来模拟参构造函数来实现（用this关键字定义构造的上下文属性）</p>
<pre><code>function Pet(name,age,hobby){
   this.name=name;//this作用域：当前对象
   this.age=age;
   this.hobby=hobby;
   this.eat=function(){
      alert(&quot;我叫&quot;+this.name+&quot;,我喜欢&quot;+this.hobby+&quot;,是个程序员&quot;);
   }
}
var maidou =new Pet(&quot;麦兜&quot;,25,&quot;coding&quot;);//实例化、创建对象
maidou.eat();//调用eat方法
</code></pre><p>4、用工厂方式来创建（内置对象）</p>
<pre><code>var wcDog =new Object();
wcDog.name=&quot;旺财&quot;;
wcDog.age=3;
wcDog.work=function(){
  alert(&quot;我是&quot;+wcDog.name+&quot;,汪汪汪......&quot;);
}
wcDog.work();
</code></pre><p>5、用原型方式来创建</p>
<pre><code>function Dog(){

 }
 Dog.prototype.name=&quot;旺财&quot;;
 Dog.prototype.eat=function(){
 alert(this.name+&quot;是个吃货&quot;);
 }
 var wangcai =new Dog();
 wangcai.eat();
</code></pre><p>5、用混合方式来创建</p>
<pre><code>function Car(name,price){
  this.name=name;
  this.price=price;
}
 Car.prototype.sell=function(){
   alert(&quot;我是&quot;+this.name+&quot;，我现在卖&quot;+this.price+&quot;万元&quot;);
  }
var camry =new Car(&quot;凯美瑞&quot;,27);
camry.sell();
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  Javascript作用链域?</span><br></pre></td></tr></table></figure>
<p>全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。<br>当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，<br>直至全局函数，这种组织形式就是作用域链。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  谈谈This对象的理解。</span><br><span class="line"></span><br><span class="line">###  eval是做什么的？</span><br></pre></td></tr></table></figure></p>
<p>它的功能是把对应的字符串解析成JS代码并运行；<br>应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  什么是window对象? 什么是document对象?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###  null，undefined 的区别？</span><br></pre></td></tr></table></figure></p>
<p>null         表示一个对象被定义了，值为“空值”；<br>undefined     表示不存在这个值。</p>
<p>typeof undefined<br>    //“undefined”<br>    undefined :是一个表示”无”的原始值或者说表示”缺少值”，就是此处应该有一个值，但是还没有定义。当尝试读取时会返回 undefined；<br>    例如变量被声明了，但没有赋值时，就等于undefined</p>
<p>typeof null<br>    //“object”<br>    null : 是一个对象(空对象, 没有任何属性和方法)；<br>    例如作为函数的参数，表示该函数的参数不是对象；</p>
<p>注意：<br>    在验证null时，一定要使用　=== ，因为 == 无法分别 null 和　undefined</p>
<p>再来一个例子：</p>
<pre><code>null
Q：有张三这个人么？
A：有！
Q：张三有房子么？
A：没有！

undefined
Q：有张三这个人么？
A：没有！
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  写一个通用的事件侦听器函数。</span><br></pre></td></tr></table></figure>
<p>// event(事件)工具集，来源：github.com/markyun<br>markyun.Event = {<br>    // 页面加载完成后<br>    readyEvent : function(fn) {<br>        if (fn==null) {<br>            fn=document;<br>        }<br>        var oldonload = window.onload;<br>        if (typeof window.onload != ‘function’) {<br>            window.onload = fn;<br>        } else {<br>            window.onload = function() {<br>                oldonload();<br>                fn();<br>            };<br>        }<br>    },<br>    // 视能力分别使用dom0||dom2||IE方式 来绑定事件<br>    // 参数： 操作的元素,事件名称 ,事件处理程序<br>    addEvent : function(element, type, handler) {<br>        if (element.addEventListener) {<br>            //事件类型、需要执行的函数、是否捕捉<br>            element.addEventListener(type, handler, false);<br>        } else if (element.attachEvent) {<br>            element.attachEvent(‘on’ + type, function() {<br>                handler.call(element);<br>            });<br>        } else {<br>            element[‘on’ + type] = handler;<br>        }<br>    },<br>    // 移除事件<br>    removeEvent : function(element, type, handler) {<br>        if (element.removeEventListener) {<br>            element.removeEventListener(type, handler, false);<br>        } else if (element.datachEvent) {<br>            element.detachEvent(‘on’ + type, handler);<br>        } else {<br>            element[‘on’ + type] = null;<br>        }<br>    },<br>    // 阻止事件 (主要是事件冒泡，因为IE不支持事件捕获)<br>    stopPropagation : function(ev) {<br>        if (ev.stopPropagation) {<br>            ev.stopPropagation();<br>        } else {<br>            ev.cancelBubble = true;<br>        }<br>    },<br>    // 取消事件的默认行为<br>    preventDefault : function(event) {<br>        if (event.preventDefault) {<br>            event.preventDefault();<br>        } else {<br>            event.returnValue = false;<br>        }<br>    },<br>    // 获取事件目标<br>    getTarget : function(event) {<br>        return event.target || event.srcElement;<br>    },<br>    // 获取event对象的引用，取到事件的所有信息，确保随时能使用event；<br>    getEvent : function(e) {<br>        var ev = e || window.event;<br>        if (!ev) {<br>            var c = this.getEvent.caller;<br>            while (c) {<br>                ev = c.arguments[0];<br>                if (ev &amp;&amp; Event == ev.constructor) {<br>                    break;<br>                }<br>                c = c.caller;<br>            }<br>        }<br>        return ev;<br>    }<br>};<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;].map(parseInt) 答案是多少？</span><br></pre></td></tr></table></figure></p>
<p>[1, NaN, NaN] 因为 parseInt 需要两个参数 (val, radix)，<br>其中 radix 表示解析时用的基数。<br>map 传了 3 个 (element, index, array)，对应的 radix 不合法导致解析失败。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  事件是？IE与火狐的事件机制有什么区别？ 如何阻止冒泡？</span><br></pre></td></tr></table></figure></p>
<ol>
<li>我们在网页中的某个操作（有的操作对应多个事件）。例如：当我们点击一个按钮就会产生一个事件。是可以被 JavaScript 侦测到的行为。</li>
<li>事件处理机制：IE是事件冒泡、Firefox同时支持两种事件模型，也就是：捕获型事件和冒泡型事件；</li>
<li>ev.stopPropagation();（旧ie的方法 ev.cancelBubble = true;）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  什么是闭包（closure），为什么要用它？</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。</p>
<p>闭包的特性：</p>
<p>1.函数内再嵌套函数<br>2.内部函数可以引用外层的参数和变量<br>3.参数和变量不会被垃圾回收机制回收</p>
<p>//li节点的onclick事件都能正确的弹出当前被点击的li索引<br> <ul id="testUL"><br>    <li> index = 0</li><br>    <li> index = 1</li><br>    <li> index = 2</li><br>    <li> index = 3</li><br></ul></p>
<script type="text/javascript">
    var nodes = document.getElementsByTagName("li");
    for(i = 0;i<nodes.length;i+= 1){
        nodes[i].onclick = function(){
            console.log(i+1);//不用闭包的话，值每次都是4
        }(i);
    }
</script>



<p>执行say667()后,say667()闭包内部变量会存在,而闭包内部函数的内部变量不会存在<br>使得Javascript的垃圾回收机制GC不会收回say667()所占用的资源<br>因为say667()的内部函数的执行需要依赖say667()中的变量<br>这是对闭包作用的非常直白的描述</p>
<p>  function say667() {<br>    // Local variable that ends up within closure<br>    var num = 666;<br>    var sayAlert = function() {<br>        alert(num);<br>    }<br>    num++;<br>    return sayAlert;<br>}</p>
<p> var sayAlert = say667();<br> sayAlert()//执行结果应该弹出的667<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  javascript 代码中的&quot;use strict&quot;;是什么意思 ? 使用它区别是什么？</span><br></pre></td></tr></table></figure></p>
<p>use strict是一种ECMAscript 5 添加的（严格）运行模式,这种模式使得 Javascript 在更严格的条件下运行,</p>
<p>使JS编码更加规范化的模式,消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为。<br>默认支持的糟糕特性都会被禁用，比如不能用with，也不能在意外的情况下给全局变量赋值;<br>全局变量的显示声明,函数必须声明在顶层，不允许在非函数代码块内声明函数,arguments.callee也不允许使用；<br>消除代码运行的一些不安全之处，保证代码运行的安全,限制函数中的arguments修改，严格模式下的eval函数的行为和非严格模式的也不相同;</p>
<p>提高编译器效率，增加运行速度；<br>为未来新版本的Javascript标准化做铺垫。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  如何判断一个对象是否属于某个类？</span><br></pre></td></tr></table></figure></p>
<p>使用instanceof （待完善）</p>
<p>if(a instanceof Person){<br>   alert(‘yes’);<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  new操作符具体干了什么呢?</span><br></pre></td></tr></table></figure></p>
<p>1、创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。<br>2、属性和方法被加入到 this 引用的对象中。<br>3、新创建的对象由 this 所引用，并且最后隐式的返回 this 。</p>
<p>var obj  = {};<br>obj.<strong>proto</strong> = Base.prototype;<br>Base.call(obj);<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  用原生JavaScript的实现过什么功能吗？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###  Javascript中，有一个函数，执行时对象查找时，永远不会去查找原型，这个函数是？</span><br></pre></td></tr></table></figure></p>
<p>hasOwnProperty</p>
<p>javaScript中hasOwnProperty函数方法是返回一个布尔值，指出一个对象是否具有指定名称的属性。此方法无法检查该对象的原型链中是否具有该属性；该属性必须是对象本身的一个成员。<br>使用方法：<br>object.hasOwnProperty(proName)<br>其中参数object是必选项。一个对象的实例。<br>proName是必选项。一个属性名称的字符串值。</p>
<p>如果 object 具有指定名称的属性，那么JavaScript中hasOwnProperty函数方法返回 true，反之则返回 false。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  JSON 的了解？</span><br></pre></td></tr></table></figure></p>
<p>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。<br>它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小<br>如：{“age”:”12”, “name”:”back”}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 能解释一下这段代码的意思吗？</span><br></pre></td></tr></table></figure></p>
<p><code>[].forEach.call($$(&quot;*&quot;),function(a){a.style.outline=&quot;1px solid #&quot;+(~~(Math.random()*(1&lt;&lt;24))).toString(16)})</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  js延迟加载的方式有哪些？</span><br></pre></td></tr></table></figure></p>
<p>defer和async、动态创建DOM方式（用得最多）、按需异步载入js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  Ajax 是什么? 如何创建一个Ajax？</span><br></pre></td></tr></table></figure></p>
<p>ajax的全称：Asynchronous Javascript And XML。<br>异步传输+js+xml。<br>所谓异步，在这里简单地解释就是：向服务器发送请求的时候，我们不必等待结果，而是可以同时做其他的事情，等到有了结果它自己会根据设定进行后续操作，与此同时，页面是不会发生整页刷新的，提高了用户体验。</p>
<p>(1)创建XMLHttpRequest对象,也就是创建一个异步调用对象<br>(2)创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息<br>(3)设置响应HTTP请求状态变化的函数<br>(4)发送HTTP请求<br>(5)获取异步调用返回的数据<br>(6)使用JavaScript和DOM实现局部刷新<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  同步和异步的区别?</span><br></pre></td></tr></table></figure></p>
<p>同步：浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,j进行下一步操作。</p>
<p>异步：浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容。</p>
<p>（待完善）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  如何解决跨域问题?</span><br></pre></td></tr></table></figure></p>
<p>jsonp、 iframe、window.name、window.postMessage、服务器上设置代理页面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  页面编码和被请求的资源编码如果不一致如何处理？</span><br><span class="line"></span><br><span class="line">###  模块化开发怎么做？</span><br></pre></td></tr></table></figure></p>
<p><a href="http://benalman.com/news/2010/11/immediately-invoked-function-expression/" target="_blank" rel="external">立即执行函数</a>,不暴露私有成员</p>
<pre><code>var module1 = (function(){
　　　　var _count = 0;
　　　　var m1 = function(){
　　　　　　//...
　　　　};
　　　　var m2 = function(){
　　　　　　//...
　　　　};
　　　　return {
　　　　　　m1 : m1,
　　　　　　m2 : m2
　　　　};
　　})();
</code></pre><p>（待完善）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？</span><br></pre></td></tr></table></figure></p>
<pre><code>&gt; AMD 规范在这里：https://github.com/amdjs/amdjs-api/wiki/AMD

&gt; CMD 规范在这里：https://github.com/seajs/seajs/issues/242

    Asynchronous Module Definition，异步模块定义，所有的模块将被异步加载，模块加载不影响后面语句运行。所有依赖某些模块的语句均放置在回调函数中。

     区别：

        1. 对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.
        2. CMD 推崇依赖就近，AMD 推崇依赖前置。看代码：

    // CMD
    define(function(require, exports, module) {
        var a = require(&apos;./a&apos;)
        a.doSomething()
        // 此处略去 100 行
        var b = require(&apos;./b&apos;) // 依赖可以就近书写
        b.doSomething()
        // ...
    })

    // AMD 默认推荐
    define([&apos;./a&apos;, &apos;./b&apos;], function(a, b) { // 依赖必须一开始就写好
        a.doSomething()
        // 此处略去 100 行
        b.doSomething()
        // ...
    })
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  requireJS的核心原理是什么？（如何动态加载的？如何避免多次加载的？如何</span><br><span class="line">缓存的？）</span><br><span class="line"></span><br><span class="line">###  谈一谈你对ECMAScript6的了解？</span><br><span class="line"></span><br><span class="line">###  ECMAScript6 怎么写class么，为什么会出现class这种东西?</span><br><span class="line"></span><br><span class="line">###  异步加载JS的方式有哪些？</span><br></pre></td></tr></table></figure>
<pre><code>(1) defer，只支持IE

(2) async：

(3) 创建script，插入到DOM中，加载完毕后callBack
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### documen.write和 innerHTML的区别</span><br></pre></td></tr></table></figure>
<pre><code>document.write只能重绘整个页面

innerHTML可以重绘页面的一部分
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### DOM操作——怎样添加、移除、移动、复制、创建和查找节点?</span><br></pre></td></tr></table></figure>
<pre><code>（1）创建新节点
  createDocumentFragment()    //创建一个DOM片段
  createElement()   //创建一个具体的元素
  createTextNode()   //创建一个文本节点
（2）添加、移除、替换、插入
  appendChild()
  removeChild()
  replaceChild()
  insertBefore() //在已有的子节点前插入一个新的子节点
（3）查找
  getElementsByTagName()    //通过标签名称
  getElementsByName()    //通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)
  getElementById()    //通过元素Id，唯一性
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  .call() 和 .apply() 的区别？</span><br></pre></td></tr></table></figure>
<pre><code>例子中用 add 来替换 sub，add.call(sub,3,1) == add(3,1) ，所以运行结果为：alert(4);

注意：js 中的函数其实是对象，函数名是对 Function 对象的引用。

  function add(a,b)
  {
      alert(a+b);
  }

  function sub(a,b)
  {
      alert(a-b);
  }

  add.call(sub,3,1);
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">###  数组和对象有哪些原生方法，列举一下？</span><br><span class="line"></span><br><span class="line">###  JS 怎么实现一个类。怎么实例化这个类</span><br><span class="line"></span><br><span class="line">###  JavaScript中的作用域与变量声明提升？</span><br><span class="line"></span><br><span class="line">###  如何编写高性能的Javascript？</span><br><span class="line"></span><br><span class="line">###  那些操作会造成内存泄漏？</span><br><span class="line"></span><br><span class="line">###  JQuery的源码看过吗？能不能简单概况一下它的实现原理？</span><br><span class="line"></span><br><span class="line">###  jQuery.fn的init方法返回的this指的是什么对象？为什么要返回this？</span><br><span class="line"></span><br><span class="line">###  jquery中如何将数组转化为json字符串，然后再转化回来？</span><br><span class="line"></span><br><span class="line">###  jQuery 的属性拷贝(extend)的实现原理是什么，如何实现深拷贝？</span><br><span class="line"></span><br><span class="line">###  jquery.extend 与 jquery.fn.extend的区别？</span><br><span class="line"></span><br><span class="line">###  jQuery 的队列是如何实现的？队列可以用在哪些地方？</span><br><span class="line"></span><br><span class="line">###  谈一下Jquery中的bind(),live(),delegate(),on()的区别？</span><br><span class="line"></span><br><span class="line">###  JQuery一个对象可以同时绑定多个事件，这是如何实现的？</span><br><span class="line"></span><br><span class="line">###  是否知道自定义事件。jQuery里的fire函数是什么意思，什么时候用？</span><br><span class="line"></span><br><span class="line">###  jQuery 是通过哪个方法和 Sizzle 选择器结合的？（jQuery.fn.find()进入Sizzle）</span><br><span class="line"></span><br><span class="line">###  针对 jQuery性能的优化方法？</span><br><span class="line"></span><br><span class="line">###  Jquery与jQuery UI 有啥区别？</span><br></pre></td></tr></table></figure>
<pre><code>*jQuery是一个js库，主要提供的功能是选择器，属性修改和事件绑定等等。

*jQuery UI则是在jQuery的基础上，利用jQuery的扩展性，设计的插件。
 提供了一些常用的界面元素，诸如对话框、拖动行为、改变大小行为等等
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  JQuery的源码看过吗？能不能简单说一下它的实现原理？</span><br><span class="line"></span><br><span class="line">###  jquery 中如何将数组转化为json字符串，然后再转化回来？</span><br></pre></td></tr></table></figure>
<p>jQuery中没有提供这个功能，所以你需要先编写两个jQuery的扩展：<br>        $.fn.stringifyArray = function(array) {<br>            return JSON.stringify(array)<br>        }</p>
<pre><code>$.fn.parseArray = function(array) {
    return JSON.parse(array)
}

然后调用：
$(&quot;&quot;).stringifyArray(array)
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  jQuery和Zepto的区别？各自的使用场景？</span><br><span class="line"></span><br><span class="line">###  针对 jQuery 的优化方法？</span><br></pre></td></tr></table></figure>
<pre><code>*基于Class的选择性的性能相对于Id选择器开销很大，因为需遍历所有DOM元素。

*频繁操作的DOM，先缓存起来再操作。用Jquery的链式调用更好。
 比如：var str=$(&quot;a&quot;).attr(&quot;href&quot;);

*for (var i = size; i &lt; arr.length; i++) {}
 for 循环每一次循环都查找了数组 (arr) 的.length 属性，在开始循环的时候设置一个变量来存储这个数字，可以让循环跑得更快：
 for (var i = size, length = arr.length; i &lt; length; i++) {}
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">###  Zepto的点透问题如何解决？</span><br><span class="line"></span><br><span class="line">###  jQueryUI如何自定义组件?</span><br><span class="line"></span><br><span class="line">###  需求：实现一个页面操作不会整页刷新的网站，并且能在浏览器前进、后退时正确响应。给出你的技术实现方案？</span><br><span class="line"></span><br><span class="line">### 如何判断当前脚本运行在浏览器还是node环境中？（阿里）</span><br></pre></td></tr></table></figure>
<pre><code>通过判断Global对象是否为window，如果不为window，当前脚本没有运行在浏览器中
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  移动端最小触控区域是多大？</span><br><span class="line"></span><br><span class="line">###  jQuery 的 slideUp动画 ，如果目标元素是被外部事件驱动, 当鼠标快速地连续触发外部元素事件, 动画会滞后的反复执行，该如何处理呢?</span><br><span class="line"></span><br><span class="line">###  把 Script 标签 放在页面的最底部的body封闭之前 和封闭之后有什么区别？浏览器会如何解析它们？</span><br><span class="line"></span><br><span class="line">###  移动端的点击事件的有延迟，时间是多久，为什么会有？ 怎么解决这个延时？（click 有 300ms 延迟,为了实现safari的双击事件的设计，浏览器要知道你是不是要双击操作。）</span><br><span class="line"></span><br><span class="line">###  知道各种JS框架(Angular, Backbone, Ember, React, Meteor, Knockout...)么? 能讲出他们各自的优点和缺点么?</span><br><span class="line"></span><br><span class="line">###  Underscore 对哪些 JS 原生对象进行了扩展以及提供了哪些好用的函数方法？</span><br><span class="line"></span><br><span class="line">###  解释JavaScript中的作用域与变量声明提升？</span><br><span class="line"></span><br><span class="line">###  那些操作会造成内存泄漏？</span><br></pre></td></tr></table></figure>
<pre><code>内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。
垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。

setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。
闭包、控制台日志、循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  JQuery一个对象可以同时绑定多个事件，这是如何实现的？</span><br><span class="line"></span><br><span class="line">###  Node.js的适用场景？</span><br><span class="line"></span><br><span class="line">###  (如果会用node)知道route, middleware, cluster, nodemon, pm2, server-side rendering么?</span><br><span class="line"></span><br><span class="line">###  解释一下 Backbone 的 MVC 实现方式？</span><br><span class="line"></span><br><span class="line">### 什么是“前端路由”?什么时候适合使用“前端路由”? “前端路由”有哪些优点和缺点?</span><br><span class="line"></span><br><span class="line">### 知道什么是webkit么? 知道怎么用浏览器的各种工具来调试和debug代码么?</span><br><span class="line"></span><br><span class="line">### 如何测试前端代码么? 知道BDD, TDD, Unit Test么? 知道怎么测试你的前端工程么(mocha, sinon, jasmin, qUnit..)?</span><br><span class="line"></span><br><span class="line">### 前端templating(Mustache, underscore, handlebars)是干嘛的, 怎么用?</span><br><span class="line"></span><br><span class="line">### 简述一下 Handlebars 的基本用法？</span><br><span class="line"></span><br><span class="line">### 简述一下 Handlerbars 的对模板的基本处理流程， 如何编译的？如何缓存的？</span><br><span class="line"></span><br><span class="line">### 用js实现千位分隔符?(来源：[前端农民工](http://div.io/topic/744)，提示：正则+replace)</span><br></pre></td></tr></table></figure>
<pre><code>function commafy(num) {
     num = num + &apos;&apos;;
     var reg = /(-?d+)(d{3})/;

    if(reg.test(num)){
     num = num.replace(reg, &apos;$1,$2&apos;);
    }
    return num;
}
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 检测浏览器版本版本有哪些方式？</span><br></pre></td></tr></table></figure>
<pre><code>功能检测、userAgent特征检测

比如：navigator.userAgent
//&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.101 Safari/537.36&quot;
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 其他问题</span><br><span class="line"></span><br><span class="line">### 原来公司工作流程是怎么样的，如何与其他人协作的？如何夸部门合作的？</span><br><span class="line"></span><br><span class="line">### 你遇到过比较难的技术问题是？你是如何解决的？</span><br><span class="line"></span><br><span class="line">### 设计模式 知道什么是singleton, factory, strategy, decrator么?</span><br><span class="line"></span><br><span class="line">### 常使用的库有哪些？常用的前端开发工具？开发过什么应用或组件？</span><br><span class="line"></span><br><span class="line">### 页面重构怎么操作？</span><br></pre></td></tr></table></figure>
<p>网站重构：在不改变外部行为的前提下，简化结构、添加可读性，而在网站前端保持一致的行为。<br>也就是说是在不改变UI的情况下，对网站进行优化，在扩展的同时保持一致的UI。</p>
<p>对于传统的网站来说重构通常是：</p>
<p>表格(table)布局改为DIV+CSS<br>使网站前端兼容于现代浏览器(针对于不合规范的CSS、如对IE6有效的)<br>对于移动平台的优化<br>针对于SEO进行优化<br>深层次的网站重构应该考虑的方面</p>
<p>减少代码间的耦合<br>让代码保持弹性<br>严格按规范编写代码<br>设计可扩展的API<br>代替旧有的框架、语言(如VB)<br>增强用户体验<br>通常来说对于速度的优化也包含在重构中</p>
<p>压缩JS、CSS、image等前端资源(通常是由服务器来解决)<br>程序的性能优化(如数据读写)<br>采用CDN来加速资源加载<br>对于JS DOM的优化<br>HTTP服务器的文件缓存<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 列举IE与其他浏览器不一样的特性？</span><br></pre></td></tr></table></figure></p>
<p>1、事件不同之处：</p>
<p>触发事件的元素被认为是目标（target）。而在 IE 中，目标包含在 event 对象的 srcElement 属性；</p>
<p>获取字符代码、如果按键代表一个字符（shift、ctrl、alt除外），IE 的 keyCode 会返回字符代码（Unicode），DOM 中按键的代码和字符是分离的，要获取字符代码，需要使用 charCode 属性；</p>
<p>阻止某个事件的默认行为，IE 中阻止某个事件的默认行为，必须将 returnValue 属性设置为 false，Mozilla 中，需要调用 preventDefault() 方法；</p>
<p>停止事件冒泡，IE 中阻止事件进一步冒泡，需要设置 cancelBubble 为 true，Mozzilla 中，需要调用 stopPropagation()；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 99%的网站都需要被重构是那本书上写的？</span><br></pre></td></tr></table></figure></p>
<p>网站重构：应用web标准进行设计（第2版）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 什么叫优雅降级和渐进增强？</span><br></pre></td></tr></table></figure></p>
<p>优雅降级：Web站点在所有新式浏览器中都能正常工作，如果用户使用的是老式浏览器，则代码会针对旧版本的IE进行降级处理了,使之在旧式浏览器上以某种形式降级体验却不至于完全不能用。<br>如：border-shadow</p>
<p>渐进增强：从被所有浏览器支持的基本功能开始，逐步地添加那些只有新版本浏览器才支持的功能,向页面增加不影响基础浏览器的额外样式和功能的。当浏览器支持时，它们会自动地呈现出来并发挥作用。<br>如：默认使用flash上传，但如果浏览器支持 HTML5 的文件上传功能，则使用HTML5实现更好的体验；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 是否了解公钥加密和私钥加密。</span><br></pre></td></tr></table></figure></p>
<p>一般情况下是指私钥用于对数据进行签名，公钥用于对签名进行验证;<br>HTTP网站在浏览器端用公钥加密敏感数据，然后在服务器端再用私钥解密。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### WEB应用从服务器主动推送Data到客户端有那些方式？</span><br></pre></td></tr></table></figure></p>
<p>html5提供的Websocket<br>不可见的iframe<br>WebSocket通过Flash<br>XHR长时间连接<br>XHR Multipart Streaming</p>
<p><script>标签的长时间连接(可跨域)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 对Node的优点和缺点提出了自己的看法？</span><br></pre></td></tr></table></figure></p>
<p>*（优点）因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求，<br>因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。<br>此外，与Node代理服务器交互的客户端代码是由javascript语言编写的，<br>因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。</p>
<p>*（缺点）Node是一个相对新的开源项目，所以不太稳定，它总是一直在变，<br>而且缺少足够多的第三方库支持。看起来，就像是Ruby/Rails当年的样子。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 你有用过哪些前端性能优化的方法？</span><br></pre></td></tr></table></figure></p>
<p>（1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。</p>
<p>（2） 前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数</p>
<p>（3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。</p>
<p>（4） 当需要设置的样式很多时设置className而不是直接操作style。</p>
<p>（5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。</p>
<p>（6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。</p>
<p>（7） 图片预加载，将样式表放在顶部，将脚本放在底部  加上时间戳。</p>
<p>（8） 避免在页面的主体布局中使用table，table要等其中的内容完全下载之后才会显示出来，显示比div+css布局慢。<br>对普通的网站有一个统一的思路，就是尽量向前端优化、减少数据库操作、减少磁盘IO。向前端优化指的是，在不影响功能和体验的情况下，能在浏览器执行的不要在服务端执行，能在缓存服务器上直接返回的不要到应用服务器，程序能直接取得的结果不要到外部取得，本机内能取得的数据不要到远程取，内存能取到的不要到磁盘取，缓存中有的不要去数据库查询。减少数据库操作指减少更新次数、缓存结果减少查询次数、将数据库执行的操作尽可能的让你的程序完成（例如join查询），减少磁盘IO指尽量不使用文件系统作为缓存、减少读写文件次数等。程序优化永远要优化慢的部分，换语言是无法“优化”的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### http状态码有那些？分别代表是什么意思？</span><br></pre></td></tr></table></figure></p>
<p>简单版<br>[<br>    100  Continue    继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息<br>    200  OK         正常返回信息<br>    201  Created      请求成功并且服务器创建了新的资源<br>    202  Accepted     服务器已接受请求，但尚未处理<br>    301  Moved Permanently  请求的网页已永久移动到新位置。<br>    302 Found          临时性重定向。<br>    303 See Other      临时性重定向，且总是使用 GET 请求新的 URI。<br>    304  Not Modified 自从上次请求后，请求的网页未修改过。</p>
<pre><code>400 Bad Request  服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。
401 Unauthorized 请求未授权。
403 Forbidden      禁止访问。
404 Not Found      找不到如何与 URI 相匹配的资源。

500 Internal Server Error  最常见的服务器端错误。
503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。
</code></pre><p>]</p>
<p>完整版<br>1**(信息类)：表示接收到请求并且继续处理<br>100——客户必须继续发出请求<br>101——客户要求服务器根据请求转换HTTP协议版本</p>
<p>2**(响应成功)：表示动作被成功接收、理解和接受<br>200——表明该请求被成功地完成，所请求的资源发送回客户端<br>201——提示知道新文件的URL<br>202——接受和处理、但处理未完成<br>203——返回信息不确定或不完整<br>204——请求收到，但返回信息为空<br>205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件<br>206——服务器已经完成了部分用户的GET请求</p>
<p>3**(重定向类)：为了完成指定的动作，必须接受进一步处理<br>300——请求的资源可在多处得到<br>301——本网页被永久性转移到另一个URL<br>302——请求的网页被转移到一个新的地址，但客户访问仍继续通过原始URL地址，重定向，新的URL会在response中的Location中返回，浏览器将会使用新的URL发出新的Request。<br>303——建议客户访问其他URL或访问方式<br>304——自从上次请求后，请求的网页未修改过，服务器返回此响应时，不会返回网页内容，代表上次的文档已经被缓存了，还可以继续使用<br>305——请求的资源必须从服务器指定的地址得到<br>306——前一版本HTTP中使用的代码，现行版本中不再使用<br>307——申明请求的资源临时性删除</p>
<p>4**(客户端错误类)：请求包含错误语法或不能正确执行<br>400——客户端请求有语法错误，不能被服务器所理解<br>401——请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用<br>HTTP 401.1 - 未授权：登录失败<br>　　HTTP 401.2 - 未授权：服务器配置问题导致登录失败<br>　　HTTP 401.3 - ACL 禁止访问资源<br>　　HTTP 401.4 - 未授权：授权被筛选器拒绝<br>HTTP 401.5 - 未授权：ISAPI 或 CGI 授权失败<br>402——保留有效ChargeTo头响应<br>403——禁止访问，服务器收到请求，但是拒绝提供服务<br>HTTP 403.1 禁止访问：禁止可执行访问<br>　　HTTP 403.2 - 禁止访问：禁止读访问<br>　　HTTP 403.3 - 禁止访问：禁止写访问<br>　　HTTP 403.4 - 禁止访问：要求 SSL<br>　　HTTP 403.5 - 禁止访问：要求 SSL 128<br>　　HTTP 403.6 - 禁止访问：IP 地址被拒绝<br>　　HTTP 403.7 - 禁止访问：要求客户证书<br>　　HTTP 403.8 - 禁止访问：禁止站点访问<br>　　HTTP 403.9 - 禁止访问：连接的用户过多<br>　　HTTP 403.10 - 禁止访问：配置无效<br>　　HTTP 403.11 - 禁止访问：密码更改<br>　　HTTP 403.12 - 禁止访问：映射器拒绝访问<br>　　HTTP 403.13 - 禁止访问：客户证书已被吊销<br>　　HTTP 403.15 - 禁止访问：客户访问许可过多<br>　　HTTP 403.16 - 禁止访问：客户证书不可信或者无效<br>HTTP 403.17 - 禁止访问：客户证书已经到期或者尚未生效<br>404——一个404错误表明可连接服务器，但服务器无法取得所请求的网页，请求资源不存在。eg：输入了错误的URL<br>405——用户在Request-Line字段定义的方法不允许<br>406——根据用户发送的Accept拖，请求资源不可访问<br>407——类似401，用户必须首先在代理服务器上得到授权<br>408——客户端没有在用户指定的饿时间内完成请求<br>409——对当前资源状态，请求不能完成<br>410——服务器上不再有此资源且无进一步的参考地址<br>411——服务器拒绝用户定义的Content-Length属性请求<br>412——一个或多个请求头字段在当前请求中错误<br>413——请求的资源大于服务器允许的大小<br>414——请求的资源URL长于服务器允许的长度<br>415——请求资源不支持请求项目格式<br>416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段<br>417——服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求长。</p>
<p>5**(服务端错误类)：服务器不能正确执行一个正确的请求<br>HTTP 500 - 服务器遇到错误，无法完成请求<br>　　HTTP 500.100 - 内部服务器错误 - ASP 错误<br>　　HTTP 500-11 服务器关闭<br>　　HTTP 500-12 应用程序重新启动<br>　　HTTP 500-13 - 服务器太忙<br>　　HTTP 500-14 - 应用程序无效<br>　　HTTP 500-15 - 不允许请求 global.asa<br>　　Error 501 - 未实现<br>HTTP 502 - 网关错误<br>HTTP 503：由于超载或停机维护，服务器目前无法使用，一段时间后可能恢复正常<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？（流程说的越详细越好）</span><br></pre></td></tr></table></figure></p>
<p>注：这题胜在区分度高，知识点覆盖广，再不懂的人，也能答出几句，<br>而高手可以根据自己擅长的领域自由发挥，从URL规范、HTTP协议、DNS、CDN、数据库查询、<br>到浏览器流式解析、CSS规则构建、layout、paint、onload/domready、JS执行、JS API绑定等等；</p>
<p>详细版：<br>1、浏览器会开启一个线程来处理这个请求，对 URL 分析判断如果是 http 协议就按照 Web 方式来处理;<br>2、调用浏览器内核中的对应方法，比如 WebView 中的 loadUrl 方法;<br>3、通过DNS解析获取网址的IP地址，设置 UA 等信息发出第二个GET请求;<br>4、进行HTTP协议会话，客户端发送报头(请求报头);<br>5、进入到web服务器上的 Web Server，如 Apache、Tomcat、Node.JS 等服务器;<br>6、进入部署好的后端应用，如 PHP、Java、JavaScript、Python 等，找到对应的请求处理;<br>7、处理结束回馈报头，此处如果浏览器访问过，缓存上有对应资源，会与服务器最后修改时间对比，一致则返回304;<br>8、浏览器开始下载html文档(响应报头，状态码200)，同时使用缓存;<br>9、文档树建立，根据标记请求所需指定MIME类型的文件（比如css、js）,同时设置了cookie;<br>10、页面开始渲染DOM，JS根据DOM API操作DOM,执行事件绑定等，页面显示完成。</p>
<p>简洁版：<br>浏览器根据请求的URL交给DNS域名解析，找到真实IP，向服务器发起请求；<br>服务器交给后台处理完成后返回数据，浏览器接收文件（HTML、JS、CSS、图象等）；<br>浏览器对加载到的资源（HTML、JS、CSS等）进行语法解析，建立相应的内部数据结构（如HTML的DOM）；<br>载入解析到的资源文件，渲染页面，完成。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 部分地区用户反应网站很卡，请问有哪些可能性的原因，以及解决方法？</span><br><span class="line"></span><br><span class="line">### 从打开app到刷新出内容，整个过程中都发生了什么，如果感觉慢，怎么定位问题，怎么解决?</span><br><span class="line"></span><br><span class="line">### 除了前端以外还了解什么其它技术么？你最最厉害的技能是什么？</span><br><span class="line"></span><br><span class="line">### 你用的得心应手用的熟练地编辑器&amp;开发环境是什么样子？</span><br></pre></td></tr></table></figure></p>
<p>Sublime Text 3 + 相关插件编写前端代码<br>Google chrome 、Mozilla Firefox浏览器 +firebug 兼容测试和预览页面UI、动画效果和交互功能<br>Node.js+Gulp<br>git 用于版本控制和Code Review<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 对前端工程师这个职位是怎么样理解的？它的前景会怎么样？</span><br></pre></td></tr></table></figure></p>
<p>前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近。<br>1、实现界面交互<br>2、提升用户体验<br>3、有了Node.js，前端可以实现服务端的一些事情</p>
<p>前端是最贴近用户的程序员，前端的能力就是能让产品从 90分进化到 100 分，甚至更好，</p>
<p>参与项目，快速高质量完成实现效果图，精确到1px；</p>
<p>与团队成员，UI设计，产品经理的沟通；</p>
<p>做好的页面结构，页面重构和用户体验；</p>
<p>处理hack，兼容、写出优美的代码格式；</p>
<p>针对服务器的优化、拥抱最新前端技术。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 你怎么看待Web App 、hybrid App、Native App？</span><br><span class="line"></span><br><span class="line">### 你移动端前端开发的理解？（和 Web 前端开发的主要区别是什么？）</span><br><span class="line"></span><br><span class="line">### 你对加班的看法？</span><br></pre></td></tr></table></figure></p>
<p>加班就像借钱，原则应当是——救急不救穷<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">### 平时如何管理你的项目？</span><br></pre></td></tr></table></figure></p>
<p>先期团队必须确定好全局样式（globe.css），编码模式(utf-8) 等；</p>
<p>编写习惯必须一致（例如都是采用继承式的写法，单样式都写成一行）；</p>
<p>标注样式编写人，各模块都及时标注（标注关键样式调用的地方）；</p>
<p>页面进行标注（例如 页面 模块 开始和结束）；</p>
<p>CSS跟HTML 分文件夹并行存放，命名都得统一（例如style.css）；</p>
<p>JS 分文件夹存放 命名以该JS功能为准的英文翻译。</p>
<p>图片采用整合的 images.png png8 格式文件使用 尽量整合在一起使用方便将来的管理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 如何设计突发大规模并发架构？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 当团队人手不足，把功能代码写完已经需要加班的情况下，你会做前端代码的测试吗？</span><br><span class="line"></span><br><span class="line">### 说说最近最流行的一些东西吧？常去哪些网站？</span><br></pre></td></tr></table></figure></p>
<p>ES6\WebAssembly\Node\MVVM\Web Components\React\React Native\Webpack 组件化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 知道什么是SEO并且怎么优化么? 知道各种meta data的含义么?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 移动端（Android IOS）怎么做好用户体验?</span><br></pre></td></tr></table></figure></p>
<p>清晰的视觉纵线、<br>信息的分组、极致的减法、<br>利用选择代替输入、<br>标签及文字的排布方式、<br>依靠明文确认密码、<br>合理的键盘利用、<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 简单描述一下你做过的移动APP项目研发流程？</span><br><span class="line"></span><br><span class="line">### 你在现在的团队处于什么样的角色，起到了什么明显的作用？</span><br><span class="line"></span><br><span class="line">### 你认为怎样才是全端工程师（Full Stack developer）？</span><br><span class="line"></span><br><span class="line">### 介绍一个你最得意的作品吧？</span><br><span class="line"></span><br><span class="line">### 你有自己的技术博客吗，用了哪些技术？</span><br><span class="line"></span><br><span class="line">### 对前端安全有什么看法？</span><br><span class="line"></span><br><span class="line">### 是否了解Web注入攻击，说下原理，最常见的两种攻击（XSS 和 CSRF）了解到什么程度？</span><br><span class="line"></span><br><span class="line">### 项目中遇到国哪些印象深刻的技术难题，具体是什么问题，怎么解决？。</span><br><span class="line"></span><br><span class="line">### 最近在学什么东西？</span><br><span class="line"></span><br><span class="line">### 你的优点是什么？缺点是什么？</span><br><span class="line"></span><br><span class="line">### 如何管理前端团队?</span><br><span class="line"></span><br><span class="line">### 最近在学什么？能谈谈你未来3，5年给自己的规划吗？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 前端学习网站推荐</span><br></pre></td></tr></table></figure></p>
<ol>
<li>极客标签：     <a href="http://www.gbtags.com/">http://www.gbtags.com/</a></li>
<li>码农周刊：     <a href="http://weekly.manong.io/issues/">http://weekly.manong.io/issues/</a></li>
<li>前端周刊：     <a href="http://www.feweekly.com/issues">http://www.feweekly.com/issues</a></li>
<li>慕课网：       <a href="http://www.imooc.com/">http://www.imooc.com/</a></li>
<li>div.io：         <a href="http://div.io">http://div.io</a></li>
<li>Hacker News： <a href="https://news.ycombinator.com/news">https://news.ycombinator.com/news</a></li>
<li>InfoQ：       <a href="http://www.infoq.com/">http://www.infoq.com/</a></li>
<li>w3cplus：     <a href="http://www.w3cplus.com/">http://www.w3cplus.com/</a></li>
<li>Stack Overflow： <a href="http://stackoverflow.com/">http://stackoverflow.com/</a><br>10.w3school：    <a href="http://www.w3school.com.cn/">http://www.w3school.com.cn/</a><br>11.mozilla：     <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript</a><br>```</li>
</ol>
<h2 id="文档推荐"><a href="#文档推荐" class="headerlink" title="文档推荐"></a>文档推荐</h2><ol>
<li><p><a href="http://docs.huihoo.com/jquery/jquery-fundamentals/zh-cn/index.html" title="jQuery 基本原理">jQuery 基本原理</a></p>
</li>
<li><p><a href="http://bonsaiden.github.io/JavaScript-Garden/zh/">JavaScript 秘密花园</a></p>
</li>
<li><p><a href="http://css.doyoe.com/">CSS参考手册</a></p>
</li>
<li><p><a href="http://javascript.ruanyifeng.com/">JavaScript 标准参考教程</a></p>
</li>
<li><p><a href="http://es6.ruanyifeng.com/">ECMAScript 6入门</a></p>
</li>
</ol>
</script></p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[还原像素级别的设计稿]]></title>
      <url>http://blog.xheartx.com/2016/06/23/2016-06-23-web-restore-design/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-06-23-01.png" alt="还原设计稿"></p>
<blockquote>
<p>还原设计稿的一些经验分享。</p>
</blockquote>
<a id="more"></a>
<h2 id="为什么要还原像素级别的设计稿"><a href="#为什么要还原像素级别的设计稿" class="headerlink" title="为什么要还原像素级别的设计稿"></a>为什么要还原像素级别的设计稿</h2><p>前端重构和美工是两个级别的，一个就在于精准还原设计稿而另一个是自我感觉怎么好怎么来。</p>
<p>而比较高端的项目是分三块的，由专业的设计师做设计，由前端工程师切图做页面，再由后端工程师开发功能整合到系统上。术业有专攻，每一个环节都会有很高的水准，组合成一个各方面都非常专业的网站，为客户的业务提供更好的帮助，因此客户也愿意支付高价。</p>
<p>所以，前端工程师的任务，就是精确还原设计稿甚至要精确到像素级别，不然为什么还需要设计师？</p>
<h2 id="Photoshop-切图技巧"><a href="#Photoshop-切图技巧" class="headerlink" title="Photoshop 切图技巧"></a>Photoshop 切图技巧</h2><p>精确第一步，精准的使用 Photoshop 切图。拿到设计稿一般是 PSD 格式的，我们首先会<a href="http://yujiangshui.com/recent-projects-review/#toc-10" target="_blank" rel="external">认真观察</a>一下设计稿，思考一下对应的 HTML 结构和 CSS 设计模式，然后开始根据需求进行切图。</p>
<h3 id="传统的切图流程"><a href="#传统的切图流程" class="headerlink" title="传统的切图流程"></a>传统的切图流程</h3><p>确定好了切图方案之后，对于大的 PSD 来说，往往新建一个画布，然后将 PSD 里面需要切出来的图层拖动到新画布中，使用“剪裁”工具把这个图层进一步的剪切，变成最小内容，剪去多余的部分。然后打开“存储为 Web 所用格式”对话框，根据图片选择格式、压缩比以及是否是渐进式等等，然后选择路径修改文件名。</p>
<p>这样的缺点很明显，有时候图标或者图层有半透明的阴影，这时候对于边界的界定就不好处理，此外需要大量重复的剪裁、返回上一步、继续剪裁、保存图片等等。人工操作过多，导致效率底下，成本增加，大量时间浪费在基础重复的操作中（为此一般项目的扣图都扔给另一个同学）。</p>
<h3 id="改进后的切图流程"><a href="#改进后的切图流程" class="headerlink" title="改进后的切图流程"></a>改进后的切图流程</h3><p>计算机就是为了帮助人类完成大量重复的工作，有没有自动切图的功能或插件呢？为此我也在不断的搜索。</p>
<p>然后有一天就发现了 Photoshop 内置的自动切图脚本。位于“文件”－》“脚本”－》“将图层导出文件”。意思就是将你的图层分层分别导出为文件，而且还支持剪裁图片和格式选择等等。</p>
<p><img src="http://jiangshui.b0.upaiyun.com/blog/2014/05/huanyuan0.jpg" alt="将图层导出文件菜单"></p>
<p>选择剪裁图片之后，将会自动给你剪裁到最小状态，由于是机器剪裁，所以精度非常高，半透明的阴影也完全 OK。</p>
<p>于是，改进后的切图流程就变成了：从 PSD 中找到要剪切出来的图层，然后拖动到新画布上面，栅格化文字或者<strong>合并组</strong>、<strong>合并图层</strong>，将要剪切出来的图片们合并到一起变成一个图层，然后使用这个脚本自动导出，命名一下图片。</p>
<p>这个脚本的不好就在于命名，输出的时候命名比较乱，需要自己修改一下，但是已经非常自动化操纵了，相见恨晚。</p>
<h2 id="使用马克鳗量取精准尺寸"><a href="#使用马克鳗量取精准尺寸" class="headerlink" title="使用马克鳗量取精准尺寸"></a>使用马克鳗量取精准尺寸</h2><p>切图精准之后，为了精准还原设计稿，下一步就是精准的尺寸，包括间距、宽高、位置等等。</p>
<h3 id="之前得测量方法"><a href="#之前得测量方法" class="headerlink" title="之前得测量方法"></a>之前得测量方法</h3><p>在没遇到<a href="http://www.getmarkman.com/" target="_blank" rel="external">马克鳗</a>之前，我一直苦逼得用 QQ 截图来测量尺寸、大小和位置。好在 QQ 截图得功能比较强大，测量得还算准确，缺陷就是需要来回切换程序界面，一次次得测量，这样必然导致低效率。</p>
<p>此外，不只是测量尺寸，还原设计稿还需要提取对应位置得背景颜色等等。这样还需要在后台打开 Photoshop 然后偶尔切换到 PS 中，用拾色器来取色。</p>
<p>后来问了一下<a href="http://www.aips.me/" target="_blank" rel="external">周良</a>才知道了这么一个设计师必备得工具<a href="http://www.getmarkman.com/" target="_blank" rel="external">马克鳗</a>，相见恨晚。</p>
<h3 id="改进后得测量方法"><a href="#改进后得测量方法" class="headerlink" title="改进后得测量方法"></a>改进后得测量方法</h3><p>马克鳗得主要功能就是对设计稿测量尺寸、获取颜色、标注信息等等。而且支持各种格式得图片，甚至支持 PSD 格式，标注完之后会自动生成一个 markman 文件，你可以发送给别人，不会影响原来得设计稿。还支持 Retina @2x 设计稿得缩小，例如针对移动端得设计稿往往设计成双倍尺寸得，测量之后尺寸都需要除以2，而使用马克鳗之后，会自动读取文件名后面的 @2x ，如果确定是双倍设计稿，就会自动给你缩小一倍。</p>
<p>这样改进后的测量方法就变成了：打开设计稿（PSD 或者将 PSD 中不同页面的设计稿保存出来 jpg），使用马克鳗进行标注并且观察设计结构和样式，思考如何做页面结构如何切图。之后根据上面的方法切图，再打开马克鳗测量后的图片，对照尺寸重构页面。</p>
<h2 id="使用-alloydesigner-像素级别对比设计稿"><a href="#使用-alloydesigner-像素级别对比设计稿" class="headerlink" title="使用 alloydesigner 像素级别对比设计稿"></a>使用 alloydesigner 像素级别对比设计稿</h2><p><a href="http://alloyteam.github.io/AlloyDesigner/" target="_blank" rel="external">alloydesigner</a> 是腾讯 <a href="http://www.alloyteam.com/" target="_blank" rel="external">alloyteam</a> 团队开发的用来辅助前端页面重构的工具。</p>
<p>简单的介绍一下它的功能：<a href="http://alloyteam.github.io/AlloyDesigner/" target="_blank" rel="external">alloydesigner</a> 是基于浏览器端的一堆 JS ，你可以把它拖动到浏览器书签上点击就可以使用。它可以加载设计稿，作为本透明的背景放在当前网页上面，以达到像素级别的全真对比。包括间距尺寸等等各方面全都一目了然。此外还提供了一些其他实用辅助功能，具体请看：<a href="http://www.alloyteam.com/2014/03/alloydesigner-lai-zi-xing-xing-di-web-qian-duan-kai-fa-fang-shi/" target="_blank" rel="external">全新理念的Web前端开发方式——AlloyDesigner</a>。</p>
<p>今年3月份放出来之后，大家就开始试用了一下，但是反馈并不是特别好。我也跟着试了一下，感觉操作会比较繁琐，而且功能比较多，运行起来稍卡。而且是全新的开发方式，一时也不太习惯，于是就没再用了。</p>
<p>结果前段时间有个项目，客户有点“像素眼”，结果就用上这工具了，而且幸亏有这工具。前段时间得那个项目比较奇怪，设计稿是图片，要求根据浏览器宽度进行整体得缩放，即浏览器宽屏幕大得时候，里面得尺寸和字体各方面都要变大。所以各方面处理起来需要计算成流动得，文字、间距、尺寸都得用 em 或者百分比单位，再加上没有高清得 PSD 设计稿，还原就不是那么精准。</p>
<p>更要命的是，git 上另一个同事给我修改了一下尺寸，结果差距就更大了（其实本来还原的还好），客户反馈了一张差距图：</p>
<p><img src="http://jiangshui.b0.upaiyun.com/blog/2014/05/huanyuan2.jpg" alt="还原有差距的图片"></p>
<p>于是就想起了这个工具，马上拿出来用了一下。把设计稿主要几个页面裁切了一下，然后试用 Firefox 的响应式开发视图设置好跟设计稿相同的尺寸，然后应用 alloydesigner 加载设计稿图片，再在 Firebug 中调试尺寸等参数，最后达到基本相符：</p>
<p><img src="http://jiangshui.b0.upaiyun.com/blog/2014/05/huanyuan1.jpg" alt="基本与设计稿还原"></p>
<p>由于 Web Font 渲染、结构、流动的单位等，没有完全重合，但这样就已经足够了。</p>
<h2 id="回顾如何还原像素级别的设计稿"><a href="#回顾如何还原像素级别的设计稿" class="headerlink" title="回顾如何还原像素级别的设计稿"></a>回顾如何还原像素级别的设计稿</h2><p>首先先要打开设计稿来认真观察并思考需要做的结构、样式和布局的实现思路等等，认真观察的时候使用马克鳗标注尺寸、颜色等信息。</p>
<p>准备前端基础文件，例如幻灯片组件、Web Font 等等，如果用 Sass 之类预处理器的话，可以将之前马克鳗标注的颜色等信息先声明好变量。这里自荐一下自己常用的前端基础文件结构 <a href="https://github.com/yujiangshui/ysass" target="_blank" rel="external">ysass</a>。</p>
<p>开始通过 Photoshop 自动切图脚本，自动切图。</p>
<p>将切好图片图标等放在 images 文件夹下面，根据马克鳗标注的设计稿开始编写 HTML、CSS 等等。</p>
<p>如果项目要求比较严谨，要求超高还原度，这时候再使用 alloydesigner 工具，进行像素级别的对比调整。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ajax学习 笔记]]></title>
      <url>http://blog.xheartx.com/2016/06/02/2016-06-02-web-Ajax/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-06-02-01.jpg" alt="Ajax学习"></p>
<p>　　&gt;AJAX：Asynchronous Javascript And XML（异步JavaScript和XML）。是指一种创建交互式网页应用的网页开发技术。 AJAX = 异步 JavaScript和XML（标准通用标记语言的子集）。 AJAX 是一种用于创建快速动态网页的技术。 通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。 传统的网页（不使用 AJAX）如果需要更新内容，必须重载整个网页页面。</p>
<a id="more"></a>
<h2 id="Ajax介绍"><a href="#Ajax介绍" class="headerlink" title="Ajax介绍"></a>Ajax介绍</h2><h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">什么是服务器：</span><br><span class="line">搭建简单的本地服务器软件Wamp、XAMPP，提供简单的用户服务，读取数据。</span><br></pre></td></tr></table></figure>
<h3 id="使用Ajax"><a href="#使用Ajax" class="headerlink" title="使用Ajax"></a>使用Ajax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">基础：请求并显示静态TXT、json文件</span><br><span class="line">字符集编码：UTF-8、GB2312，使用相同的编码。</span><br><span class="line">缓存：chrome下的缓存还不是很严重，IE下的缓存比较严重，除非关闭浏览器。</span><br><span class="line"></span><br><span class="line">缓存的工作原理：通过URL进行缓存的。通常可以使用URL?t= + new Date().getTime()</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">window.onload = function ()&#123;</span><br><span class="line">	var oBtn = document.getElementById(&apos;Btn1&apos;);</span><br><span class="line"></span><br><span class="line">	oBtn.onclick = function ()&#123;</span><br><span class="line">		ajax(&apos;aa.txt?t=&apos; + new Date().getTime(),</span><br><span class="line">			function(str)&#123;</span><br><span class="line">				alert(str);</span><br><span class="line">			&#125;,function()&#123;</span><br><span class="line">				alert(&apos;失败&apos;);</span><br><span class="line">			&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="通过Ajax读取的都是字符串"><a href="#通过Ajax读取的都是字符串" class="headerlink" title="通过Ajax读取的都是字符串"></a>通过Ajax读取的都是字符串</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">通过eval()将文件内容解析成JS可以识别的内容</span><br><span class="line">window.onload = function ()&#123;</span><br><span class="line">	var oBtn = document.getElementById(&apos;Btn1&apos;);</span><br><span class="line"></span><br><span class="line">	oBtn.onclick = function ()&#123;</span><br><span class="line">		ajax(&apos;aa.txt?t=&apos; + new Date().getTime(),</span><br><span class="line">			function(str)&#123;</span><br><span class="line">				var SA = eval(str);</span><br><span class="line">				alert(SA[1]);</span><br><span class="line">			&#125;,function()&#123;</span><br><span class="line">				alert(&apos;失败&apos;);</span><br><span class="line">			&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="读取Json文件"><a href="#读取Json文件" class="headerlink" title="读取Json文件"></a>读取Json文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">window.onload = function ()&#123;</span><br><span class="line">	var oBtn = document.getElementById(&apos;Btn1&apos;);</span><br><span class="line">	var oUls = document.getElementById(&apos;ul1&apos;);</span><br><span class="line"></span><br><span class="line">	oBtn.onclick = function ()&#123;</span><br><span class="line">		ajax(&apos;aa.txt?t=&apos; + new Date().getTime(),</span><br><span class="line">			function(str)&#123;</span><br><span class="line">				var SA = eval(str);</span><br><span class="line"></span><br><span class="line">				for(var i=0;i&lt;SA.length;i++)&#123;</span><br><span class="line">					var oLi = document.createElement(&apos;li&apos;);</span><br><span class="line">					oLi.innnerHTML=&apos;用户名：&lt;strong&gt;&apos; + SA[i].name +&apos;&lt;/strong&gt;密码：&lt;span&gt;&apos; + SA[i].pass + &apos;&lt;/span&gt;&apos;;</span><br><span class="line">					//添加到Ul里</span><br><span class="line">					oUl.appenChild(oLi);</span><br><span class="line">				&#125;</span><br><span class="line">				alert(SA[1]);</span><br><span class="line">			&#125;,function()&#123;</span><br><span class="line">				alert(&apos;失败&apos;);</span><br><span class="line">			&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP请求的方法</span><br><span class="line">GET：用于获取数据（如：浏览贴子）</span><br><span class="line">POST：用于上传数据（如：用户注册）</span><br><span class="line">区别：</span><br><span class="line">get是在URL里传送数据：安全性低、容量有限（2000字符），有缓存，适合请求信息</span><br><span class="line">post是通过HTTP请求，安全性好一点，无缓存，适合传递信息</span><br><span class="line">安全的方式使用HTTPS。</span><br><span class="line">GET方式：</span><br><span class="line">?name=word&amp;password=password</span><br></pre></td></tr></table></figure>
<h2 id="Ajax进阶"><a href="#Ajax进阶" class="headerlink" title="Ajax进阶"></a>Ajax进阶</h2><h3 id="创建Ajax"><a href="#创建Ajax" class="headerlink" title="创建Ajax"></a>创建Ajax</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IE6</span><br><span class="line">var oAjax = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line"></span><br><span class="line">var oAjax = new XMLHttpRequest();</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">注意：</span><br><span class="line"></span><br><span class="line">//使用没有定义的变量——报错</span><br><span class="line">alert(a);</span><br><span class="line"></span><br><span class="line">//使用没有定义的属性——undefined</span><br><span class="line">alert(window.a);</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function ()&#123;</span><br><span class="line">	if(window.XMLHttpRequest)&#123;</span><br><span class="line">		var oAjax = new XMLHttpRequest();</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		var oAjax = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="连接服务器"><a href="#连接服务器" class="headerlink" title="连接服务器"></a>连接服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">open（方法，连接的文件名，同步/async异步true）ajxa其实都是异步的</span><br><span class="line">open(method,url,async);</span><br><span class="line">oAjax.opan(&apos;GET&apos;,&apos;a.text?=t&apos;+new Date().getTime(),true);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">同步和异步的区别?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">同步：（一次加载）浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,j进行下一步操作。</span><br><span class="line"></span><br><span class="line">异步：（同时加载）浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容。</span><br><span class="line"></span><br><span class="line">（待完善）</span><br></pre></td></tr></table></figure>
<h3 id="发送请求"><a href="#发送请求" class="headerlink" title="发送请求"></a>发送请求</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">oAjax.send();</span><br><span class="line">send(string);</span><br></pre></td></tr></table></figure>
<h3 id="接收返回"><a href="#接收返回" class="headerlink" title="接收返回"></a>接收返回</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">oAjax.onreadystatechange = function()&#123;</span><br><span class="line">	//浏览器和服务器，进行到哪一步了</span><br><span class="line">	if(oAjax.readyState==4)&#123;</span><br><span class="line">		if(oAjax.status==200)&#123;</span><br><span class="line">			alert(&apos;成功：&apos;+oAjax.status);</span><br><span class="line">		&#125;else&#123;</span><br><span class="line">			alert(&apos;失败：&apos;+oAjax.status);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0 （未初始化）</span><br><span class="line">1 （载入）</span><br><span class="line">2 （载入完成）send()方法完成，已接收全部信息</span><br><span class="line">3 （解析）正在解析响应</span><br><span class="line">4 （完成）完成但不代表成功</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Ajax Status请求状态</span><br><span class="line"></span><br><span class="line">200 成功</span><br><span class="line">301</span><br><span class="line">304</span><br><span class="line">404</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IE6</span><br><span class="line">var oAjax = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line"></span><br><span class="line">var oAjax = new XMLHttpRequest();</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">封装函数</span><br><span class="line"></span><br><span class="line">function ajax(url,fnSucc,fnFaild)&#123;</span><br><span class="line">	if(window.XMLHttpRequest)&#123;</span><br><span class="line">		var oAjax = new XMLHttpRequest();</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		var oAjax = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	oAjax.opan(&apos;GET&apos;,&apos;url?=t&apos;+new Date().getTime(),true);</span><br><span class="line"></span><br><span class="line">	oAjax.send();</span><br><span class="line"></span><br><span class="line">	oAjax.onreadystatechange = function()&#123;</span><br><span class="line">		if(oAjax.readyState==4)&#123;</span><br><span class="line">			if(oAjax.status==200)&#123;</span><br><span class="line">				fnSucc(oAjax.responseText);</span><br><span class="line">			&#125;else&#123;</span><br><span class="line">				if(fnFaild)&#123;</span><br><span class="line">					fnFaild(oAjax.status);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ajax(&apos;a.txt&apos;,function(str)&#123;</span><br><span class="line">	alert(str);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">封装函数</span><br><span class="line"></span><br><span class="line">function ajax(url,data,fnSucc,fnFaild)&#123;</span><br><span class="line">	if(window.XMLHttpRequest)&#123;</span><br><span class="line">		var oAjax = new XMLHttpRequest();</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		var oAjax = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	oAjax.opan(&apos;POST&apos;,&apos;url&apos;,true);</span><br><span class="line"></span><br><span class="line">	oAjax.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;);</span><br><span class="line"></span><br><span class="line">	oAjax.send(data);</span><br><span class="line"></span><br><span class="line">	oAjax.onreadystatechange = function()&#123;</span><br><span class="line">		if(oAjax.readyState==4)&#123;</span><br><span class="line">			if(oAjax.status==200)&#123;</span><br><span class="line">				fnSucc(oAjax.responseText);</span><br><span class="line">			&#125;else&#123;</span><br><span class="line">				if(fnFaild)&#123;</span><br><span class="line">					fnFaild(oAjax.status);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ajax(&apos;a.txt&apos;,&apos;name=&apos; + document.getElementById(&quot;staffName&quot;).value + &apos;&amp;number=&apos; + document.getElementById(&quot;staffNumber&quot;).value + &apos;&amp;sex=&apos; + document.getElementById(&quot;staffSex&quot;).value + &apos;&amp;job=&apos; + document.getElementById(&quot;staffJob&quot;).value,function(str)&#123;</span><br><span class="line">	alert(str);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="Ajax数据"><a href="#Ajax数据" class="headerlink" title="Ajax数据"></a>Ajax数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XML、Json：同等数据量，XML更大</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[响应式布局 笔记]]></title>
      <url>http://blog.xheartx.com/2016/05/12/2016-05-12-web-media/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-05-12-02.jpg" alt="响应式布局"></p>
<blockquote>
<p>自用笔记，不做详解，仅供参考。在此记录学习响应式布局中整理摘抄的一些笔记。</p>
</blockquote>
<a id="more"></a>
<h2 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h2><p>响应式布局麻烦之处就是每个尺寸的都要进行css定义，下面有搜集到的各种尺寸css Media Query内容，搜集来源：media-queries-for-standard-devices好东西哦。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br></pre></td><td class="code"><pre><span class="line">stylus</span><br><span class="line">// Media queries</span><br><span class="line">mq-mobile = &quot;screen and (max-width: 479px)&quot;</span><br><span class="line">mq-tablet = &quot;screen and (min-width: 480px) and (max-width: 767px)&quot;</span><br><span class="line">mq-iPhones4 = &quot;only screen and (min-device-width: 320px) and (max-device-width: 480px) and (-webkit-min-device-pixel-ratio: 2)&quot;</span><br><span class="line">mq-normal = &quot;screen and (min-width: 768px)&quot;</span><br><span class="line"></span><br><span class="line">.page-number</span><br><span class="line">    display: inline-block</span><br><span class="line">    @media mq-mobile</span><br><span class="line">        display: none</span><br><span class="line">    @media mq-tablet</span><br><span class="line">        color:red</span><br><span class="line">    @media mq-iPhones4</span><br><span class="line">        font-size:12px</span><br><span class="line">    @media mq-normal</span><br><span class="line">        background:yellow</span><br><span class="line">编译成</span><br><span class="line">.page-number &#123;  display: inline-block;&#125;</span><br><span class="line">@media screen and (max-width: 479px) &#123;</span><br><span class="line">  .page-number &#123;    display: none;  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (min-width: 480px) and (max-width: 767px) &#123;</span><br><span class="line">  .page-number &#123;    color: #f00;  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-device-width: 320px) and (max-device-width: 480px) and (-webkit-min-device-pixel-ratio: 2) &#123;</span><br><span class="line">  .page-number &#123;    font-size: 12px;  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (min-width: 768px) &#123;</span><br><span class="line">  .page-number &#123;    background: #ff0;  &#125;</span><br><span class="line">&#125;</span><br><span class="line">Phones and Handhelds</span><br><span class="line">iPhones</span><br><span class="line">/* ----------- iPhone 4 and 4S ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 320px)   and (max-device-width: 480px)  and (-webkit-min-device-pixel-ratio: 2) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media only screen   and (min-device-width: 320px)   and (max-device-width: 480px)  and (-webkit-min-device-pixel-ratio: 2)  and (orientation: portrait) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 320px)   and (max-device-width: 480px)  and (-webkit-min-device-pixel-ratio: 2)  and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* ----------- iPhone 5 and 5S ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 320px)   and (max-device-width: 568px)  and (-webkit-min-device-pixel-ratio: 2) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media only screen   and (min-device-width: 320px)   and (max-device-width: 568px)  and (-webkit-min-device-pixel-ratio: 2)  and (orientation: portrait) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 320px)   and (max-device-width: 568px)  and (-webkit-min-device-pixel-ratio: 2)  and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* ----------- iPhone 6 ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 375px)   and (max-device-width: 667px)   and (-webkit-min-device-pixel-ratio: 2) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media only screen   and (min-device-width: 375px)   and (max-device-width: 667px)   and (-webkit-min-device-pixel-ratio: 2)  and (orientation: portrait) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 375px)   and (max-device-width: 667px)   and (-webkit-min-device-pixel-ratio: 2)  and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* ----------- iPhone 6+ ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 414px)   and (max-device-width: 736px)   and (-webkit-min-device-pixel-ratio: 3) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media only screen   and (min-device-width: 414px)   and (max-device-width: 736px)   and (-webkit-min-device-pixel-ratio: 3)  and (orientation: portrait) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 414px)   and (max-device-width: 736px)   and (-webkit-min-device-pixel-ratio: 3)  and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Galaxy Phones</span><br><span class="line">/* ----------- Galaxy S3 ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media screen   and (device-width: 320px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 2) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media screen   and (device-width: 320px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 2)   and (orientation: portrait) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media screen   and (device-width: 320px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 2)   and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* ----------- Galaxy S4 ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media screen   and (device-width: 320px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 3) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media screen   and (device-width: 320px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 3)   and (orientation: portrait) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media screen   and (device-width: 320px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 3)   and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* ----------- Galaxy S5 ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media screen   and (device-width: 360px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 3) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media screen   and (device-width: 360px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 3)   and (orientation: portrait) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media screen   and (device-width: 360px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 3)   and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">HTC Phones</span><br><span class="line">/* ----------- HTC One ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media screen   and (device-width: 360px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 3) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media screen   and (device-width: 360px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 3)   and (orientation: portrait) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media screen   and (device-width: 360px)   and (device-height: 640px)   and (-webkit-device-pixel-ratio: 3)   and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Tablets</span><br><span class="line">iPads</span><br><span class="line">/* ----------- iPad mini ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 768px)   and (max-device-width: 1024px)   and (-webkit-min-device-pixel-ratio: 1) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media only screen   and (min-device-width: 768px)   and (max-device-width: 1024px)   and (orientation: portrait)   and (-webkit-min-device-pixel-ratio: 1) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 768px)   and (max-device-width: 1024px)   and (orientation: landscape)   and (-webkit-min-device-pixel-ratio: 1) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* ----------- iPad 1 and 2 ----------- */</span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 768px)   and (max-device-width: 1024px)   and (-webkit-min-device-pixel-ratio: 1) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media only screen   and (min-device-width: 768px)   and (max-device-width: 1024px)   and (orientation: portrait)   and (-webkit-min-device-pixel-ratio: 1) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 768px)   and (max-device-width: 1024px)   and (orientation: landscape)   and (-webkit-min-device-pixel-ratio: 1) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* ----------- iPad 3 and 4 ----------- */</span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 768px)   and (max-device-width: 1024px)   and (-webkit-min-device-pixel-ratio: 2) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media only screen   and (min-device-width: 768px)   and (max-device-width: 1024px)   and (orientation: portrait)   and (-webkit-min-device-pixel-ratio: 2) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 768px)   and (max-device-width: 1024px)   and (orientation: landscape)   and (-webkit-min-device-pixel-ratio: 2) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Galaxy Tablets</span><br><span class="line">/* ----------- Galaxy Tab 10.1 ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media   (min-device-width: 800px)   and (max-device-width: 1280px) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media   (max-device-width: 800px)   and (orientation: portrait) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media   (max-device-width: 1280px)   and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Nexus Tablets</span><br><span class="line">/* ----------- Asus Nexus 7 ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media screen   and (device-width: 601px)   and (device-height: 906px)   and (-webkit-min-device-pixel-ratio: 1.331)   and (-webkit-max-device-pixel-ratio: 1.332) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media screen   and (device-width: 601px)   and (device-height: 906px)   and (-webkit-min-device-pixel-ratio: 1.331)   and (-webkit-max-device-pixel-ratio: 1.332)   and (orientation: portrait) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media screen   and (device-width: 601px)   and (device-height: 906px)   and (-webkit-min-device-pixel-ratio: 1.331)   and (-webkit-max-device-pixel-ratio: 1.332)   and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Kindle Fire</span><br><span class="line">/* ----------- Kindle Fire HD 7&quot; ----------- */</span><br><span class="line"></span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 800px)   and (max-device-width: 1280px)   and (-webkit-min-device-pixel-ratio: 1.5) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Portrait */</span><br><span class="line">@media only screen   and (min-device-width: 800px)   and (max-device-width: 1280px)   and (-webkit-min-device-pixel-ratio: 1.5)   and (orientation: portrait) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 800px)   and (max-device-width: 1280px)   and (-webkit-min-device-pixel-ratio: 1.5)   and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* ----------- Kindle Fire HD 8.9&quot; ----------- */</span><br><span class="line">/* Portrait and Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 1200px)   and (max-device-width: 1600px)   and (-webkit-min-device-pixel-ratio: 1.5) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">/* Portrait */</span><br><span class="line">@media only screen   and (min-device-width: 1200px)   and (max-device-width: 1600px)   and (-webkit-min-device-pixel-ratio: 1.5)   and (orientation: portrait) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Landscape */</span><br><span class="line">@media only screen   and (min-device-width: 1200px)   and (max-device-width: 1600px)   and (-webkit-min-device-pixel-ratio: 1.5)   and (orientation: landscape) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Laptops</span><br><span class="line">/* ----------- Non-Retina Screens ----------- */</span><br><span class="line">@media screen   and (min-device-width: 1200px)   and (max-device-width: 1600px)   and (-webkit-min-device-pixel-ratio: 1) &#123;</span><br><span class="line">&#125;</span><br><span class="line">/* ----------- Retina Screens ----------- */</span><br><span class="line">@media screen   and (min-device-width: 1200px)   and (max-device-width: 1600px)   and (-webkit-min-device-pixel-ratio: 2)  and (min-resolution: 192dpi) &#123;</span><br><span class="line">&#125;</span><br><span class="line">Wearables</span><br><span class="line">Apple Watch</span><br><span class="line">/* ----------- Apple Watch ----------- */</span><br><span class="line">@media  (max-device-width: 42mm)  and (min-device-width: 38mm) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Moto 360 Watch</span><br><span class="line">/* ----------- Moto 360 Watch ----------- */</span><br><span class="line">@media   (max-device-width: 218px)  and (max-device-height: 281px) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[实用的正则表达式 汇总]]></title>
      <url>http://blog.xheartx.com/2016/04/30/2016-04-30-web-RegExp/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-04-30-01.png" alt="实用的正则表达式 "></p>
<blockquote>
<p>自用笔记：本文属于自用笔记，不做详解，仅供参考。在此记录一些实用的正则表达式。</p>
</blockquote>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line">匹配中文字符的正则表达式： [u4e00-u9fa5]</span><br><span class="line"></span><br><span class="line">匹配双字节字符（包括汉字在内）：[^x00-xff]</span><br><span class="line"></span><br><span class="line">匹配空行的正则表达式：n[s| ]*r</span><br><span class="line"></span><br><span class="line">匹配 HTML 标记的正则表达式：&lt;(._)&gt;._&lt;/1&gt;|&lt;(.*) /&gt;</span><br><span class="line"></span><br><span class="line">匹配首尾空格的正则表达式：(^s_)|(s_$)</span><br><span class="line"></span><br><span class="line">匹配 IP 地址的正则表达式：/(d+).(d+).(d+).(d+)/g</span><br><span class="line"></span><br><span class="line">匹配 Email 地址的正则表达式：w+([-+.]w+)_@w+([-.]w+)_.w+([-.]w+)*</span><br><span class="line"></span><br><span class="line">匹配网址 URL 的正则表达式：&lt;a&gt;&lt;/a&gt;[http://(/[w-]+.)+[w-]+(/[w-](http://(/[w-]+.)+[w-]+(/[w-) ./?%&amp;=]*)?</span><br><span class="line"></span><br><span class="line">sql 语句：^(select|drop|delete|create|update|insert).*$</span><br><span class="line"></span><br><span class="line">非负整数：^d+$</span><br><span class="line"></span><br><span class="line">正整数：^[0-9]_[1-9][0-9]_$</span><br><span class="line"></span><br><span class="line">非正整数：^((-d+)|(0+))$</span><br><span class="line"></span><br><span class="line">负整数：^-[0-9]_[1-9][0-9]_$</span><br><span class="line"></span><br><span class="line">整数：^-?d+$</span><br><span class="line"></span><br><span class="line">非负浮点数：^d+(.d+)?$</span><br><span class="line"></span><br><span class="line">正浮点数：^((0-9)+.[0-9]_[1-9][0-9]_)|([0-9]_[1-9][0-9]_.[0-9]+)|([0-9]_[1-9][0-9]_))$</span><br><span class="line"></span><br><span class="line">非正浮点数：^((-d+.d+)?)|(0+(.0+)?))$</span><br><span class="line"></span><br><span class="line">英文字符串：^[A-Za-z]+$</span><br><span class="line"></span><br><span class="line">英文大写串：^[A-Z]+$</span><br><span class="line"></span><br><span class="line">英文小写串：^[a-z]+$</span><br><span class="line"></span><br><span class="line">英文字符数字串：^[A-Za-z0-9]+$</span><br><span class="line"></span><br><span class="line">英数字加下划线串：^w+$</span><br><span class="line"></span><br><span class="line">E-mail地址：^[w-]+(.[w-]+)*@[w-]+(.[w-]+)+$</span><br><span class="line"></span><br><span class="line">URL：^[a-zA-Z]+://(w+(-w+)_)(.(w+(-w+)_))_(?s_)?$ 或：^[http://[A-Za-z0-9]+.[A-Za-z0-9]+[/=?%-&amp;_~`@[]&apos;:+!]*([^&lt;&gt;&quot;&quot;])*$](http://[A-Za-z0-9]+.[A-Za-z0-9]+[/=?%-&amp;_~`@[]&apos;:+!]*([^&lt;&gt;&quot;&quot;])*$)</span><br><span class="line"></span><br><span class="line">邮政编码：^[1-9]d&#123;5&#125;$</span><br><span class="line"></span><br><span class="line">电话号码：^(((d&#123;2,3&#125;))|(d&#123;3&#125;-))?((0d&#123;2,3&#125;)|0d&#123;2,3&#125;-)?[1-9]d&#123;6,7&#125;(-d&#123;1,4&#125;)?$</span><br><span class="line"></span><br><span class="line">手机号码：^(((d&#123;2,3&#125;))|(d&#123;3&#125;-))?13d&#123;9&#125;$</span><br><span class="line"></span><br><span class="line">提取信息中的网络链接：(h|H)(r|R)(e|E)(f|F) _=_ (‘|&quot;)?(w||/|.)+(‘|&quot;| *|&gt;)?</span><br><span class="line"></span><br><span class="line">提取信息中的邮件地址：w+([-+.]w+)_@w+([-.]w+)_.w+([-.]w+)*</span><br><span class="line"></span><br><span class="line">提取信息中的图片链接：(s|S)(r|R)(c|C) _=_ (‘|&quot;)?(w||/|.)+(‘|&quot;| *|&gt;)?</span><br><span class="line"></span><br><span class="line">提取信息中的 IP 地址：(d+).(d+).(d+).(d+)</span><br><span class="line"></span><br><span class="line">提取信息中的中国手机号码：(86)_0_13d&#123;9&#125;</span><br><span class="line"></span><br><span class="line">提取信息中的中国固定电话号码：((d&#123;3,4&#125;)|d&#123;3,4&#125;-|s)?d&#123;8&#125;</span><br><span class="line"></span><br><span class="line">提取信息中的中国电话号码（包括移动和固定电话）：((d&#123;3,4&#125;)|d&#123;3,4&#125;-|s)?d&#123;7,14&#125;</span><br><span class="line"></span><br><span class="line">提取信息中的中国邮政编码：[1-9]&#123;1&#125;(d+)&#123;5&#125;</span><br><span class="line"></span><br><span class="line">提取信息中的浮点数（即小数）：(-?d*).?d+</span><br><span class="line"></span><br><span class="line">提取信息中的任何数字 ：(-?d*)(.d+)?</span><br><span class="line"></span><br><span class="line">IP：(d+).(d+).(d+).(d+)</span><br><span class="line"></span><br><span class="line">电话区号：^0d&#123;2,3&#125;$</span><br><span class="line"></span><br><span class="line">腾讯 QQ 号：^[1-9]_[1-9][0-9]_$</span><br><span class="line"></span><br><span class="line">帐号（字母开头，允许 5-16 字节，允许字母数字下划线）：^[a-zA-Z][a-zA-Z0-9_]&#123;4,15&#125;$</span><br><span class="line"></span><br><span class="line">中文、英文、数字及下划线：^[u4e00-u9fa5_a-zA-Z0-9]+$</span><br><span class="line"></span><br><span class="line">* * *</span><br><span class="line"></span><br><span class="line">将下一个字符标记为一个特殊字符、或一个原义字符、或一个后向引用、或一个八进制转义符。</span><br><span class="line"></span><br><span class="line">^ 匹配输入字符串的开始位置。如果设置了 RegExp 对象的Multiline 属性，^ 也匹配 ’n’ 或 ’r’ 之后的位置。</span><br><span class="line"></span><br><span class="line">$ 匹配输入字符串的结束位置。如果设置了 RegExp 对象的Multiline 属性，$ 也匹配 ’n’ 或 ’r’ 之前的位置。</span><br><span class="line"></span><br><span class="line">*   匹配前面的子表达式零次或多次。</span><br><span class="line"></span><br><span class="line">*   匹配前面的子表达式一次或多次。+ 等价于 &#123;1,&#125;。</span><br><span class="line"></span><br><span class="line">? 匹配前面的子表达式零次或一次。? 等价于 &#123;0,1&#125;。</span><br><span class="line"></span><br><span class="line">&#123;n&#125; n 是一个非负整数，匹配确定的n 次。</span><br><span class="line"></span><br><span class="line">&#123;n,&#125; n 是一个非负整数，至少匹配n 次。</span><br><span class="line"></span><br><span class="line">&#123;n,m&#125; m 和 n 均为非负整数，其中n &lt; = m。最少匹配 n 次且最多匹配 m 次。在逗号和两个数之间不能有空格。</span><br><span class="line"></span><br><span class="line">? 当该字符紧跟在任何一个其他限制符 (*, +, ?, &#123;n&#125;, &#123;n,&#125;, &#123;n,m&#125;) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。</span><br><span class="line"></span><br><span class="line">. 匹配除 &quot;n&quot; 之外的任何单个字符。要匹配包括 ’n’ 在内的任何字符，请使用象 ’[.n]’ 的模式。</span><br><span class="line"></span><br><span class="line">(pattern) 匹配pattern 并获取这一匹配。</span><br><span class="line"></span><br><span class="line">(?:pattern) 匹配pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。</span><br><span class="line"></span><br><span class="line">(?=pattern) 正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。</span><br><span class="line"></span><br><span class="line">(?!pattern) 负向预查，与(?=pattern)作用相反</span><br><span class="line"></span><br><span class="line">x|y 匹配 x 或 y。</span><br><span class="line"></span><br><span class="line">[xyz] 字符集合。</span><br><span class="line"></span><br><span class="line">[^xyz] 负值字符集合。</span><br><span class="line"></span><br><span class="line">[a-z] 字符范围，匹配指定范围内的任意字符。</span><br><span class="line"></span><br><span class="line">[^a-z] 负值字符范围，匹配任何不在指定范围内的任意字符。</span><br><span class="line"></span><br><span class="line">b 匹配一个单词边界，也就是指单词和空格间的位置。</span><br><span class="line"></span><br><span class="line">B 匹配非单词边界。</span><br><span class="line"></span><br><span class="line">cx 匹配由x指明的控制字符。</span><br><span class="line"></span><br><span class="line">d 匹配一个数字字符。等价于 [0-9]。</span><br><span class="line"></span><br><span class="line">D 匹配一个非数字字符。等价于 [^0-9]。</span><br><span class="line"></span><br><span class="line">f 匹配一个换页符。等价于 x0c 和 cL。</span><br><span class="line"></span><br><span class="line">n 匹配一个换行符。等价于 x0a 和 cJ。</span><br><span class="line"></span><br><span class="line">r 匹配一个回车符。等价于 x0d 和 cM。</span><br><span class="line"></span><br><span class="line">s 匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ fnrtv]。</span><br><span class="line"></span><br><span class="line">S 匹配任何非空白字符。等价于 [^ fnrtv]。</span><br><span class="line"></span><br><span class="line">t 匹配一个制表符。等价于 x09 和 cI。</span><br><span class="line"></span><br><span class="line">v 匹配一个垂直制表符。等价于 x0b 和 cK。</span><br><span class="line"></span><br><span class="line">w 匹配包括下划线的任何单词字符。等价于’[A-Za-z0-9_]’。</span><br><span class="line"></span><br><span class="line">W 匹配任何非单词字符。等价于 ’[^A-Za-z0-9_]’。</span><br><span class="line"></span><br><span class="line">xn 匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。</span><br><span class="line"></span><br><span class="line">num 匹配 num，其中num是一个正整数。对所获取的匹配的引用。</span><br><span class="line"></span><br><span class="line">n 标识一个八进制转义值或一个后向引用。如果 n 之前至少 n 个获取的子表达式，则 n 为后向引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。</span><br><span class="line"></span><br><span class="line">nm 标识一个八进制转义值或一个后向引用。如果 nm 之前至少有is preceded by at least nm 个获取得子表达式，则 nm 为后向引用。如果 nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的后向引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 nm 将匹配八进制转义值 nm。</span><br><span class="line"></span><br><span class="line">nml 如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。</span><br><span class="line"></span><br><span class="line">un 匹配 n，其中 n 是一个用四个十六进制数字表示的Unicode字符。</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 笔记]]></title>
      <url>http://blog.xheartx.com/2016/04/26/2016-04-26-web-javascriptNotes/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-04-26-01.png" alt="JavaScript 笔记"></p>
<blockquote>
<p>自用笔记，不做详解，仅供参考。在此记录学习JavaScript中整理摘抄的一些笔记。</p>
</blockquote>
<a id="more"></a>
<h2 id="JavaScript基础事件操作"><a href="#JavaScript基础事件操作" class="headerlink" title="JavaScript基础事件操作"></a>JavaScript基础事件操作</h2><h3 id="监听事件"><a href="#监听事件" class="headerlink" title="监听事件"></a>监听事件</h3><p>浏览器会根据某些操作触发对应事件，如果我们需要针对某种事件进行处理，则需要监听这个事件。监听事件的方法主要有以下几种：</p>
<h4 id="HTML-内联属性（避免使用）"><a href="#HTML-内联属性（避免使用）" class="headerlink" title="HTML 内联属性（避免使用）"></a>HTML 内联属性（避免使用）</h4><p>HTML 元素里面直接填写事件有关属性，属性值为 JavaScript 代码，即可在触发该事件的时候，执行属性值的内容。</p>
<p>例如：</p>
<pre><code>&lt;button onclick=&quot;alert(&apos;你点击了这个按钮&apos;);&quot;&gt;点击这个按钮&lt;/button&gt;
</code></pre><p><code>onclick</code> 属性表示触发 <code>click</code>，属性值的内容（JavaScript 代码）会在单击该 HTML 节点时执行。</p>
<p>显而易见，使用这种方法，JavaScript 代码与 HTML 代码耦合在了一起，不便于维护和开发。所以除非在必须使用的情况（例如统计链接点击数据）下，尽量避免使用这种方法。</p>
<h4 id="DOM-属性绑定"><a href="#DOM-属性绑定" class="headerlink" title="DOM 属性绑定"></a>DOM 属性绑定</h4><p>也可以直接设置 DOM 属性来指定某个事件对应的处理函数，这个方法比较简单：</p>
<pre><code>element.onclick = function(event){
    alert(&apos;你点击了这个按钮&apos;);
};
</code></pre><p>上面代码就是监听 <code>element</code> 节点的 <code>click</code> 事件。它比较简单易懂，而且有较好的兼容性。但是也有缺陷，因为直接赋值给对应属性，如果你在后面代码中再次为 <code>element</code> 绑定一个回调函数，会覆盖掉之前回调函数的内容。</p>
<p>虽然也可以用一些方法实现多个绑定，但还是推荐下面的标准事件监听函数。</p>
<h4 id="使用事件监听函数"><a href="#使用事件监听函数" class="headerlink" title="使用事件监听函数"></a>使用事件监听函数</h4><p>标准的事件监听函数如下：</p>
<pre><code>element.addEventListener(&lt;event-name&gt;, &lt;callback&gt;, &lt;use-capture&gt;);
</code></pre><p>表示在 <code>element</code> 这个对象上面添加一个事件监听器，当监听到有 <code>&lt;event-name&gt;</code> 事件发生的时候，调用 <code>&lt;callback&gt;</code> 这个回调函数。至于 <code>&lt;use-capture&gt;</code> 这个参数，表示该事件监听是在“捕获”阶段中监听（设置为 true）还是在“冒泡”阶段中监听（设置为 false）。关于捕获和冒泡，我们会在下面讲解。</p>
<p>用标准事件监听函数改写上面的例子：</p>
<pre><code>var btn = document.getElementsByTagName(&apos;button&apos;);
btn[0].addEventListener(&apos;click&apos;, function() {
    alert(&apos;你点击了这个按钮&apos;);
}, false);
</code></pre><p>这里最好是为 HTML 结构定义个 id 或者 class 属性，方便选择，在这里只作为演示使用。</p>
<p>Demo：</p>
<iframe width="100%" height="300" src="http://jsfiddle.net/yujiangshui/L8uucrga/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<h3 id="移除事件监听"><a href="#移除事件监听" class="headerlink" title="移除事件监听"></a>移除事件监听</h3><p>当我们为某个元素绑定了一个事件，每次触发这个事件的时候，都会执行事件绑定的回调函数。如果我们想解除绑定，需要使用 <code>removeEventListener</code> 方法：</p>
<pre><code>element.removeEventListener(&lt;event-name&gt;, &lt;callback&gt;, &lt;use-capture&gt;);
</code></pre><p>需要注意的是，绑定事件时的回调函数不能是匿名函数，必须是一个声明的函数，因为解除事件绑定时需要传递这个回调函数的引用，才可以断开绑定。例如：</p>
<pre><code>var fun = function() {
    // function logic
};

element.addEventListener(&apos;click&apos;, fun, false);
element.removeEventListener(&apos;click&apos;, fun, false);
</code></pre><p>Demo：</p>
<iframe width="100%" height="300" src="http://jsfiddle.net/yujiangshui/L8uucrga/1/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<h2 id="事件触发过程"><a href="#事件触发过程" class="headerlink" title="事件触发过程"></a>事件触发过程</h2><p>在上面大体了解了事件是什么、如何监听并执行某些操作，但我们对事件触发整个过程还不够了解。</p>
<p>下图就是事件的触发过程，借用了 <a href="http://www.w3.org/TR/DOM-Level-3-Events/#event-flow" target="_blank" rel="external">W3C 的图片</a></p>
<p><img src="http://jiangshui.b0.upaiyun.com/blog/2014/12/event0.svg" alt="W3C Event Phase"></p>
<h3 id="捕获阶段（Capture-Phase）"><a href="#捕获阶段（Capture-Phase）" class="headerlink" title="捕获阶段（Capture Phase）"></a>捕获阶段（Capture Phase）</h3><p>当我们在 DOM 树的某个节点发生了一些操作（例如单击、鼠标移动上去），就会有一个事件发射过去。这个事件从 Window 发出，不断经过下级节点直到目标节点。在到达目标节点之前的过程，就是捕获阶段（Capture Phase）。</p>
<p>所有经过的节点，都会触发这个事件。捕获阶段的任务就是建立这个事件传递路线，以便后面冒泡阶段顺着这条路线返回 Window。</p>
<p>监听某个在捕获阶段触发的事件，需要在事件监听函数传递第三个参数 <code>true</code>。</p>
<pre><code>element.addEventListener(&lt;event-name&gt;, &lt;callback&gt;, true);
</code></pre><p>但一般使用时我们往往传递 false，会在后面说明原因。</p>
<h3 id="目标阶段（Target-Phase）"><a href="#目标阶段（Target-Phase）" class="headerlink" title="目标阶段（Target Phase）"></a>目标阶段（Target Phase）</h3><p>当事件跑啊跑，跑到了事件触发目标节点那里，最终在目标节点上触发这个事件，就是目标阶段。</p>
<p>需要注意的时，事件触发的目标总是最底层的节点。比如你点击一段文字，你以为你的事件目标节点在 <code>div</code> 上，但实际上触发在 <code>&lt;p&gt;</code>、<code>&lt;span&gt;</code> 等子节点上。例如：</p>
<iframe width="100%" height="300" src="http://jsfiddle.net/yujiangshui/ju2ujmzp/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<p>在 Demo 中，我监听单击事件，将目标节点的 tag name 弹出。当你点击加粗字体时，事件的目标节点就为最底层的 <code>&lt;strong&gt;</code> 节点。</p>
<h3 id="冒泡阶段（Bubbling-Phase）"><a href="#冒泡阶段（Bubbling-Phase）" class="headerlink" title="冒泡阶段（Bubbling Phase）"></a>冒泡阶段（Bubbling Phase）</h3><p>当事件达到目标节点之后，就会沿着原路返回，由于这个过程类似水泡从底部浮到顶部，所以称作冒泡阶段。</p>
<p>在实际使用中，你并不需要把事件监听函数准确绑定到最底层的节点也可以正常工作。比如在上例，你想为这个 <code>&lt;div&gt;</code> 绑定单击时的回调函数，你无须为这个 <code>&lt;div&gt;</code> 下面的所有子节点全部绑定单击事件，只需要为 <code>&lt;div&gt;</code> 这一个节点绑定即可。因为发生它子节点的单击事件，都会冒泡上去，发生在 <code>&lt;div&gt;</code> 上面。</p>
<p>针对这三个阶段，wilsonpage 做了一个非常棒的 <a href="http://jsbin.com/exezex/4/edit?css,js,output" target="_blank" rel="external">Demo</a>，可以看下：</p>
<p><a class="jsbin-embed" href="http://jsbin.com/exezex/4/embed?css,js,output" target="_blank" rel="external">JS Bin</a><script src="http://static.jsbin.com/js/embed.js"></script></p>
<h3 id="为什么不用第三个参数-true"><a href="#为什么不用第三个参数-true" class="headerlink" title="为什么不用第三个参数 true"></a>为什么不用第三个参数 true</h3><p>介绍完上面三个事件触发阶段，我们来看下这个问题。</p>
<p>所有介绍事件的文章都会说，在使用 <code>addEventListener</code> 函数来监听事件时，第三个参数设置为 <code>false</code>，这样监听事件时只会监听冒泡阶段发生的事件。</p>
<p>这是因为 IE 浏览器不支持在捕获阶段监听事件，为了统一而设置的，毕竟 IE 浏览器的份额是不可忽略的。</p>
<p>IE 浏览器在事件这方面与标准还有一些其他的差异，我们会在后面集中介绍。</p>
<h3 id="使用事件代理（Event-Delegate）提升性能"><a href="#使用事件代理（Event-Delegate）提升性能" class="headerlink" title="使用事件代理（Event Delegate）提升性能"></a>使用事件代理（Event Delegate）提升性能</h3><p>因为事件有冒泡机制，所有子节点的事件都会顺着父级节点跑回去，所以我们可以通过监听父级节点来实现监听子节点的功能，这就是事件代理。</p>
<p>使用事件代理主要有两个优势：</p>
<ol>
<li>减少事件绑定，提升性能。之前你需要绑定一堆子节点，而现在你只需要绑定一个父节点即可。减少了绑定事件监听函数的数量。</li>
<li>动态变化的 DOM 结构，仍然可以监听。当一个 DOM 动态创建之后，不会带有任何事件监听，除非你重新执行事件监听函数，而使用事件监听无须担忧这个问题。</li>
</ol>
<p>看一个例子：</p>
<iframe width="100%" height="300" src="http://jsfiddle.net/yujiangshui/ju2ujmzp/1/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<p>上面例子中，为了简便，我使用 jQuery 来实现普通事件绑定和事件代理。我的目标是监听所有 <code>a</code> 链接的单击事件，<code>.ul1</code>  是常规的事件绑定方法，jQuery 会循环每一个 <code>.ul &gt; a</code> 结构并绑定事件监听函数。<code>.ul2</code> 则是事件监听的方法，jQuery 只为 <code>.ul2</code> 结构绑定事件监听函数，因为 <code>.ul2</code> 下面可能会有很多无关节点也会触发 <code>click</code> 事件，所以我在 <code>on</code> 函数里传递了第二个参数，表示只监听 <code>a</code> 子节点的事件。</p>
<p>它们都可以正常工作，但是当我动态创建新 DOM 结构的时候，第一个 <code>ul</code> 问题就出现了，新创建结构虽然还是 <code>.ul1 &gt; a</code>，但是没有绑定事件，所以无法执行回调函数。而第二个 <code>ul</code> 工作的很好，因为点击新创建的 DOM ，它的事件会冒泡到父级节点进行处理。</p>
<p>如果使用原生的方式实现事件代理，需要注意过滤非目标节点，可以通过 id、class 或者 tagname 等等，例如：</p>
<pre><code>element.addEventListener(&apos;click&apos;, function(event) {
    // 判断是否是 a 节点
    if ( event.target.tagName == &apos;A&apos; ) {
        // a 的一些交互操作
    }
}, false);
</code></pre><h3 id="停止事件冒泡（stopPropagation）"><a href="#停止事件冒泡（stopPropagation）" class="headerlink" title="停止事件冒泡（stopPropagation）"></a>停止事件冒泡（stopPropagation）</h3><p>所有的事情都会有对立面，事件的冒泡阶段虽然看起来很好，也会有不适合的场所。比较复杂的应用，由于事件监听比较复杂，可能会希望只监听发生在具体节点的事件。这个时候就需要停止事件冒泡。</p>
<p>停止事件冒泡需要使用事件对象的 <code>stopPropagation</code> 方法，具体代码如下：</p>
<pre><code>element.addEventListener(&apos;click&apos;, function(event) {
    event.stopPropagation();
}, false);
</code></pre><p>在事件监听的回调函数里，会传递一个参数，这就是 <code>Event</code> 对象，在这个对象上调用 <code>stopPropagation</code> 方法即可停止事件冒泡。举个停止事件冒泡的应用实例：</p>
<p><a class="jsbin-embed" href="http://jsbin.com/aparot/3/embed?html,js,output" target="_blank" rel="external">JS Bin</a><script src="http://static.jsbin.com/js/embed.js"></script></p>
<p>在上面例子中，有一个弹出层，我们可以在弹出层上做任何操作，例如 <code>click</code> 等。当我们想关掉这个弹出层，在弹出层外面的任意结构中点击即可关掉。它首先对 <code>document</code> 节点进行 <code>click</code> 事件监听，所有的 <code>click</code> 事件，都会让弹出层隐藏掉。同样的，我们在弹出层上面的单击操作也会导致弹出层隐藏。之后我们对弹出层使用停止事件冒泡，掐断了单击事件返回 <code>document</code> 的冒泡路线，这样在弹出层的操作就不会被 <code>document</code> 的事件处理函数监听到。</p>
<p>更多关于 <code>Event</code> 对象的事情，我们会在下面介绍。</p>
<h2 id="事件的-Event-对象"><a href="#事件的-Event-对象" class="headerlink" title="事件的 Event 对象"></a>事件的 Event 对象</h2><p>当一个事件被触发的时候，会创建一个事件对象（Event Object），这个对象里面包含了一些有用的属性或者方法。事件对象会作为第一个参数，传递给我们的毁掉函数。我们可以使用下面代码，在浏览器中打印出这个事件对象：</p>
<pre><code>&lt;button&gt;打印 Event Object&lt;/button&gt;

&lt;script&gt;
    var btn = document.getElementsByTagName(&apos;button&apos;);
    btn[0].addEventListener(&apos;click&apos;, function(event) {
        console.log(event);
    }, false);
&lt;/script&gt;
</code></pre><p>就可以看到一堆属性列表：</p>
<p><img src="http://jiangshui.b0.upaiyun.com/blog/2014/12/event1.png" alt="事件属性列表"></p>
<p>事件对象包括很多有用的信息，比如事件触发时，鼠标在屏幕上的坐标、被触发的 DOM 详细信息、以及上图最下面继承过来的停止冒泡方法（stopPropagation）。下面介绍一下比较常用的几个属性和方法：</p>
<h3 id="type-string"><a href="#type-string" class="headerlink" title="type(string)"></a><code>type</code>(string)</h3><p>事件的名称，比如 “click”。</p>
<h3 id="target-node"><a href="#target-node" class="headerlink" title="target(node)"></a><code>target</code>(node)</h3><p>事件要触发的目标节点。</p>
<h3 id="bubbles-boolean"><a href="#bubbles-boolean" class="headerlink" title="bubbles (boolean)"></a><code>bubbles</code> (boolean)</h3><p>表明该事件是否是在冒泡阶段触发的。</p>
<h3 id="preventDefault-function"><a href="#preventDefault-function" class="headerlink" title="preventDefault (function)"></a><code>preventDefault</code> (function)</h3><p>这个方法可以禁止一切默认的行为，例如点击 <code>a</code> 标签时，会打开一个新页面，如果为 <code>a</code> 标签监听事件 <code>click</code> 同时调用该方法，则不会打开新页面。</p>
<h3 id="stopPropagation-function"><a href="#stopPropagation-function" class="headerlink" title="stopPropagation (function)"></a><code>stopPropagation</code> (function)</h3><p>停止冒泡，上面有提到，不再赘述。</p>
<h3 id="stopImmediatePropagation-function"><a href="#stopImmediatePropagation-function" class="headerlink" title="stopImmediatePropagation (function)"></a><code>stopImmediatePropagation</code> (function)</h3><p>与 <code>stopPropagation</code> 类似，就是阻止触发其他监听函数。但是与 <code>stopPropagation</code> 不同的是，它更加 “强力”，阻止除了目标之外的事件触发，甚至阻止针对同一个目标节点的相同事件，Demo：<a href="http://jsfiddle.net/yujiangshui/ju2ujmzp/2/。" target="_blank" rel="external">http://jsfiddle.net/yujiangshui/ju2ujmzp/2/。</a></p>
<h3 id="cancelable-boolean"><a href="#cancelable-boolean" class="headerlink" title="cancelable (boolean)"></a><code>cancelable</code> (boolean)</h3><p>这个属性表明该事件是否可以通过调用 <code>event.preventDefault</code> 方法来禁用默认行为。</p>
<h3 id="eventPhase-number"><a href="#eventPhase-number" class="headerlink" title="eventPhase (number)"></a><code>eventPhase</code> (number)</h3><p>这个属性的数字表示当前事件触发在什么阶段。none：0；捕获：1；目标：2；冒泡：3。</p>
<h3 id="pageX-和-pageY-number"><a href="#pageX-和-pageY-number" class="headerlink" title="pageX 和 pageY (number)"></a><code>pageX</code> 和 <code>pageY</code> (number)</h3><p>这两个属性表示触发事件时，鼠标相对于页面的坐标。Demo：<a href="http://api.jquery.com/event.pagex/。" target="_blank" rel="external">http://api.jquery.com/event.pagex/。</a></p>
<h3 id="isTrusted-boolean"><a href="#isTrusted-boolean" class="headerlink" title="isTrusted (boolean)"></a><code>isTrusted</code> (boolean)</h3><p>表明该事件是浏览器触发（用户真实操作触发），还是 JavaScript 代码触发的。</p>
<h2 id="jQuery-中的事件"><a href="#jQuery-中的事件" class="headerlink" title="jQuery 中的事件"></a>jQuery 中的事件</h2><p>如果你在写文章或者 Demo，为了简单，你当然可以用上面的事件监听函数，以及那些事件对象提供的方法等。但在实际中，有一些方法和属性是有兼容性问题的，所以我们会使用 jQuery 来消除兼容性问题。</p>
<p>下面简单的来说一下 jQuery 中事件的基础操作。</p>
<h3 id="绑定事件和事件代理"><a href="#绑定事件和事件代理" class="headerlink" title="绑定事件和事件代理"></a>绑定事件和事件代理</h3><p>在 jQuery 中，提供了诸如 <code>click()</code> 这样的语法糖来绑定对应事件，但是这里推荐统一使用 <code>on()</code> 来绑定事件。语法：</p>
<pre><code>.on( events [, selector ] [, data ], handler )
</code></pre><p><code>events</code> 即为事件的名称，你可以传递第二个参数来实现事件代理，具体文档<a href="http://api.jquery.com/on/" target="_blank" rel="external">.on()</a> 这里不再赘述。</p>
<h3 id="处理过兼容性的事件对象（Event-Object）"><a href="#处理过兼容性的事件对象（Event-Object）" class="headerlink" title="处理过兼容性的事件对象（Event Object）"></a>处理过兼容性的事件对象（Event Object）</h3><p>事件对象有些方法等也有兼容性差异，jQuery 将其封装处理，并提供跟标准一直的命名。</p>
<p>如果你想在 jQuery 事件回调函数中访问原来的事件对象，需要使用 <code>event.originalEvent</code>，它指向原生的事件对象。</p>
<h3 id="触发事件-trigger-方法"><a href="#触发事件-trigger-方法" class="headerlink" title="触发事件 trigger 方法"></a>触发事件 <code>trigger</code> 方法</h3><p>点击某个绑定了 <code>click</code> 事件的节点，自然会触发该节点的 <code>click</code> 事件，从而执行对应回调函数。</p>
<p><code>trigger</code> 方法可以模拟触发事件，我们单击另一个节点 elementB，可以使用：</p>
<pre><code>$(elementB).on(&apos;click&apos;, function(){
    $(elementA).trigger( &quot;click&quot; );
});
</code></pre><p>来触发 elementA 节点的单击监听回调函数。详情请看文档 <a href="http://api.jquery.com/trigger/" target="_blank" rel="external">.trigger()</a>。</p>
<h2 id="事件进阶话题"><a href="#事件进阶话题" class="headerlink" title="事件进阶话题"></a>事件进阶话题</h2><h3 id="IE-浏览器的差异和兼容性问题"><a href="#IE-浏览器的差异和兼容性问题" class="headerlink" title="IE 浏览器的差异和兼容性问题"></a>IE 浏览器的差异和兼容性问题</h3><p>IE 浏览器就是特立独行，它对于事件的操作与标准有一些差异。不过 IE 浏览器现在也开始慢慢努力改造，让浏览器变得更加标准。</p>
<h4 id="IE-下绑定事件"><a href="#IE-下绑定事件" class="headerlink" title="IE 下绑定事件"></a>IE 下绑定事件</h4><p>在 IE 下面绑定一个事件监听，在 IE9- 无法使用标准的 <code>addEventListener</code> 函数，而是使用自家的 <code>attachEvent</code>，具体用法：</p>
<pre><code>element.attachEvent(&lt;event-name&gt;, &lt;callback&gt;);
</code></pre><p>其中 <code>&lt;event-name&gt;</code> 参数需要注意，它需要为事件名称添加 <code>on</code> 前缀，比如有个事件叫 <code>click</code>，标准事件监听函数监听 <code>click</code>，IE 这里需要监听 <code>onclick</code>。</p>
<p>另一个，它没有第三个参数，也就是说它只支持监听在冒泡阶段触发的事件，所以为了统一，在使用标准事件监听函数的时候，第三参数传递 false。</p>
<p>当然，这个方法在 IE9 已经被抛弃，在 IE11 已经被移除了，IE 也在慢慢变好。</p>
<h4 id="IE-中-Event-对象需要注意的地方"><a href="#IE-中-Event-对象需要注意的地方" class="headerlink" title="IE 中 Event 对象需要注意的地方"></a>IE 中 Event 对象需要注意的地方</h4><p>IE 中往回调函数中传递的事件对象与标准也有一些差异，你需要使用 <code>window.event</code> 来获取事件对象。所以你通常会写出下面代码来获取事件对象：</p>
<pre><code>event = event || window.event
</code></pre><p>此外还有一些事件属性有差别，比如比较常用的 <code>event.target</code> 属性，IE 中没有，而是使用 <code>event.srcElement</code> 来代替。如果你的回调函数需要处理触发事件的节点，那么需要写：</p>
<pre><code>node = event.srcElement || event.target;
</code></pre><p>常见的就是这点，更细节的不再多说。在概念学习中，我们没必要为不标准的东西支付学习成本；在实际应用中，类库已经帮我们封装好这些兼容性问题。可喜的是 IE 浏览器现在也开始不断向标准进步。</p>
<h3 id="事件回调函数的作用域问题"><a href="#事件回调函数的作用域问题" class="headerlink" title="事件回调函数的作用域问题"></a>事件回调函数的作用域问题</h3><p>与事件绑定在一起的回调函数作用域会有问题，我们来看个例子：</p>
<p><a class="jsbin-embed" href="http://jsbin.com/atoluy/1/embed?html,js,output" target="_blank" rel="external">Events in JavaScript: Removing event listeners</a><script src="http://static.jsbin.com/js/embed.js"></script></p>
<p>回调函数调用的 <code>user.greeting</code> 函数作用域应该是在 <code>user</code> 下的，本期望输出 <code>My name is Bob</code> 结果却输出了 <code>My name is undefined</code>。这是因为事件绑定函数时，该函数会以当前元素为作用域执行。为了证明这一点，我们可以为当前 <code>element</code> 添加属性：</p>
<pre><code>element.firstname = &apos;jiangshui&apos;;
</code></pre><p>再次点击，可以正确弹出 <code>My name is jiangshui</code>。那么我们来解决一下这个问题。</p>
<h4 id="使用匿名函数"><a href="#使用匿名函数" class="headerlink" title="使用匿名函数"></a>使用匿名函数</h4><p>我们为回调函数包裹一层匿名函数。</p>
<p><a class="jsbin-embed" href="http://jsbin.com/onomud/1/embed?html,js,output" target="_blank" rel="external">Events in JavaScript: Removing event listeners</a><script src="http://static.jsbin.com/js/embed.js"></script></p>
<p>包裹之后，虽然匿名函数的作用域被指向事件触发元素，但执行的内容就像直接调用一样，不会影响其作用域。</p>
<h4 id="使用-bind-方法"><a href="#使用-bind-方法" class="headerlink" title="使用 bind 方法"></a>使用 bind 方法</h4><p>使用匿名函数是有缺陷的，每次调用都包裹进匿名函数里面，增加了冗余代码等，此外如果想使用 <code>removeEventListener</code> 解除绑定，还需要再创建一个函数引用。<code>Function</code> 类型提供了 <code>bind</code> 方法，可以为函数绑定作用域，无论函数在哪里调用，都不会改变它的作用域。通过如下语句绑定作用域：</p>
<pre><code>user.greeting = user.greeting.bind(user);
</code></pre><p>这样我们就可以直接使用：</p>
<pre><code>element.addEventListener(&apos;click&apos;, user.greeting);
</code></pre><h3 id="常用事件和技巧"><a href="#常用事件和技巧" class="headerlink" title="常用事件和技巧"></a>常用事件和技巧</h3><p>用户的操作有很多种，所以有很多事件。为了开发方便，浏览器又提供了一些事件，所以有很多很多的事件。这里只介绍几种常用的事件和使用技巧。</p>
<h4 id="load"><a href="#load" class="headerlink" title="load"></a><code>load</code></h4><p><code>load</code> 事件在资源加载完成时触发。这个资源可以是图片、CSS 文件、JS 文件、视频、document 和 window 等等。</p>
<p>比较常用的就是监听 window 的 <code>load</code> 事件，当页面内所有资源全部加载完成之后就会触发。比如用 JS 对图片以及其他资源处理，我们在 <code>load</code> 事件中触发，可以保证 JS 不会在资源未加载完成就开始处理资源导致报错。</p>
<p>同样的，也可以监听图片等其他资源加载情况。</p>
<h4 id="beforeunload"><a href="#beforeunload" class="headerlink" title="beforeunload"></a><code>beforeunload</code></h4><p>当浏览者在页面上的输入框输入一些内容时，未保存、误操作关掉网页可能会导致输入信息丢失。</p>
<p>当浏览者输入信息但未保存时关掉网页，我们就可以开始监听这个事件，例如：</p>
<pre><code>window.addEventListener(&quot;beforeunload&quot;, function( event ) {
    event.returnValue = &quot;放弃当前未保存内容而关闭页面？&quot;;
});
</code></pre><p>这时候试图关闭网页的时候，会弹窗阻止操作，点击确认之后才会关闭。当然，如果没有必要，就不要监听，不要以为使用它可以为你留住浏览者。</p>
<h4 id="resize"><a href="#resize" class="headerlink" title="resize"></a><code>resize</code></h4><p>当节点尺寸发生变化时，触发这个事件。通常用在 window 上，这样可以监听浏览器窗口的变化。通常用在复杂布局和响应式上。</p>
<p>常见的视差滚动效果网站以及同类比较复杂的布局网站，往往使用 JavaScript 来计算尺寸、位置。如果用户调整浏览器大小，尺寸、位置不随着改变则会出现错位情况。在 window 上监听该事件，触发时调用计算尺寸、位置的函数，可以根据浏览器的大小来重新计算。</p>
<p>但需要注意一点，当浏览器发生任意变化都会触发 <code>resize</code> 事件，哪怕是缩小 1px 的浏览器宽度，这样调整浏览器时会触发大量的 <code>resize</code> 事件，你的回调函数就会被大量的执行，导致变卡、崩溃等。</p>
<p>你可以使用函数 throttle 或者 debounce 技巧来进行优化，throttle 方法大体思路就是在某一段时间内无论多次调用，只执行一次函数，到达时间就执行；debounce 方法大体思路就是在某一段时间内等待是否还会重复调用，如果不会再调用，就执行函数，如果还有重复调用，则不执行继续等待。关于它们更详细的信息，我后面会介绍一下发表在我的博客上，这里不再赘述。</p>
<h4 id="error"><a href="#error" class="headerlink" title="error"></a><code>error</code></h4><p>当我们加载资源失败或者加载成功但是只加载一部分而无法使用时，就会触发 <code>error</code> 事件，我们可以通过监听该事件来提示一个友好的报错或者进行其他处理。比如 JS 资源加载失败，则提示尝试刷新；图片资源加载失败，在图片下面提示图片加载失败等。该事件不会冒泡。因为子节点加载失败，并不意味着父节点加载失败，所以你的处理函数必须精确绑定到目标节点。</p>
<p>需要注意的是，对于该事件，你可以使用 <code>addEventListener</code> 等进行监听，但是有时候会出现失效情况（看<a href="http://jsbin.com/esimAWA/2/quiet" target="_blank" rel="external">这个例子</a>），这是因为 <code>error</code> 事件都触发过了，你的 JS 监听处理代码还没有加载进来执行。为了避免这种情况，用内联法更好一些：</p>
<pre><code>&lt;img src=&quot;not-found.jpg&quot; onerror=&quot;doSomething&quot; /&gt;
</code></pre><p>如果还有其他常用事件，欢迎留言补充。</p>
<h3 id="用-JavaScript-模拟触发内置事件"><a href="#用-JavaScript-模拟触发内置事件" class="headerlink" title="用 JavaScript 模拟触发内置事件"></a>用 JavaScript 模拟触发内置事件</h3><p>内置的事件也可以被 JavaScript 模拟触发，比如下面函数模拟触发单击事件：</p>
<pre><code>function simulateClick() {
  var event = new MouseEvent(&apos;click&apos;, {
    &apos;view&apos;: window,
    &apos;bubbles&apos;: true,
    &apos;cancelable&apos;: true
  });
  var cb = document.getElementById(&apos;checkbox&apos;);
  var canceled = !cb.dispatchEvent(event);
  if (canceled) {
    // A handler called preventDefault.
    alert(&quot;canceled&quot;);
  } else {
    // None of the handlers called preventDefault.
    alert(&quot;not canceled&quot;);
  }
}
</code></pre><p>可以看这个 <a href="https://developer.mozilla.org/samples/domref/dispatchEvent.html" target="_blank" rel="external">Demo</a> 来了解更多。</p>
<h3 id="自定义事件"><a href="#自定义事件" class="headerlink" title="自定义事件"></a>自定义事件</h3><p>我们可以自定义事件来实现更灵活的开发，事件用好了可以是一件很强大的工具，基于事件的开发有很多优势（后面介绍）。</p>
<p>与自定义事件的函数有 <code>Event</code>、<code>CustomEvent</code> 和 <code>dispatchEvent</code>。</p>
<p>直接自定义事件，使用 <code>Event</code> 构造函数：</p>
<pre><code>var event = new Event(&apos;build&apos;);

// Listen for the event.
elem.addEventListener(&apos;build&apos;, function (e) { ... }, false);

// Dispatch the event.
elem.dispatchEvent(event);
</code></pre><p><code>CustomEvent</code> 可以创建一个更高度自定义事件，还可以附带一些数据，具体用法如下：</p>
<pre><code>var myEvent = new CustomEvent(eventname, options);
</code></pre><p>其中 options 可以是：</p>
<pre><code>{
    detail: {
        ...
    },
    bubbles: true,
    cancelable: false
}
</code></pre><p>其中 <code>detail</code> 可以存放一些初始化的信息，可以在触发的时候调用。其他属性就是定义该事件是否具有冒泡等等功能。</p>
<p>内置的事件会由浏览器根据某些操作进行触发，自定义的事件就需要人工触发。<code>dispatchEvent</code> 函数就是用来触发某个事件：</p>
<pre><code>element.dispatchEvent(customEvent);
</code></pre><p>上面代码表示，在 element 上面触发 customEvent 这个事件。结合起来用就是：</p>
<pre><code>// add an appropriate event listener
obj.addEventListener(&quot;cat&quot;, function(e) { process(e.detail) });

// create and dispatch the event
var event = new CustomEvent(&quot;cat&quot;, {&quot;detail&quot;:{&quot;hazcheeseburger&quot;:true}});
obj.dispatchEvent(event);
</code></pre><p>使用自定义事件需要注意兼容性问题，而使用 jQuery 就简单多了：</p>
<pre><code>// 绑定自定义事件
$(element).on(&apos;myCustomEvent&apos;, function(){});

// 触发事件
$(element).trigger(&apos;myCustomEvent&apos;);
</code></pre><p>此外，你还可以在触发自定义事件时传递更多参数信息：</p>
<pre><code>$( &quot;p&quot; ).on( &quot;myCustomEvent&quot;, function( event, myName ) {
  $( this ).text( myName + &quot;, hi there!&quot; );
});
$( &quot;button&quot; ).click(function () {
  $( &quot;p&quot; ).trigger( &quot;myCustomEvent&quot;, [ &quot;John&quot; ] );
});
</code></pre><p>更详细的用法请看 <a href="http://learn.jquery.com/events/introduction-to-custom-events/" target="_blank" rel="external">Introducing Custom Events</a>，这里不再赘述。</p>
<h3 id="在开发中应用事件"><a href="#在开发中应用事件" class="headerlink" title="在开发中应用事件"></a>在开发中应用事件</h3><p>当我们操作某一个 DOM，发出一个事件，我们可以在另一个地方写代码捕获这个事件执行处理逻辑。触发操作和捕获处理操作是分开的。我们可以根据这个特性来对程序解耦。</p>
<h4 id="用事件解耦"><a href="#用事件解耦" class="headerlink" title="用事件解耦"></a>用事件解耦</h4><p>我们可以将一个整个的功能，分割成独立的小功能，每个小功能绑定一个事件，由一个“控制器”负责根据条件触发某个事件。这样，在外面触发这个事件，也可以调用对应功能，使其更加灵活。</p>
<p><img src="http://jiangshui.b0.upaiyun.com/blog/2014/12/event2.png" alt="应用事件对程序解耦"></p>
<p>在《基于 MVC 的 JavaScript Web 富应用开发》一书中，有更加具体的实例，有兴趣的朋友可以买本看看。</p>
<h4 id="发布（Publish）和订阅（Subscribe）模式"><a href="#发布（Publish）和订阅（Subscribe）模式" class="headerlink" title="发布（Publish）和订阅（Subscribe）模式"></a>发布（Publish）和订阅（Subscribe）模式</h4><p>针对上面这种用法，继续抽象一下，就是发布和订阅开发模式。正如其名，这种模式有两个角色：发布者和订阅者，此外有一条信道，发布者被触发往这个信道里面发信，订阅者从这个信道里面收信，如果收到特定信件则执行某个对应的逻辑。这样，发布者和订阅者之间是完全解耦的，只有一条信道连接。这样就非常容易扩展，也不会引入额外的依赖。</p>
<p>这样如果需要添加新功能，只需要添加一个新的订阅者（及其执行逻辑），监听信道中某一类新的信件。再在应用中通过发布者发送一类新的信件即可。</p>
<p>具体实现，这里推荐 cowboy 开发的 <a href="https://github.com/cowboy/jquery-tiny-pubsub" target="_blank" rel="external">Tiny Pub Sub</a>，通过 jQuery 实现，非常简洁直观，jQuery 太赞。代码就这几行：</p>
<pre><code>(function($) {

  var o = $({});

  $.subscribe = function() {
    o.on.apply(o, arguments);
  };

  $.unsubscribe = function() {
    o.off.apply(o, arguments);
  };

  $.publish = function() {
    o.trigger.apply(o, arguments);
  };

}(jQuery));
</code></pre><p>定义一个对象作为信道，然后提供了三个方法，订阅者、取消订阅、发布者。</p>
<h2 id="总结和扩展阅读"><a href="#总结和扩展阅读" class="headerlink" title="总结和扩展阅读"></a>总结和扩展阅读</h2><p>事件有关的基础知识基本就这些，更多的还有待你继续挖掘。本文资料参考和推荐扩展阅读如下（感谢他们）：</p>
<ul>
<li><a href="http://www.w3.org/TR/DOM-Level-3-Events/" target="_blank" rel="external">DOM-Level-3-Events</a></li>
<li><a href="https://developer.mozilla.org/en/docs/Web/API/Event" target="_blank" rel="external">Event on MDN</a></li>
<li><a href="http://api.jquery.com/category/events/" target="_blank" rel="external">Events of jQuery</a></li>
<li><a href="http://learn.jquery.com/events/introduction-to-custom-events/" target="_blank" rel="external">Introducing Custom Events</a></li>
<li><a href="http://www.smashingmagazine.com/2013/11/12/an-introduction-to-dom-events/" target="_blank" rel="external">An Introduction To DOM Events</a></li>
<li>《基于 MVC 的 JavaScript Web 富应用开发》</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS 小技巧收藏]]></title>
      <url>http://blog.xheartx.com/2016/04/09/2016-04-09-web-CssTips/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-04-09-01.png" alt="CSS 小技巧收藏"></p>
<blockquote>
<p>自用笔记：本文属于自用笔记，不做详解，仅供参考。在此记录一下积累的一些常用的css代码，会不断更新，最新的代码会显示在最前面。</p>
</blockquote>
<a id="more"></a>
<h2 id="居中对齐"><a href="#居中对齐" class="headerlink" title="居中对齐"></a>居中对齐</h2><p>很多时候我们需要把一个元素在其父级容器里水平、垂直居中对齐。以下我列出了常用的几种方法：</p>
<p>1.在知道子元素宽度与高度的情况下进行居中，采用位置定位：absolute + margin</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">	position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.child &#123;</span><br><span class="line">	position: absolute;</span><br><span class="line">	width: 100px;</span><br><span class="line">	height: 60px;</span><br><span class="line">	top: 50%;</span><br><span class="line">	left: 50%;</span><br><span class="line">	margin: -30px 0 0 -50px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.在不知道子元素高与宽的情况下，采用位置定位：absolute + transform</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">	position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.child &#123;</span><br><span class="line">	position: absolute;</span><br><span class="line">	top: 50%;</span><br><span class="line">	left: 50%;</span><br><span class="line">	transform: translate(-50%, -50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.采用flexbox进行居中对齐</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">&#125;</span><br><span class="line">.child &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="选择某范围内的子元素"><a href="#选择某范围内的子元素" class="headerlink" title="选择某范围内的子元素"></a>选择某范围内的子元素</h2><p>选择5-10的子元素</p>
<p>ul li:nth-child(n+5):nth-child(-n+10) {<br>    background-color: red;<br>}</p>
<h2 id="最佳适应图片"><a href="#最佳适应图片" class="headerlink" title="最佳适应图片"></a>最佳适应图片</h2><p>这段代码非常适用于给文章列表加缩略图的时候用，能最好的避免图片比例不协调的问题，统一排版。你可以随意更改width与height来查看效果。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.thumbnail &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 150px;</span><br><span class="line">    background-image: url(&quot;https://s.yimg.com/uy/build/images/sohp/inspiration/sage3.jpg&quot;);</span><br><span class="line">    background-position: center;</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-size: cover;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="占满全屏"><a href="#占满全屏" class="headerlink" title="占满全屏"></a>占满全屏</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.fullScreen &#123;</span><br><span class="line">    width: 100vw;</span><br><span class="line">    height: 100vh;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>演示效果：<a href="http://lab.liuxinyu.me/fullbg/index.html" target="_blank" rel="external">http://lab.liuxinyu.me/fullbg/index.html</a></p>
<h2 id="自动分章节"><a href="#自动分章节" class="headerlink" title="自动分章节"></a>自动分章节</h2><p>文章正文里我们经常采用<figure class="highlight plain"><figcaption><span><h3>, <h4>, <h5>```这样的标签来分章，分节。这是一个非常不错的习惯，但常常只有字体粗细大小的不同，在这里我们为每个章节加上1,2,3这样的标注。以下代码在.document容器内有效。(其他需要计数的模块也可以用这样的方法)</h5></h4></h3></span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">## 自适应视频播放器</span><br><span class="line"></span><br><span class="line">当在你自己的网站插入优酷这样的视频播放器后你会发现它的高宽都是固定的，而且你在用手机浏览的时候视频播放器还变形了，以下代码自动让播放器按16:9的比例显示并自适应各个设备。</span><br></pre></td></tr></table></figure></p>
<p>CSS代码：<br>.media-wrap {<br>    position: relative;<br>    width: 100%;<br>    height: 0;<br>    padding-bottom: 56.25%;<br>}<br>.media-wrap iframe,<br>.media-wrap embed,<br>.media-wrap object {<br>    position: absolute;<br>    top: 0;<br>    left: 0;<br>    width: 100%;<br>    height: 100%;<br>}</p>
<p>HTML代码：</p>
<p><div class="media-wrap"></div></p>
<p><iframe height="498" width="510" src="http://player.youku.com/embed/XMTQzOTUyNjAyMA==" frameborder="0" allowfullscreen></iframe><br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## font-family 字体基本用法</span><br><span class="line"></span><br><span class="line">&gt;最近需要修改网页字体，发现 font-family 这个属性相关的知识还是不少的，整理总结一下常用的部分，分享于此。</span><br><span class="line"></span><br><span class="line">### 使用语法</span><br></pre></td></tr></table></figure></p>
<p>css<br>font-family: 字体名1, 字体名2, 字体名n, 字体系列名;<br>font-family: Verdana, Helvetica, “Microsoft YaHei”, Arial;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 语法说明</span><br><span class="line">&gt; 1. 系统将选择列表中最先可用的字体来显示文字;</span><br><span class="line">1. 因为规则1，通常在最末添加一个 generic-family 字体系列名，保证文字获得相似的显示效果;</span><br><span class="line">1. 因为规则1，西文字体名应该写在中文字体前，这样才能中英文同时使用不同字体;</span><br><span class="line">1. 字体名为中文或包含空格等时，需要加双引号&quot;&quot;才能正确识别;</span><br><span class="line">1. 中文字体建议也是用其对应英文字体名，如&quot;微软雅黑&quot;为&quot;Microsoft YaHei&quot;，以提高编码兼容性。</span><br><span class="line"></span><br><span class="line">## 常见字体系列</span><br><span class="line"></span><br><span class="line">### Serif 衬线字体</span><br><span class="line">- Times New Roman, Georgia 和宋体都是很常见的衬线字体；</span><br><span class="line">- 特征: 文字笔划的开始或结束处有额外的装饰，笔划有粗细之分。</span><br><span class="line"></span><br><span class="line">![serif](http://7xvjap.com1.z0.glb.clouddn.com/2016-04-09-serif.png)</span><br><span class="line"></span><br><span class="line">### Sans-serif 无衬线字体</span><br><span class="line">- Arial, Verdana, Tahoma, 微软雅黑都是很常见的无衬线字体;</span><br><span class="line">- 说明: `sans-`源于法语前缀，意思为`没有`。Sans-serif 也就是指无衬线字体。</span><br><span class="line">- 特征: 字体比较圆滑，笔划较为均匀。</span><br><span class="line"></span><br><span class="line">![sans-serif](http://7xvjap.com1.z0.glb.clouddn.com/2016-04-09-sans-serif.png)</span><br><span class="line"></span><br><span class="line">- 字体选用: 有种说法是正文多用衬线字体，易于区分；标题多用无衬线字体。不过这个也看个人喜好，我更习惯正文用无衬线字体。如果实在不知道怎么选，随便找一个自己看着舒服的网站，套用它的字体样式好了。</span><br><span class="line"></span><br><span class="line">### Monospace 等宽字体</span><br><span class="line">- Courier New, Consolas, Menlo 都是比较常见的等宽字体;</span><br><span class="line">- 特征: 字母、数字、空格以及其他符号所占宽度都一致。识别度高，易于对齐和定位，通常用于显示代码。</span><br><span class="line"></span><br><span class="line">![Monospace](http://7xvjap.com1.z0.glb.clouddn.com/2016-04-09-Monospace.png)</span><br><span class="line"></span><br><span class="line">- 一个优秀的代码字体除了等宽外，还应该能较好地区分出`0 o O i l 1 I &quot;&quot; &apos;&apos; [] () &#123;&#125;` 等字符。</span><br><span class="line"></span><br><span class="line">### Cursive 手写体</span><br><span class="line">- Comic Sans, Author, 华文行楷都是比较常见的仿手写体;</span><br><span class="line">- 特征: 模仿人的手写体，笔划圆滑或者有连笔等装饰。英文的花体，中文的行书草书等都属于此类。</span><br><span class="line"></span><br><span class="line">![cursive](http://7xvjap.com1.z0.glb.clouddn.com/2016-04-09-cursive.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 获取字体名称</span><br><span class="line">同一个字体在不同系统和应用中可能会显示为不同名字，但其内部一般有一个不变的英文名字。CSS font-family 需要引用的就是字体的内部名字。</span><br><span class="line"></span><br><span class="line">### 本地字体</span><br><span class="line">- Win 上通过搜索或控制面板进入字体文件夹，然后双击字体查看字体名称;</span><br><span class="line">- 通过软件，如记事本、Office 等也可以查看字体名字:</span><br><span class="line"></span><br><span class="line">![font-a1](http://7xvjap.com1.z0.glb.clouddn.com/2016-04-09-font-a1.png)</span><br><span class="line"></span><br><span class="line">- Mac 上搜索打开字体册即可，中间一栏显示的就是字体名称:</span><br><span class="line"></span><br><span class="line">![font-a2](http://7xvjap.com1.z0.glb.clouddn.com/2016-04-09-font-a2.png)</span><br><span class="line"></span><br><span class="line">### 网页字体</span><br><span class="line"></span><br><span class="line">- 审查元素，查看生效的 font-family:</span><br><span class="line"></span><br><span class="line">![font-a3](http://7xvjap.com1.z0.glb.clouddn.com/2016-04-09-font-a3.png)</span><br><span class="line"></span><br><span class="line">- 通过 Chrome 插件 [WhatFont](http://chengyinliu.com/whatfont.html):</span><br><span class="line"></span><br><span class="line">![font-a4](http://7xvjap.com1.z0.glb.clouddn.com/2016-04-09-font-a4.png)</span><br><span class="line"></span><br><span class="line">## 字体图标</span><br><span class="line"></span><br><span class="line">使用`@font-face`引入字体后，可以像使用文字那样，无损的控制图标的大小，颜色等样式。常见的有 Webdings，Wingdings, [Font Awesome](http://fontawesome.io/).</span><br><span class="line"></span><br><span class="line">![font-icon](http://7xvjap.com1.z0.glb.clouddn.com/2016-04-09-font-icon.png)</span><br><span class="line"></span><br><span class="line">## 备用记录</span><br><span class="line"></span><br><span class="line">### 字体配置</span><br><span class="line">- 下面是自己目前比较常用的字体配置，通常按系列设置为 CSS 预处理器的变量，方便调用。</span><br><span class="line"></span><br><span class="line">``` stylus</span><br><span class="line">//中文</span><br><span class="line">font-chs = &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;</span><br><span class="line">//无衬线字体 sans-serif</span><br><span class="line">font-sans = Verdana, &quot;Helvetica Neue&quot;, Helvetica, Tahoma, Arial</span><br><span class="line">//衬线字体 serif</span><br><span class="line">font-serif = Times, Georgia</span><br><span class="line">//等宽字体 monospace</span><br><span class="line">font-mono = Menlo, Consolas, &quot;Source Code Pro&quot;, Inconsolata, Monaco, &quot;Courier New&quot;</span><br></pre></td></tr></table></figure></p>
<h3 id="字体英文名"><a href="#字体英文名" class="headerlink" title="字体英文名"></a>字体英文名</h3><ul>
<li>一些常见中文字体的对应英文名。</li>
</ul>
<style>
    .fa-apple {
        color: #9d9e9d;
    }
    .fa-windows {
        color: #4ca6e7;
    }
</style>

<table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th>中文名</th>
<th>英文名</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td><i class="fa fa-apple"></i> 苹方</td>
<td>PingFang SC</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td><i class="fa fa-apple"></i> 冬青黑/苹果丽黑</td>
<td>Hiragino Sans GB</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td><i class="fa fa-apple"></i> 思源黑体</td>
<td>Source Han Sans CN</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td><i class="fa fa-apple"></i> 华文细黑</td>
<td>STHeiti Light [STXihei]</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td><i class="fa fa-apple"></i> 华文黑体</td>
<td>ST Heiti</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td><i class="fa fa-apple"></i> 华文楷体</td>
<td>STKaiti</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td><i class="fa fa-apple"></i> 华文宋体</td>
<td>STSong</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td><i class="fa fa-apple"></i> 华文仿宋</td>
<td>STFangsong</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td><i class="fa fa-apple"></i> 丽黑 Pro</td>
<td>LiHei Pro Medium</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td><i class="fa fa-apple"></i> 丽宋 Pro</td>
<td>LiSong Pro Light</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td><i class="fa fa-apple"></i> 标楷体</td>
<td>BiauKai</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td><i class="fa fa-apple"></i> 苹果丽中黑</td>
<td>Apple LiGothic Medium</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td><i class="fa fa-apple"></i> 苹果丽细宋</td>
<td>Apple LiSung Light</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td><i class="fa fa-windows"></i> 新细明体</td>
<td>PMingLiU</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td><i class="fa fa-windows"></i> 细明体</td>
<td>MingLiU</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td><i class="fa fa-windows"></i> 标楷体</td>
<td>DFKai-SB</td>
</tr>
<tr>
<td style="text-align:center">17</td>
<td><i class="fa fa-windows"></i> (中易)黑体</td>
<td>SimHei</td>
</tr>
<tr>
<td style="text-align:center">18</td>
<td><i class="fa fa-windows"></i> 宋体</td>
<td>SimSun</td>
</tr>
<tr>
<td style="text-align:center">19</td>
<td><i class="fa fa-windows"></i> 新宋体</td>
<td>NSimSun</td>
</tr>
<tr>
<td style="text-align:center">20</td>
<td><i class="fa fa-windows"></i> 仿宋</td>
<td>FangSong</td>
</tr>
<tr>
<td style="text-align:center">21</td>
<td><i class="fa fa-windows"></i> 楷体</td>
<td>KaiTi</td>
</tr>
<tr>
<td style="text-align:center">22</td>
<td><i class="fa fa-windows"></i> 仿宋_GB2312</td>
<td>FangSong_GB2312</td>
</tr>
<tr>
<td style="text-align:center">23</td>
<td><i class="fa fa-windows"></i> 楷体_GB2312</td>
<td>KaiTi_GB2312</td>
</tr>
<tr>
<td style="text-align:center">24</td>
<td><i class="fa fa-windows"></i> 微软正黑体</td>
<td>Microsoft JhengHei</td>
</tr>
<tr>
<td style="text-align:center">25</td>
<td><i class="fa fa-windows"></i> 微软雅黑</td>
<td>Microsoft YaHei</td>
</tr>
<tr>
<td style="text-align:center">26</td>
<td><i class="fa fa-file-word-o"></i>  隶书</td>
<td>LiSu</td>
</tr>
<tr>
<td style="text-align:center">27</td>
<td><i class="fa fa-file-word-o"></i>  幼圆</td>
<td>YouYuan</td>
</tr>
<tr>
<td style="text-align:center">28</td>
<td><i class="fa fa-file-word-o"></i>  华文中宋</td>
<td>STZhongsong</td>
</tr>
<tr>
<td style="text-align:center">29</td>
<td><i class="fa fa-file-word-o"></i>  方正舒体</td>
<td>FZShuTi</td>
</tr>
<tr>
<td style="text-align:center">30</td>
<td><i class="fa fa-file-word-o"></i>  方正姚体</td>
<td>FZYaoti</td>
</tr>
<tr>
<td style="text-align:center">31</td>
<td><i class="fa fa-file-word-o"></i>  华文彩云</td>
<td>STCaiyun</td>
</tr>
<tr>
<td style="text-align:center">32</td>
<td><i class="fa fa-file-word-o"></i>  华文琥珀</td>
<td>STHupo</td>
</tr>
<tr>
<td style="text-align:center">33</td>
<td><i class="fa fa-file-word-o"></i>  华文隶书</td>
<td>STLiti</td>
</tr>
<tr>
<td style="text-align:center">34</td>
<td><i class="fa fa-file-word-o"></i>  华文行楷</td>
<td>STXingkai</td>
</tr>
<tr>
<td style="text-align:center">35</td>
<td><i class="fa fa-file-word-o"></i>  华文新魏</td>
<td>STXinwei</td>
</tr>
<tr>
<td style="text-align:center">36</td>
<td><i class="fa fa-linux"></i> 文泉驿微米黑</td>
<td>Wenquanyi Micro Hei</td>
</tr>
<tr>
<td style="text-align:center">37</td>
<td><i class="fa fa-linux"></i> 文泉驿正黑</td>
<td>WenQuanYi Zen Hei</td>
</tr>
<tr>
<td style="text-align:center">38</td>
<td><i class="fa fa-linux"></i> 文泉驿点阵正黑</td>
<td>WenQuanYi Zen Hei Sharp</td>
</tr>
</tbody>
</table>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ol>
<li><strong>Font Awesome</strong>: <a href="http://fontawesome.io/" target="_blank" rel="external">http://fontawesome.io/</a></li>
<li><strong>Webdings和Wingdings字符码对应表</strong>: <a href="http://dwz.cn/2jOjYi" target="_blank" rel="external">http://dwz.cn/2jOjYi</a></li>
<li><strong><em>CSS魔法堂：再次认识 font</em></strong> by <strong>肥仔John</strong> on <code>2015/3/3</code>: <a href="http://www.cnblogs.com/fsjohnhuang/p/4310533.html" target="_blank" rel="external">http://www.cnblogs.com/fsjohnhuang/p/4310533.html</a></li>
<li><strong>有字库-中文在线字体</strong>: <a href="http://www.youziku.com/" target="_blank" rel="external">http://www.youziku.com/</a></li>
<li><strong><em>谈谈网页设计中的字体应用 (2) serif 和 sans-serif</em></strong> by <strong>棕熊</strong> on <code>2008/5/6</code>: <a href="http://www.cnblogs.com/ruxpinsp1/archive/2008/05/06/font-in-front-end-development-2.html" target="_blank" rel="external">http://www.cnblogs.com/ruxpinsp1/archive/2008/05/06/font-in-front-end-development-2.html</a></li>
<li><strong><em>Serif 和 Sans Serif 字体的区别</em></strong> by <strong>冰火九九</strong> on <code>2013/11/4</code>: <a href="http://blog.jobbole.com/50828/" target="_blank" rel="external">http://blog.jobbole.com/50828/</a></li>
<li><strong><em>Chinese Web Font Guide</em></strong> by <strong>Kendra Schaefer</strong> on <code>2012/6/11</code>: <a href="http://www.kendraschaefer.com/2012/06/chinese-standard-web-fonts-the-ultimate-guide-to-css-font-family-declarations-for-web-design-in-simplified-chinese/" target="_blank" rel="external">http://www.kendraschaefer.com/2012/06/chinese-standard-web-fonts-the-ultimate-guide-to-css-font-family-declarations-for-web-design-in-simplified-chinese/</a></li>
<li><strong>Fonts.css – 跨平台中文字体解决方案</strong>: <a href="http://zenozeng.github.io/fonts.css/" target="_blank" rel="external">http://zenozeng.github.io/fonts.css/</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Web前端开发规范手册]]></title>
      <url>http://blog.xheartx.com/2016/04/02/2016-04-02-WebFrontRule/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-04-02-02.png" alt="Web前端开发规范手册"></p>
<blockquote>
<p>Web前端开发规范手册：为提高团队协作效率, 便于后台人员添加功能及前端后期优化维护, 输出高质量的文档, 特制订此文档. 本规范文档一经确认, 前端开发人员必须按本文档规范进行前台页面开发. 本文档如有不对或者不合适的地方请及时提出, 经讨论决定后可以更改此文档.</p>
</blockquote>
<a id="more"></a>
<h2 id="2-1-文件命名规则"><a href="#2-1-文件命名规则" class="headerlink" title="2.1  文件命名规则"></a>2.1  文件命名规则</h2><p>文件名称统一用小写的英文字母、数字和下划线的组合，其中不得包含汉字、空格和特殊字符；<br>命名原则的指导思想:</p>
<ol>
<li>使得你自己和工作组的每一个成员能够方便的理解每一个文件的意义，</li>
<li>是当我们在文件夹中使用“按名称排例”的命令时，同一种大类的文件能够排列在一起，以便我们查找、修改、替换、计算负载量等等操作。</li>
</ol>
<h3 id="HTML的命名原则"><a href="#HTML的命名原则" class="headerlink" title="HTML的命名原则"></a>HTML的命名原则</h3><p>引文件统一使用index.htm  index.html  index.asp文件名（小写）<br>各子页命名的原则首先应该以栏目名的英语翻译取单一单词为名称。例如：</p>
<ol>
<li>关于我们 \ aboutus</li>
<li>信息反馈 \ feedback</li>
<li>产 品 \ product</li>
</ol>
<p>如果栏目名称多而复杂并不好以英文单词命名，则统一使用该栏目名称拼音或拼音的首字母表示；<br>每一个目录中应该包含一个缺省的html 文件，文件名统一用index.htm  index.html  index.asp；</p>
<h3 id="图片的命名原则"><a href="#图片的命名原则" class="headerlink" title="图片的命名原则"></a>图片的命名原则</h3><h4 id="图片的名称分为头尾两部分，用下划线隔开，头部分表示此图片的大类性质"><a href="#图片的名称分为头尾两部分，用下划线隔开，头部分表示此图片的大类性质" class="headerlink" title="图片的名称分为头尾两部分，用下划线隔开，头部分表示此图片的大类性质"></a>图片的名称分为头尾两部分，用下划线隔开，头部分表示此图片的大类性质</h4><p>例如：广告、标志、菜单、按钮等等。</p>
<ol>
<li>放置在页面顶部的广告、装饰图案等长方形的图片取名： banner</li>
<li>标志性的图片取名为： logo</li>
<li>在页面上位置不固定并且带有链接的小图片我们取名为 button</li>
<li>在页面上某一个位置连续出现，性质相同的链接栏目的图片我们取名： menu</li>
<li>装饰用的照片我们取名： pic</li>
<li>不带链接表示标题的图片我们取名： title</li>
</ol>
<p>范例：</p>
<ol>
<li>banner_sohu.gif</li>
<li>banner_sina.gif</li>
<li>menu_aboutus.gif</li>
<li>menu_job.gif</li>
<li>title_news.gif</li>
<li>logo_police.gif</li>
<li>logo_national.gif</li>
<li>pic_people.jpg</li>
</ol>
<h4 id="鼠标感应效果图片命名规范为”图片名-on-off”。"><a href="#鼠标感应效果图片命名规范为”图片名-on-off”。" class="headerlink" title="鼠标感应效果图片命名规范为”图片名+_+on/off”。"></a>鼠标感应效果图片命名规范为”图片名+_+on/off”。</h4><p>例如：menu1_on.gif  menu1_off.gif</p>
<h3 id="javascript的命名原则"><a href="#javascript的命名原则" class="headerlink" title="javascript的命名原则"></a>javascript的命名原则</h3><p>例如：广告条的javascript文件名为 ad.js  弹出窗口的javascript文件名为 pop.js</p>
<h3 id="动态语言文件命名原则"><a href="#动态语言文件命名原则" class="headerlink" title="动态语言文件命名原则"></a>动态语言文件命名原则</h3><p>以性质<em>描述，描述可以有多个单词，用“</em>”隔开，性质一般是该页面得概要。<br>范例：register_form.asp   register_post.asp   topic_lock.asp</p>
<h2 id="2-2-文件存放位置规范"><a href="#2-2-文件存放位置规范" class="headerlink" title="2.2  文件存放位置规范"></a>2.2  文件存放位置规范</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">_Root		</span><br><span class="line"> 	cn	存放中文HTML文件</span><br><span class="line"> 	en	存放英文HTML文件</span><br><span class="line"> 	flash	存放Flash文件</span><br><span class="line"> 	images	存放图片文件</span><br><span class="line"> 	imagestudio	存放PSD源文件</span><br><span class="line"> 	flashstudio	存放flash源文件</span><br><span class="line"> 	inc	存放include文件</span><br><span class="line"> 	library	存放DW库文件</span><br><span class="line"> 	media	存放多媒体文件</span><br><span class="line"> 	project	存放工程项目资料</span><br><span class="line"> 	temp	存放客户原始资料</span><br><span class="line"> 	js	存放JavaScript脚本</span><br><span class="line"> 	css	存放CSS文件</span><br></pre></td></tr></table></figure>
<h2 id="2-3-CSS-书写规范"><a href="#2-3-CSS-书写规范" class="headerlink" title="2.3  CSS 书写规范"></a>2.3  CSS 书写规范</h2><h3 id="基本原则："><a href="#基本原则：" class="headerlink" title="基本原则："></a>基本原则：</h3><h4 id="CSS样式可细分为3类：自定义样式、重新定义HTML样式、链接状态样式。"><a href="#CSS样式可细分为3类：自定义样式、重新定义HTML样式、链接状态样式。" class="headerlink" title="CSS样式可细分为3类：自定义样式、重新定义HTML样式、链接状态样式。"></a>CSS样式可细分为3类：自定义样式、重新定义HTML样式、链接状态样式。</h4><h5 id="样式为设计师自定义的新-CSS-样式，影响被使用本样式的区域，用于完成网页中局部的样式设定。"><a href="#样式为设计师自定义的新-CSS-样式，影响被使用本样式的区域，用于完成网页中局部的样式设定。" class="headerlink" title="样式为设计师自定义的新 CSS 样式，影响被使用本样式的区域，用于完成网页中局部的样式设定。"></a>样式为设计师自定义的新 CSS 样式，影响被使用本样式的区域，用于完成网页中局部的样式设定。</h5><ol>
<li><p>样式名 “.”+“相应样式效果描述的单词或缩写”例：“ .shadow ”</p>
</li>
<li><p>文字样式样式名“.no”+“字号”+“行距”+“颜色缩写”例：“ .no12 ” 、“ .no12-24 ”</p>
</li>
</ol>
<h5 id="义HTML样式为设计师重新定义已有的HTML标签样式，影响全部的被设定标签样式，用于统一网页中某一标签的样式定义。"><a href="#义HTML样式为设计师重新定义已有的HTML标签样式，影响全部的被设定标签样式，用于统一网页中某一标签的样式定义。" class="headerlink" title="义HTML样式为设计师重新定义已有的HTML标签样式，影响全部的被设定标签样式，用于统一网页中某一标签的样式定义。"></a>义HTML样式为设计师重新定义已有的HTML标签样式，影响全部的被设定标签样式，用于统一网页中某一标签的样式定义。</h5><ol>
<li>样式名“HTML标签”例：hr { border: 1px dotted #333333 }</li>
</ol>
<h5 id="态样式为设计师对链接不同状态设定特殊样式，影响被使用本样式区域中的链接。"><a href="#态样式为设计师对链接不同状态设定特殊样式，影响被使用本样式区域中的链接。" class="headerlink" title="态样式为设计师对链接不同状态设定特殊样式，影响被使用本样式区域中的链接。"></a>态样式为设计师对链接不同状态设定特殊样式，影响被使用本样式区域中的链接。</h5><ol>
<li>该样式写法有2种：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.nav:link    nav.a:link  第一种只能修饰&lt;a&gt;标签中；第二种可以修饰所有包含有&lt;a&gt;标签的其他标签。</span><br></pre></td></tr></table></figure>
<ol>
<li>页面内的样式加载必须用链接方式</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style/style.css&quot;&gt;</span><br></pre></td></tr></table></figure>
<h3 id="注意细则："><a href="#注意细则：" class="headerlink" title="注意细则："></a>注意细则：</h3><h4 id="协作开发及分工"><a href="#协作开发及分工" class="headerlink" title="协作开发及分工:"></a>协作开发及分工:</h4><p>i会根据各个模块, 同时根据页面相似程序, 事先写好大体框架文件, 分配给前端人员实现内部结构&amp;表现&amp;行为; 共用css文件base.css由i书写, 协作开发过程中, 每个页面请务必都要引入, 此文件包含reset及头部底部样式, 此文件不可随意修改;</p>
<h4 id="class与id的使用"><a href="#class与id的使用" class="headerlink" title="class与id的使用:"></a>class与id的使用:</h4><p>id是唯一的并是父级的, class是可以重复的并是子级的, 所以id仅使用在大的模块上, class可用在重复使用率高及子级中; id原则上都是由我分发框架文件时命名的, 为JavaScript预留钩子的除外;</p>
<h4 id="为JavaScript预留钩子的命名"><a href="#为JavaScript预留钩子的命名" class="headerlink" title="为JavaScript预留钩子的命名,"></a>为JavaScript预留钩子的命名,</h4><p>请以 js_ 起始, 比如: js_hide, js_show;</p>
<h4 id="class与id命名"><a href="#class与id命名" class="headerlink" title="class与id命名:"></a>class与id命名:</h4><p>大的框架命名比如header/footer/wrapper/left/right之类的在2中由i统一命名.其他样式名称由 小写英文 &amp; 数字 &amp; _ 来组合命名, 如i_comment, fontred, width200; 避免使用中文拼音, 尽量使用简易的单词组合; 总之, 命名要语义化, 简明化.</p>
<h4 id="规避class与id命名-此条重要-若有不明白请及时与i沟通"><a href="#规避class与id命名-此条重要-若有不明白请及时与i沟通" class="headerlink" title="规避class与id命名(此条重要, 若有不明白请及时与i沟通):"></a>规避class与id命名(此条重要, 若有不明白请及时与i沟通):</h4><ol>
<li>通过从属写法规避, 示例见d;</li>
<li>取父级元素id/class命名部分命名, 示例见d;</li>
<li>重复使用率高的命名, 请以自己代号加下划线起始, 比如i_clear;</li>
<li><p>a,b两条, 适用于在2中已建好框架的页面, 如, 要在2中已建好框架的页面代码<div id="mainnav"></div>中加入新的div元素,</p>
</li>
<li><p>按a命名法则:</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;mainnav&quot;&gt;&lt;div class=&quot;firstnav&quot;&gt;...&lt;/div&gt;&lt;/div&gt;,</span><br></pre></td></tr></table></figure>
<ol>
<li>样式写法:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#mainnav  .firstnav&#123;.......&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>按b命名法则:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;mainnav&quot;&gt;&lt;div class=&quot;main_firstnav&quot;&gt;...&lt;/div&gt;&lt;/div&gt;,</span><br></pre></td></tr></table></figure>
<ol>
<li>样式写法:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.main_firstnav&#123;.......&#125;</span><br></pre></td></tr></table></figure>
<h4 id="css属性书写顺序"><a href="#css属性书写顺序" class="headerlink" title="css属性书写顺序"></a>css属性书写顺序</h4><p>建议遵循 布局定位属性–&gt;自身属性–&gt;文本属性–&gt;其他属性. 此条可根据自身习惯书写, 但尽量保证同类属性写在一起. 属性列举: 布局定位属性主要包括: margin、padding、float（包括clear）、position（相应的 top,right,bottom,left）、display、visibility、overflow等；自身属性主要包括: width &amp; height &amp; background &amp; border; 文本属性主要包括：font、color、text-align、text-decoration、text-indent等；其他属性包括: list-style(列表样式)、vertical-vlign、cursor、z-index(层叠顺序) 、zoom等.我所列出的这些属性只是最常用到的, 并不代表全部;</p>
<h4 id="书写代码前-考虑并提高样式重复使用率"><a href="#书写代码前-考虑并提高样式重复使用率" class="headerlink" title="书写代码前, 考虑并提高样式重复使用率;"></a>书写代码前, 考虑并提高样式重复使用率;</h4><h4 id="充分利用html自身属性及样式继承原理减少代码量"><a href="#充分利用html自身属性及样式继承原理减少代码量" class="headerlink" title="充分利用html自身属性及样式继承原理减少代码量"></a>充分利用html自身属性及样式继承原理减少代码量</h4><p>比如:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;list&quot;&gt;&lt;li&gt;这儿是标题列表&lt;span&gt;2010-09-15&lt;/span&gt;&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
<p>定义ul.list li{position:relative}  ul.list li span{position:absolute; right:0}<br>即可实现日期居右显示</p>
<h4 id="样式表中中文字体名"><a href="#样式表中中文字体名" class="headerlink" title="样式表中中文字体名"></a>样式表中中文字体名</h4><p>请务必转码成unicode码, 以避免编码错误时乱码;</p>
<h4 id="背景图片请尽可能使用sprite技术"><a href="#背景图片请尽可能使用sprite技术" class="headerlink" title="背景图片请尽可能使用sprite技术"></a>背景图片请尽可能使用sprite技术</h4><p>减小http请求, 考虑到多人协作开发, sprite按模块制作;</p>
<h4 id="使用table标签时-尽量避免使用table标签"><a href="#使用table标签时-尽量避免使用table标签" class="headerlink" title="使用table标签时(尽量避免使用table标签)"></a>使用table标签时(尽量避免使用table标签)</h4><p>请不要用width/ height/cellspacing/cellpadding等table属性直接定义表现, 应尽可能的利用table自身私有属性分离结构与表现, 如thead,tr,th,td,tbody,tfoot,colgroup,scope; (cellspaing及cellpadding的css控制方法: table{border:0;margin:0;border-collapse:collapse;} table th, table td{padding:0;} , base.css文件中我会初始化表格样式)</p>
<h4 id="杜绝使用-兼容ie8"><a href="#杜绝使用-兼容ie8" class="headerlink" title="杜绝使用 兼容ie8;"></a>杜绝使用<meta http-equiv="X-UA-Compatible" content="IE=7"> 兼容ie8;</h4><h4 id="用png图片做图片时"><a href="#用png图片做图片时" class="headerlink" title="用png图片做图片时"></a>用png图片做图片时</h4><p>要求图片格式为png-8格式,若png-8实在影响图片质量或其中有半透明效果, 请为ie6单独定义背景:<br>background:none;_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=crop, src=’img/bg.png’);</p>
<h4 id="避免兼容性属性的使用"><a href="#避免兼容性属性的使用" class="headerlink" title="避免兼容性属性的使用"></a>避免兼容性属性的使用</h4><p>比如text-shadow || css3的相关属性;</p>
<h4 id="减少使用影响性能的属性"><a href="#减少使用影响性能的属性" class="headerlink" title="减少使用影响性能的属性"></a>减少使用影响性能的属性</h4><p>比如position:absolute || float ;</p>
<h4 id="必须为大区块样式添加注释-小区块适量注释"><a href="#必须为大区块样式添加注释-小区块适量注释" class="headerlink" title="必须为大区块样式添加注释, 小区块适量注释;"></a>必须为大区块样式添加注释, 小区块适量注释;</h4><h4 id="代码缩进与格式"><a href="#代码缩进与格式" class="headerlink" title="代码缩进与格式:"></a>代码缩进与格式:</h4><p>建议单行书写, 可根据自身习惯, 后期优化i会统一处理;</p>
<h3 id="命名规则："><a href="#命名规则：" class="headerlink" title="命名规则："></a>命名规则：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">头：header</span><br><span class="line">内容：content/container</span><br><span class="line">尾：footer</span><br><span class="line">导航：nav</span><br><span class="line">侧栏：sidebar</span><br><span class="line">栏目：column</span><br><span class="line">页面外围控制整体布局宽度：wrapper</span><br><span class="line">左右中：left right center</span><br><span class="line">登录条：loginbar</span><br><span class="line">标志：logo</span><br><span class="line">广告：banner</span><br><span class="line">页面主体：main</span><br><span class="line">热点：hot</span><br><span class="line">新闻：news</span><br><span class="line">下载：download</span><br><span class="line">子导航：subnav</span><br><span class="line">菜单：menu</span><br><span class="line">子菜单：submenu</span><br><span class="line">搜索：search</span><br><span class="line">友情链接：friendlink</span><br><span class="line">页脚：footer</span><br><span class="line">版权：copyright</span><br><span class="line">滚动：scroll</span><br><span class="line">内容：content</span><br><span class="line">标签页：tab</span><br><span class="line">文章列表：list</span><br><span class="line">提示信息：msg</span><br><span class="line">小技巧：tips</span><br><span class="line">栏目标题：title</span><br><span class="line">加入：joinus</span><br><span class="line">指南：guild</span><br><span class="line">服务：service</span><br><span class="line">注册：regsiter</span><br><span class="line">状态：status</span><br><span class="line">投票：vote</span><br><span class="line">合作伙伴：partner</span><br></pre></td></tr></table></figure>
<h4 id="注释的写法"><a href="#注释的写法" class="headerlink" title="注释的写法:"></a>注释的写法:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/* Footer */</span><br><span class="line">内容区</span><br><span class="line">/* End Footer */</span><br></pre></td></tr></table></figure>
<h4 id="id的命名"><a href="#id的命名" class="headerlink" title="id的命名:"></a>id的命名:</h4><h5 id="页面结构"><a href="#页面结构" class="headerlink" title="页面结构"></a>页面结构</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">容器: container</span><br><span class="line">页头：header</span><br><span class="line">内容：content/container</span><br><span class="line">页面主体：main</span><br><span class="line">页尾：footer</span><br><span class="line">导航：nav</span><br><span class="line">侧栏：sidebar</span><br><span class="line">栏目：column</span><br><span class="line">页面外围控制整体布局宽度：wrapper</span><br><span class="line">左右中：left right center</span><br></pre></td></tr></table></figure>
<h5 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">导航：nav</span><br><span class="line">主导航：mainbav</span><br><span class="line">子导航：subnav</span><br><span class="line">顶导航：topnav</span><br><span class="line">边导航：sidebar</span><br><span class="line">左导航：leftsidebar</span><br><span class="line">右导航：rightsidebar</span><br><span class="line">菜单：menu</span><br><span class="line">子菜单：submenu</span><br><span class="line">标题: title</span><br><span class="line">摘要: summary</span><br></pre></td></tr></table></figure>
<h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">标志：logo</span><br><span class="line">广告：banner</span><br><span class="line">登陆：login</span><br><span class="line">登录条：loginbar</span><br><span class="line">注册：regsiter</span><br><span class="line">搜索：search</span><br><span class="line">功能区：shop</span><br><span class="line">标题：title</span><br><span class="line">加入：joinus</span><br><span class="line">状态：status</span><br><span class="line">按钮：btn</span><br><span class="line">滚动：scroll</span><br><span class="line">标签页：tab</span><br><span class="line">文章列表：list</span><br><span class="line">提示信息：msg</span><br><span class="line">当前的: current</span><br><span class="line">小技巧：tips</span><br><span class="line">图标: icon</span><br><span class="line">注释：note</span><br><span class="line">指南：guild</span><br><span class="line">服务：service</span><br><span class="line">热点：hot</span><br><span class="line">新闻：news</span><br><span class="line">下载：download</span><br><span class="line">投票：vote</span><br><span class="line">合作伙伴：partner</span><br><span class="line">友情链接：link</span><br><span class="line">版权：copyright\</span><br></pre></td></tr></table></figure>
<p>基本样式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/* CSS Document */</span><br><span class="line">body &#123;margin:0; padding:0; font:12px &quot;\5B8B\4F53&quot;,san-serif;background:#fff;&#125;</span><br><span class="line">div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,form,fieldset,input,textarea,blockquote,p&#123;padding:0; margin:0;&#125;   </span><br><span class="line">table,td,tr,th&#123;font-size:12px;&#125;</span><br><span class="line">li&#123;list-style-type:none;&#125;</span><br><span class="line">img&#123;vertical-align:top;border:0;&#125;</span><br><span class="line">ol,ul &#123;list-style:none;&#125;</span><br><span class="line">h1,h2,h3,h4,h5,h6 &#123;font-size:12px; font-weight:normal;&#125;</span><br><span class="line">address,cite,code,em,th &#123;font-weight:normal; font-style:normal;&#125;</span><br><span class="line">.fB&#123;font-weight:bold;&#125;</span><br><span class="line">.f12px&#123;font-size:12px;&#125;</span><br><span class="line">.f14px&#123;font-size:14px;&#125;</span><br><span class="line">.left&#123;float:left;&#125;</span><br><span class="line">.right&#123;float:right;&#125;</span><br><span class="line"></span><br><span class="line">a &#123;color:#2b2b2b; text-decoration:none;&#125;</span><br><span class="line">a:visited &#123;text-decoration:none;&#125;</span><br><span class="line">a:hover &#123;color:#ba2636;text-decoration:underline;&#125;</span><br><span class="line">a:active &#123;color:#ba2636;&#125;</span><br></pre></td></tr></table></figure>
<p>重定义的最先，伪类其次，自定义最后，便于自己和他人阅读！</p>
<ol>
<li>不同浏览器上字号保持一致，字号建议用点数pt和像素px来定义。</li>
<li>pt一般使用中文宋体的9pt 和11pt，px一般使用中文宋体12px 和14.7px</li>
<li>这是经过优化的字号，黑体字或者宋体字加粗时，一般选用11pt 和14.7px 的字号比较合适。</li>
<li>中英文混排时，我们尽可能的将英文和数字定义为verdana 和arial 两种字体。</li>
</ol>
<h2 id="2-4-html-书写规范"><a href="#2-4-html-书写规范" class="headerlink" title="2.4  html 书写规范"></a>2.4  html 书写规范</h2><h3 id="网页制作细节-—-head区代码规范"><a href="#网页制作细节-—-head区代码规范" class="headerlink" title="网页制作细节 —- head区代码规范"></a>网页制作细节 —- head区代码规范</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head区是指HTML代码的&lt;head&gt;和&lt;/head&gt;之间的内容。</span><br></pre></td></tr></table></figure>
<h4 id="必须加入的标签"><a href="#必须加入的标签" class="headerlink" title="必须加入的标签"></a>必须加入的标签</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">公司版权注释  </span><br><span class="line">&lt;!--- The site is designed by EHM,Inc 07/2005 --&gt;</span><br><span class="line"></span><br><span class="line">网页显示字符集</span><br><span class="line">简体中文：&lt;META HTTP-EQUIV=&quot;Content-Type&quot; CONTENT=&quot;text/html; charset=gb2312&quot;&gt;</span><br><span class="line">繁体中文：&lt;META HTTP-EQUIV=&quot;Content-Type&quot; CONTENT=&quot;text/html; charset=utf-8&quot;&gt;</span><br><span class="line">英 语：&lt;META HTTP-EQUIV=&quot;Content-Type&quot; CONTENT=&quot;text/html; charset=utf-8&quot;&gt;</span><br><span class="line"></span><br><span class="line">网页制作者信息  &lt;META name=&quot;author&quot; content=&quot;webmaster@maketown.com&quot;&gt;</span><br><span class="line"></span><br><span class="line">网站简介  &lt;META NAME=&quot;DESCRIPTION&quot; CONTENT=&quot;xxxxxxxxxxxxxxxxxxxxxxxxxx&quot;&gt;</span><br><span class="line"></span><br><span class="line">搜索关键字  &lt;META NAME=&quot;keywords&quot; CONTENT=&quot;xxxx,xxxx,xxx,xxxxx,xxxx,&quot;&gt;</span><br><span class="line"></span><br><span class="line">网页的css规范  &lt;LINK href=&quot;../css/style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</span><br><span class="line"></span><br><span class="line">网页标题  &lt;title&gt;xxxxxxxxxxxxxxxxxx&lt;/title&gt;</span><br></pre></td></tr></table></figure>
<h4 id="可以选择加入的标签"><a href="#可以选择加入的标签" class="headerlink" title="可以选择加入的标签"></a>可以选择加入的标签</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">设定网页的到期时间。一旦网页过期，必须到服务器上重新调阅。</span><br><span class="line">&lt;META HTTP-EQUIV=&quot;expires&quot; CONTENT=&quot;Wed, 26 Feb 1997 08：21：57 GMT&quot;&gt;</span><br><span class="line"></span><br><span class="line">禁止浏览器从本地机的缓存中调阅页面内容。</span><br><span class="line">&lt;META HTTP-EQUIV=&quot;Pragma&quot; CONTENT=&quot;no-cache&quot;&gt;</span><br><span class="line"></span><br><span class="line">用来防止别人在框架里调用你的页面。</span><br><span class="line">&lt;META HTTP-EQUIV=&quot;Window-target&quot; CONTENT=&quot;_top&quot;&gt;</span><br><span class="line"></span><br><span class="line">自动跳转。</span><br><span class="line">&lt;META HTTP-EQUIV=&quot;Refresh&quot; CONTENT=&quot;5;URL=http：//www.yahoo.com&quot;&gt;  5指时间停留5秒</span><br><span class="line"></span><br><span class="line">网页搜索机器人向导。用来告诉搜索机器人哪些页面需要索引，哪些页面不需要索引。</span><br><span class="line">&lt;META NAME=&quot;robots&quot; CONTENT=&quot;none&quot;&gt;</span><br><span class="line">CONTENT的参数有all,none,index,noindex,follow,nofollow。默认是all。</span><br><span class="line"></span><br><span class="line">收藏夹图标  &lt;link rel = &quot;Shortcut Icon&quot; href=&quot;favicon.ico&quot;&gt;</span><br><span class="line"></span><br><span class="line">所有的javascript的调用尽量采取外部调用.</span><br><span class="line">&lt;SCRIPT LANGUAGE=&quot;JavaScript&quot; SRC=&quot;script/xxxxx.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line"></span><br><span class="line">附&lt;body&gt;标签：</span><br><span class="line">&lt;body&gt;标签不属于head区，这里强调一下，为了保证浏览器的兼容性，必须设置页面背景&lt;body bgcolor=&quot;#FFFFFF&quot;&gt;</span><br></pre></td></tr></table></figure>
<h3 id="网页制作细节-—-字体"><a href="#网页制作细节-—-字体" class="headerlink" title="网页制作细节 —- 字体"></a>网页制作细节 —- 字体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1. 在设定字体样式时对于文字字号样式和行间距应必须使用CSS样式表。禁止在页面中出现 &lt;font size=?&gt; 标记。</span><br><span class="line"></span><br><span class="line">2.在网页中中文应首选使用宋体。英文和数字首选使用verdana 和arial 两种字体。一般使用中文宋体的9pt 和11pt 或12px 和14.7px 这是经过优化的字号，黑体字或者宋体字加粗时，一般选用11pt 和14.7px 的字号比较合适。</span><br><span class="line"></span><br><span class="line">3. 为了最大程度的发挥浏览器自动排版的功能，在一段完整的文字中请尽量不要使用&lt;br&gt; 来人工干预分段。</span><br><span class="line"></span><br><span class="line">4.不同语种的文字之间应该有一个半角空格，但避头的符号之前和避尾的符号之后除外，汉字之间的标点要用全角标点，英文字母和数字周围的括号应该使用半角括号。</span><br><span class="line"></span><br><span class="line">5. 请不要在网页中连续出现多于一个的   也尽量少使用全角空格（英文字符集下，全角空格会变成乱码），空白应该尽量使用 text-indent, padding, margin, hspace, vspace 以及透明的gif 图片来实现。</span><br><span class="line"></span><br><span class="line">6. 行距建议用百分比来定义，常用的两个行距的值是line-height:120%/150%.</span><br><span class="line"></span><br><span class="line">7. 排版中我们经常会遇到需要进行首行缩进的处理，不要使用   或者全角空格来达到效果，规范的做法是在样式表中定义 p &#123; text-indent: 2em; &#125; 然后给每一段加上 &lt;p&gt; 标记，注意，一般情况下，请不要省略 &lt;/p&gt; 结束标记 。</span><br></pre></td></tr></table></figure>
<h3 id="网页制作细节-—-链接"><a href="#网页制作细节-—-链接" class="headerlink" title="网页制作细节 —- 链接"></a>网页制作细节 —- 链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 网站中的链接路径全部采用相对路径，一般链接到某一目录下的缺省文件的链接路径不必写全名，如我们不必这样：&lt;a href=”aboutus/index.htm”&gt; 而应该这样：&lt;a href=”aboutus/”&gt;，所有内页指向首页的链接写成&lt;a href=”/”&gt;</span><br><span class="line"></span><br><span class="line">2. 在浏览器里，当我们点击空链接时，它会自动将当前页面重置到首端，从而影响用户正常的阅读内容，我们用代码“javascript:void(null)”代替原来的“#”标记</span><br></pre></td></tr></table></figure>
<h3 id="网页制作细节-—-表格"><a href="#网页制作细节-—-表格" class="headerlink" title="网页制作细节 —- 表格"></a>网页制作细节 —- 表格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1px表格 style=&quot;border-collapse: collapse&quot;</span><br><span class="line">实例如下：</span><br><span class="line">&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; width=&quot;32&quot; height=&quot;32&quot; style=&quot;border-collapse: collapse&quot;</span><br><span class="line">bordercolor=&quot;#000000&quot; cellpadding=&quot;0&quot;&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">设置亮、暗边框颜色</span><br><span class="line">表格有亮边框（bordercolorlight）和暗边框（bordercolordark）两个属性可以对表格样式设置。</span><br><span class="line">&lt;table border=&quot;1&quot; width=&quot;500&quot; bordercolorlight=&quot;#000000&quot; bordercolordark=&quot;#FFFFFF&quot;&gt;</span><br><span class="line"></span><br><span class="line">在写 &lt;table&gt; 互相嵌套时，严格按照的规范，对于单独的一个&lt;table&gt;来说，&lt;table&gt;&lt;tr&gt;对齐，&lt;td&gt; 缩进两个半角空格，&lt;td&gt; 中如果还有嵌套的表格，&lt;table&gt;也缩进两个半角空格，如果&lt;td&gt;中没有任何嵌套的表格，&lt;/td&gt; 结束标记应该与 &lt;td&gt; 处于同一行，不要换行，</span><br><span class="line">如我们注意在源代码中不应有这样的代码：</span><br><span class="line">&lt;td&gt;&lt;img src=”../images/sample.gif”&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">而应该是这样的：</span><br><span class="line">&lt;td&gt;&lt;img src=”../images/sample.gif”&gt;&lt;/td&gt;</span><br><span class="line">这是因为浏览器认为换行相当于一个半角空格，以上不规范的写法相当于无意中增加一个半角空格，如果确实有必要增加一个半角空格，也应该这样写：</span><br><span class="line">&lt;td&gt;&lt;img src=”../images/sample.gif”&gt; &lt;/td&gt;</span><br><span class="line"></span><br><span class="line">一个网页要尽量避免用整个一张大表格，所有的内容都嵌套在这个大表格之内，因为浏览器在解释页面的元素时，是以表格为单位逐一显示，如果一张网页是嵌套在一个大表格之内，那么很可能造成的后果就是，当浏览者敲入网址，他要先面对一片空白很长时间，然后所有的网页内容同时出现。如果必须这样做，请使用 &lt;tbody&gt;标记，以便能够使这个大表格分块显示</span><br></pre></td></tr></table></figure>
<h3 id="网页制作细节-—-下载速度"><a href="#网页制作细节-—-下载速度" class="headerlink" title="网页制作细节 —- 下载速度"></a>网页制作细节 —- 下载速度</h3><p>首页Flash 网页大小应限定在 200K 以下，尽可能的使用矢量图形和Action来减小动画大小。非首页静态页面含图片大小应限定在 70K 左右，尽可能的使用背景颜色替换大块同色图片。</p>
<h3 id="网页制作细节-—-include"><a href="#网页制作细节-—-include" class="headerlink" title="网页制作细节 —- include"></a>网页制作细节 —- include</h3><p>asp标准写法 <!--#include file="inc/index_top.asp" --><br>jsp 标准写法 &lt;%@ include file=”../inc/index_top..jsp” %&gt;</p>
<h3 id="网页制作细节-—-Alt和Title"><a href="#网页制作细节-—-Alt和Title" class="headerlink" title="网页制作细节 —- Alt和Title"></a>网页制作细节 —- Alt和Title</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">都是提示性语言标签，请注意它们之间的区别。</span><br><span class="line">在我们浏览网页时，当鼠标停留在图片对象或文字链接上时，在鼠标的右下角有时会出现一个提示信息框。对目标进行一定的注释说明。在一些场合，它的作用是很重要的。</span><br><span class="line">alt 用来给图片来提示的。Title用来给链接文字或普通文字提示的。</span><br><span class="line">用法如下：</span><br><span class="line">&lt;p Title=&quot;给链接文字提示&quot;&gt;文字&lt;/p&gt;</span><br><span class="line">&lt;a href=&quot;#&quot; Title=&quot;给链接文字提示&quot;&gt;文字&lt;/a&gt;</span><br><span class="line">&lt;img src=&quot;图片.gif&quot; alt=&quot;给图片提示&quot;&gt;</span><br></pre></td></tr></table></figure>
<h3 id="网页制作细节-—-缓存"><a href="#网页制作细节-—-缓存" class="headerlink" title="网页制作细节 —- 缓存"></a>网页制作细节 —- 缓存</h3><p>网页不会被缓存<br>HTM网页</p>
<p><meta http-equiv="pragma" content="no-cache"></p>
<p><meta http-equiv="Cache-Control" content="no-cache, must-revalidate"></p>
<p><meta http-equiv="expires" content="0"><br>ASP网页<br>Response.Expires = -1<br>Response.ExpiresAbsolute = Now() - 1<br>Response.cachecontrol = “no-cache”</p>
<h3 id="网页制作细节-—-浏览器兼容性"><a href="#网页制作细节-—-浏览器兼容性" class="headerlink" title="网页制作细节 —- 浏览器兼容性"></a>网页制作细节 —- 浏览器兼容性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">创建站点时，应该明白访问者可能使用各种 Web 浏览器。在已知的其他设计限制下，尽可能将站点设计为具有最大的浏览器兼容性。</span><br><span class="line">目前使用的 Web 浏览器有二十多种，大多数已发行了多个版本。即使您只针对使用 Netscape Navigator 和 Microsoft Internet Explorer 的大多数 Web 用户，但您应明确并不是每个人都在使用这两种浏览器的最新版本。</span><br><span class="line">您的站点越复杂（在布局、动画、多媒体内容和交互方面），跨浏览器兼容的可能性就越小。例如，并非所有的浏览器都可以运行JavaScript。不使用特殊字符的纯文本页面或许能够在任何浏览器中正确显示，但比起有效地使用图形、布局和交互的页面，这样的页面在美感上可能要差得多。所以，应尽量在最佳效果设计和最大浏览器兼容性设计之间取得平衡。</span><br><span class="line">所有的HTML 标签的属性都要用单引号或者双引号括起，即我们应该写 &lt;a href=”url”&gt; 而不 是 &lt;a href=url&gt;.</span><br></pre></td></tr></table></figure>
<h3 id="图片处理细节-—-banner"><a href="#图片处理细节-—-banner" class="headerlink" title="图片处理细节 —- banner"></a>图片处理细节 —- banner</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">全尺寸banner为468X60px，半尺寸banner为234X60px，小banner为88X31px。</span><br><span class="line">另外120X90，120X60也是小图标的标准尺寸。全尺寸banner不超过14K。</span><br><span class="line">普遍的banner尺寸760X100，750X120，468X60，468X95，728X90，585X140</span><br><span class="line">次级页的pip尺寸360X300，336X280</span><br><span class="line">游标:100X100或120X120</span><br></pre></td></tr></table></figure>
<h3 id="图片处理细节-—-LOGO的国际标准规范"><a href="#图片处理细节-—-LOGO的国际标准规范" class="headerlink" title="图片处理细节 —- LOGO的国际标准规范"></a>图片处理细节 —- LOGO的国际标准规范</h3><p>为了便于INTERNET上信息的传播，一个统一的国际标准是需要的。实际上已经有了这样的一整套标准。其中关于网站的LOGO，目前有三种规格：<br>88<em>31 这是互联网上最普遍的LOGO规格。<br>120</em>60 这种规格用于一般大小的LOGO。<br>120*90 这种规格用于大型LOGO。</p>
<h3 id="图片处理细节-—-页面修饰图片处理"><a href="#图片处理细节-—-页面修饰图片处理" class="headerlink" title="图片处理细节 —- 页面修饰图片处理"></a>图片处理细节 —- 页面修饰图片处理</h3><p>图片经过优化以加快下载的速度,有较佳的视觉空间效果，用图要与页面风格、页面内容相符；制作精美，细节处理得当。</p>
<h2 id="2-5-JavaScript书写规范"><a href="#2-5-JavaScript书写规范" class="headerlink" title="2.5  JavaScript书写规范"></a>2.5  JavaScript书写规范</h2><ol>
<li>书写过程中, 每行代码结束必须有分号; 原则上所有功能均根据XXX项目需求原生开发, 以避免网上down下来的代码造成的代码污染(沉冗代码 || 与现有代码冲突 || …);</li>
<li>库引入: 原则上仅引入jQuery库, 若需引入第三方库, 须与团队其他人员讨论决定;</li>
<li>变量命名: 驼峰式命名. 原生JavaScript变量要求是纯英文字母, 首字母须小写, 如iTaoLun; jQuery变量要求首字符为’_’, 其他与原生JavaScript 规则相同, 如: _iTaoLun; 另, 要求变量集中声明, 避免全局变量.</li>
<li>类命名: 首字母大写, 驼峰式命名. 如 ITaoLun;</li>
<li>函数命名: 首字母小写驼峰式命名. 如iTaoLun();</li>
<li>命名语义化, 尽可能利用英文单词或其缩写;</li>
<li>尽量避免使用存在兼容性及消耗资源的方法或属性, 比如eval() &amp; innerText;</li>
<li>后期优化中, JavaScript非注释类中文字符须转换成unicode编码使用, 以避免编码错误时乱码显示;</li>
<li>代码结构明了, 加适量注释. 提高函数重用率;</li>
<li>注重与html分离, 减小reflow, 注重性能.</li>
</ol>
<h2 id="2-6-图片规范"><a href="#2-6-图片规范" class="headerlink" title="2.6   图片规范"></a>2.6   图片规范</h2><ol>
<li>所有页面元素类图片均放入img文件夹, 测试用图片放于img/demoimg文件夹;</li>
<li>图片格式仅限于gif || png || jpg;</li>
<li>命名全部用小写英文字母 || 数字 || _ 的组合，其中不得包含汉字 || 空格 || 特殊字符；尽量用易懂的词汇, 便于团队其他成员理解; 另, 命名分头尾两部分, 用下划线隔开, 比如ad_left01.gif || btn_submit.gif;</li>
<li>在保证视觉效果的情况下选择最小的图片格式与图片质量, 以减少加载时间;</li>
<li>尽量避免使用半透明的png图片(若使用, 请参考css规范相关说明);</li>
<li>运用css sprite技术集中小的背景图或图标, 减小页面http请求, 但注意, 请务必在对应的sprite psd源图中划参考线, 并保存至img目录下.</li>
</ol>
<h2 id="2-7-注释规范"><a href="#2-7-注释规范" class="headerlink" title="2.7  注释规范"></a>2.7  注释规范</h2><ol>
<li>html注释: 注释格式 <!--这儿是注释-->, ‘–’只能在注释的始末位置,不可置入注释文字区域;</li>
<li>css注释: 注释格式 /<em>这儿是注释</em>/;</li>
<li>JavaScript注释, 单行注释使用’//这儿是单行注释’ ,多行注释使用 /<em> 这儿有多行注释 </em>/;</li>
</ol>
<h2 id="2-8-浏览器兼容性-CSS-hack"><a href="#2-8-浏览器兼容性-CSS-hack" class="headerlink" title="2.8  浏览器兼容性 CSS hack"></a>2.8  浏览器兼容性 CSS hack</h2><h3 id="标识区别："><a href="#标识区别：" class="headerlink" title="标识区别："></a>标识区别：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">区别IE6,IE7,IE8,FF。</span><br><span class="line">1. IE都能识别* ; 标准浏览器(如FF)不能识别*；</span><br><span class="line">2. IE6能识别*，但不能识别 !important; IE6在样式前面加_</span><br><span class="line">3. IE7能识别*，也能识别!important;</span><br><span class="line">4. IE8能识别\ 9 例如：background:red \9;</span><br><span class="line">5. firefox不能识别*，但能识别!important;</span><br></pre></td></tr></table></figure>
<h4 id="IE6和firefox的区别："><a href="#IE6和firefox的区别：" class="headerlink" title="IE6和firefox的区别："></a>IE6和firefox的区别：</h4><p>background:orange;<br>*background:blue;<br>意思就是火狐浏览器的背景颜色是橙色,而IE浏览器的背景色是蓝色.</p>
<h4 id="IE6和IE7的区别："><a href="#IE6和IE7的区别：" class="headerlink" title="IE6和IE7的区别："></a>IE6和IE7的区别：</h4><p>background:green !important;<br>background:blue;<br>意思指的是:IE7的背景颜色是绿色,IE6的背景颜色是蓝色</p>
<h4 id="IE7和FF的区别："><a href="#IE7和FF的区别：" class="headerlink" title="IE7和FF的区别："></a>IE7和FF的区别：</h4><p>background:orange;<br>*background:green;<br>意思指的是:火狐浏览器的背景颜色是橙色,而IE7的背景颜色是绿色</p>
<h4 id="FF，IE7，IE6的区别："><a href="#FF，IE7，IE6的区别：" class="headerlink" title="FF，IE7，IE6的区别："></a>FF，IE7，IE6的区别：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">background:orange;</span><br><span class="line">*background:green !important;</span><br><span class="line">*background:blue;</span><br><span class="line">意思是火狐浏览器的的背景橙色,IE7浏览器的背景颜色是绿色,而IE6浏览器的颜色是蓝色.</span><br></pre></td></tr></table></figure>
<h3 id="实践建议"><a href="#实践建议" class="headerlink" title="实践建议"></a>实践建议</h3><h4 id="开发平台的选择"><a href="#开发平台的选择" class="headerlink" title="开发平台的选择"></a>开发平台的选择</h4><p>在 Firefox 上编写CSS, 同时兼容其他浏览器的. 这样做肯定会比在 IE 做好再到别的浏览器兼容来得容易, 因为 IE 对老标准支持还是很不错的, 而 IE 的一些特有功能人家却不支持. 所以推荐以 Firefox 结合 Firebug 扩展作为平台。</p>
<h4 id="CSS-Hack-的顺序"><a href="#CSS-Hack-的顺序" class="headerlink" title="CSS Hack 的顺序"></a>CSS Hack 的顺序</h4><p>使用 Firefox 作为平台, 只要代码写得够标准, 其实要 Hack 的地方不会很多的, IE 以外的浏览器几乎都不会有问题, 所以可以暂时忽略,<br>顺序如下：Firefox -&gt; IE6 -&gt; IE7 -&gt; 其他</p>
<h4 id="Hack-的方法"><a href="#Hack-的方法" class="headerlink" title="Hack 的方法"></a>Hack 的方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">说到方法有两种, 一种是在不同文件中处理, 另一种则是在同一个文件中处理. 其实作用是相同的, 只是出发点不一样而已.</span><br><span class="line"></span><br><span class="line">1. 同一文件中处理.</span><br><span class="line">如: id=&quot;bgcolor&quot;的控件要在 IE6中显示蓝色, IE7中显示绿色, Firefox等其他浏览器中显示红色。</span><br><span class="line"></span><br><span class="line">IE6不认 !important,也不认 *+html.所以 IE6只能是 blue.</span><br><span class="line">IE7认 !important,也认 *+html,优先度: (*+html + !important) &gt; !important &gt; +html. IE7可以是 red, blue和 green,但 green的优先度最高.</span><br><span class="line">Firefox和其他浏览器都认 !important. !important优先, Firefox可以是 red和 blue,但 red优先度高.上述的优先符号均是 CSS3标准允许的,其他浏览器也还有其他的 Hack方法,但我迄今还没遇到过 Firefox正常, IE以外的其他浏览器不正常的情况,所以无可分享.只要代码规范,相信这种情况的发生应该是很罕见 (JavaScript除外).</span><br><span class="line"></span><br><span class="line">2. 不同文件中处理.</span><br><span class="line">为什么同一文件中可以处理还要写在多个文件里面针对不同的浏览器?这是为了欺骗 W3C的验证工具,其实只需要两个文件,一个是针对所有浏览器的,一个只为 IE服务.将所有符合 W3C的代码写到一个里面去,而一些 IE中必须的,又不能通过 W3C验证的代码 (如: cursor:hand;)放到另一个文件中,再用下面的方法导入.</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>属性</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>/<em>…</em>/ – 注释</td>
</tr>
<tr>
<td>azimuth</td>
</tr>
<tr>
<td>background-attachment</td>
<td>背景图片随滚动轴的移动方式</td>
</tr>
<tr>
<td>background-color</td>
<td>背景颜色</td>
</tr>
<tr>
<td>background-image</td>
<td>背景图像</td>
</tr>
<tr>
<td>background-position</td>
<td>背景图片的位置</td>
</tr>
<tr>
<td>background-repeat</td>
<td>背景图片的显示方式</td>
</tr>
<tr>
<td>background</td>
<td>统一背景</td>
</tr>
<tr>
<td>border</td>
<td>统一边框所有属性</td>
</tr>
<tr>
<td>border-bottom</td>
<td>统一下边框</td>
</tr>
<tr>
<td>border-bottom-color</td>
<td>下边框颜色</td>
</tr>
<tr>
<td>border-bottom-style</td>
<td>下边框样式</td>
</tr>
<tr>
<td>border-bottom-width</td>
<td>下边框宽度</td>
</tr>
<tr>
<td>border-break</td>
<td>内容分开的边框</td>
</tr>
<tr>
<td>border-collapse</td>
</tr>
<tr>
<td>border-color</td>
<td>边框颜色</td>
</tr>
<tr>
<td>border-left</td>
<td>统一左边框</td>
</tr>
<tr>
<td>border-image</td>
<td>边框图像</td>
</tr>
<tr>
<td>border-left-color</td>
<td>左边框颜色</td>
</tr>
<tr>
<td>border-left-style</td>
<td>左边框样式</td>
</tr>
<tr>
<td>border-left-width</td>
<td>左边框宽度</td>
</tr>
<tr>
<td>border-radius</td>
<td>圆角边框</td>
</tr>
<tr>
<td>border-right-color</td>
<td>右边框颜色</td>
</tr>
<tr>
<td>border-right-style</td>
<td>右边框样式</td>
</tr>
<tr>
<td>border-right-width</td>
<td>右边框宽度</td>
</tr>
<tr>
<td>border-right</td>
<td>统一右边框</td>
</tr>
<tr>
<td>border-spacing</td>
</tr>
<tr>
<td>border-style</td>
<td>边框样式</td>
</tr>
<tr>
<td>border-top</td>
<td>统一上边框</td>
</tr>
<tr>
<td>border-top-color</td>
<td>上边框颜色</td>
</tr>
<tr>
<td>border-top-style</td>
<td>上边框样式</td>
</tr>
<tr>
<td>border-top-width</td>
<td>上边框宽度</td>
</tr>
<tr>
<td>border-width</td>
<td>统一边框宽度</td>
</tr>
<tr>
<td>bottom</td>
<td>下偏移属性</td>
</tr>
<tr>
<td>caption-side</td>
</tr>
<tr>
<td>clear</td>
<td>清除</td>
</tr>
<tr>
<td>clip</td>
<td>了盒子可显示的区域</td>
</tr>
<tr>
<td>color</td>
<td>颜色</td>
</tr>
<tr>
<td>content</td>
<td>字符串</td>
</tr>
<tr>
<td>counter-increment</td>
</tr>
<tr>
<td>counter-reset</td>
</tr>
<tr>
<td>cue-after</td>
</tr>
<tr>
<td>cue-before</td>
</tr>
<tr>
<td>cue</td>
</tr>
<tr>
<td>cursor</td>
<td>鼠标样式</td>
</tr>
<tr>
<td>direction</td>
</tr>
<tr>
<td>display</td>
<td>显示方式</td>
</tr>
<tr>
<td>elevation</td>
</tr>
<tr>
<td>empty-cells</td>
</tr>
<tr>
<td>float</td>
<td>元素漂浮</td>
</tr>
<tr>
<td>font-family– 字体</td>
</tr>
<tr>
<td>font-size</td>
<td>字体大小</td>
</tr>
<tr>
<td>font-style</td>
<td>字体样式</td>
</tr>
<tr>
<td>font-variant</td>
<td>小型的大写字母字体</td>
</tr>
<tr>
<td>font-weight</td>
<td>字体粗细</td>
</tr>
<tr>
<td>font</td>
<td>统一字体所有属性</td>
</tr>
<tr>
<td>height</td>
<td>盒子高度</td>
</tr>
<tr>
<td>left</td>
<td>左偏移属性</td>
</tr>
<tr>
<td>letter-spacing</td>
<td>文本中字母的间距(中文为文字的间距)</td>
</tr>
<tr>
<td>line-height</td>
<td>一段文字中每行文字的间距</td>
</tr>
<tr>
<td>list-style-image</td>
<td>列表图像</td>
</tr>
<tr>
<td>list-style-position</td>
<td>列表位置</td>
</tr>
<tr>
<td>list-style-type</td>
<td>列表类型</td>
</tr>
<tr>
<td>list-style</td>
<td>统一列表所有属性</td>
</tr>
<tr>
<td>margin-right</td>
<td>右边外补白宽度</td>
</tr>
<tr>
<td>margin-left</td>
<td>左边外补白宽度</td>
</tr>
<tr>
<td>margin-top</td>
<td>上边外补白宽度</td>
</tr>
<tr>
<td>margin-bottom</td>
<td>下边外补白宽度</td>
</tr>
<tr>
<td>margin</td>
<td>统一边外补白</td>
</tr>
<tr>
<td>max-height</td>
<td>最大高度</td>
</tr>
<tr>
<td>max-width</td>
<td>最大宽度</td>
</tr>
<tr>
<td>min-height</td>
<td>最小高度</td>
</tr>
<tr>
<td>min-width</td>
<td>最小宽度</td>
</tr>
<tr>
<td>opacity</td>
<td>元素的透明度</td>
</tr>
<tr>
<td>orphans</td>
</tr>
<tr>
<td>outline-color</td>
</tr>
<tr>
<td>outline-style</td>
</tr>
<tr>
<td>outline-width</td>
</tr>
<tr>
<td>outline</td>
</tr>
<tr>
<td>overflow</td>
<td>盒子中内容的显示方式</td>
</tr>
<tr>
<td>padding-top</td>
<td>上边内补白</td>
</tr>
<tr>
<td>padding-right</td>
<td>右边内补白</td>
</tr>
<tr>
<td>padding-bottom</td>
<td>下边内补白</td>
</tr>
<tr>
<td>padding-left</td>
<td>左边内补白</td>
</tr>
<tr>
<td>padding</td>
<td>统一边内补白</td>
</tr>
<tr>
<td>page-break-after</td>
</tr>
<tr>
<td>page-break-before</td>
</tr>
<tr>
<td>page-break-inside</td>
</tr>
<tr>
<td>pause-after</td>
</tr>
<tr>
<td>pause-before</td>
</tr>
<tr>
<td>pause</td>
</tr>
<tr>
<td>pitch-range</td>
</tr>
<tr>
<td>pitch</td>
</tr>
<tr>
<td>play-during</td>
</tr>
<tr>
<td>position</td>
<td>元素的定位</td>
</tr>
<tr>
<td>quotes</td>
</tr>
<tr>
<td>richness</td>
</tr>
<tr>
<td>right</td>
<td>右偏移属性</td>
</tr>
<tr>
<td>speak-header</td>
</tr>
<tr>
<td>speak-numeral</td>
</tr>
<tr>
<td>speak-punctuation</td>
</tr>
<tr>
<td>speak</td>
</tr>
<tr>
<td>speech-rate</td>
</tr>
<tr>
<td>stress</td>
</tr>
<tr>
<td>table-layout</td>
</tr>
<tr>
<td>text-align</td>
<td>文本对齐方式</td>
</tr>
<tr>
<td>text-decoration</td>
<td>文本是否有划线以及划线的方式</td>
</tr>
<tr>
<td>text-indent</td>
<td>文本的首行缩进</td>
</tr>
<tr>
<td>text-transform</td>
<td>文本的大小写状态,此属性对中文无意义</td>
</tr>
<tr>
<td>top</td>
<td>上偏移属性</td>
</tr>
<tr>
<td>unicode-bidi</td>
</tr>
<tr>
<td>vertical-align</td>
<td>垂直对齐方式</td>
</tr>
<tr>
<td>visibility</td>
<td>元素是否可见</td>
</tr>
<tr>
<td>voice-family</td>
</tr>
<tr>
<td>volume</td>
</tr>
<tr>
<td>white-space</td>
<td>文本的格式</td>
</tr>
<tr>
<td>widows</td>
</tr>
<tr>
<td>width</td>
<td>盒子宽度</td>
</tr>
<tr>
<td>word-spacing</td>
<td>以空格间隔文字的间距</td>
</tr>
<tr>
<td>z-index</td>
<td>z轴顺序</td>
</tr>
</tbody>
</table>
<p>HTML标签索引 – 按照字母顺序<br>引用</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>!–…–</td>
<td>HTML注释</td>
</tr>
<tr>
<td>!DOCTYPE</td>
<td>文档类型</td>
</tr>
<tr>
<td>a</td>
<td>链接</td>
</tr>
<tr>
<td>abbr</td>
<td>缩写(例如:WWW,HTTP,HTML etc.)</td>
</tr>
<tr>
<td>acronym</td>
<td>定义首字母缩写</td>
</tr>
<tr>
<td>address</td>
<td>定义一个地址元素</td>
</tr>
<tr>
<td>applet</td>
<td>定义一个JAVA的applet</td>
</tr>
<tr>
<td>area</td>
<td>定义一个图像地图区域</td>
</tr>
<tr>
<td>b</td>
<td>定义粗体文字</td>
</tr>
<tr>
<td>base</td>
<td>定义一个基URL用于页面的链接与引用</td>
</tr>
<tr>
<td>basefont</td>
<td>定义基本字体</td>
</tr>
<tr>
<td>bdo</td>
<td>定义文字的显示方向</td>
</tr>
<tr>
<td>big</td>
<td>定义大字体的文字</td>
</tr>
<tr>
<td>blockcode</td>
<td>定义代码段</td>
</tr>
<tr>
<td>blockquote</td>
<td>定义一段引用</td>
</tr>
<tr>
<td>body</td>
<td>定义HTML文档体</td>
</tr>
<tr>
<td>br</td>
<td>定义换行</td>
</tr>
<tr>
<td>button</td>
<td>定义一个按钮</td>
</tr>
<tr>
<td>caption</td>
<td>定义表格的说明</td>
</tr>
<tr>
<td>center</td>
<td>定义居中</td>
</tr>
<tr>
<td>cite</td>
<td>定义引用</td>
</tr>
<tr>
<td>code</td>
<td>定义程序代码</td>
</tr>
<tr>
<td>col</td>
<td>定义一个表格的栏目</td>
</tr>
<tr>
<td>colgroup</td>
<td>定义一个表格的栏目组</td>
</tr>
<tr>
<td>dd</td>
<td>定义列表一个组的描述</td>
</tr>
<tr>
<td>del</td>
<td>定义被删除的文字</td>
</tr>
<tr>
<td>dfn</td>
<td>定义一个元素的额外说明</td>
</tr>
<tr>
<td>dir– 定义一个多栏目的目录列表</td>
</tr>
<tr>
<td>div</td>
<td>定义一个块元素</td>
</tr>
<tr>
<td>dl</td>
<td>定义一个自定义列表</td>
</tr>
<tr>
<td>dt</td>
<td>定义一个列表组</td>
</tr>
<tr>
<td>em</td>
<td>定义强调显示的内容</td>
</tr>
<tr>
<td>embed</td>
<td>在网页中嵌入除图片外的多媒体</td>
</tr>
<tr>
<td>fieldset</td>
<td>定义一组表单</td>
</tr>
<tr>
<td>font</td>
<td>定义字体</td>
</tr>
<tr>
<td>form</td>
<td>定义一个表单</td>
</tr>
<tr>
<td>frame</td>
<td>定义一个子框架(窗口)</td>
</tr>
<tr>
<td>frameset</td>
<td>定义一个框架</td>
</tr>
<tr>
<td>h1 h2 h3 h4 h5 h6</td>
<td>定义标题1至标题6</td>
</tr>
<tr>
<td>head</td>
<td>定义一个HTML文档的头信息</td>
</tr>
<tr>
<td>hr</td>
<td>定义一个水平线</td>
</tr>
<tr>
<td>html</td>
<td>定义一个HTML文档的开始</td>
</tr>
<tr>
<td>i</td>
<td>定义斜体文字</td>
</tr>
<tr>
<td>iframe</td>
<td>定义一个内联的框架(窗口)</td>
</tr>
<tr>
<td>img</td>
<td>定义一个图像</td>
</tr>
<tr>
<td>input</td>
<td>定义一个表单的输入域</td>
</tr>
<tr>
<td>ins</td>
<td>定义被插入的文字</td>
</tr>
<tr>
<td>isindex</td>
<td>定义一个单行的输入域</td>
</tr>
<tr>
<td>kbd</td>
<td>表明用户输入的文字</td>
</tr>
<tr>
<td>l</td>
<td>定义一个行</td>
</tr>
<tr>
<td>label</td>
<td>定义一个表单的域的说明</td>
</tr>
<tr>
<td>legend</td>
<td>定义一组表单的标题(与fieldset一起使用)</td>
</tr>
<tr>
<td>li</td>
<td>定义列表的内容</td>
</tr>
<tr>
<td>link</td>
<td>定义一个资源的引用</td>
</tr>
<tr>
<td>listing</td>
<td>定义小号文字，字体为monospaced</td>
</tr>
<tr>
<td>map</td>
<td>定义一个图像地图</td>
</tr>
<tr>
<td>menu</td>
<td>定义一个单栏目的菜单列表</td>
</tr>
<tr>
<td>meta</td>
<td>定义meta信息</td>
</tr>
<tr>
<td>nobr</td>
<td>定义在一行显示内容</td>
</tr>
<tr>
<td>noframes</td>
<td>定义框架无法显示的切换内容</td>
</tr>
<tr>
<td>noscript</td>
<td>定义脚本无法执行的切换内容</td>
</tr>
<tr>
<td>object</td>
<td>定义一个内嵌的物件(例如:图像, 媒体, 代码 etc)</td>
</tr>
<tr>
<td>ol</td>
<td>定义一个有序列表</td>
</tr>
<tr>
<td>optgroup</td>
<td>定义一个选择组</td>
</tr>
<tr>
<td>option</td>
<td>定义一个选择的下拉列表</td>
</tr>
<tr>
<td>p</td>
<td>定义段落</td>
</tr>
<tr>
<td>param</td>
<td>定义一个物件的参数</td>
</tr>
<tr>
<td>plaintext</td>
<td>定义简单文字，字体为monospaced</td>
</tr>
<tr>
<td>pre</td>
<td>按预定义格式显示</td>
</tr>
<tr>
<td>q</td>
<td>定义一个简短的内联引用</td>
</tr>
<tr>
<td>quote</td>
<td>定义一个简短的内联引用</td>
</tr>
<tr>
<td>s</td>
<td>定义删除线的文字</td>
</tr>
<tr>
<td>samp</td>
<td>一段输出的脚本,程序</td>
</tr>
<tr>
<td>script</td>
<td>定义一个脚本的开始</td>
</tr>
<tr>
<td>section</td>
<td>定义标题段</td>
</tr>
<tr>
<td>select</td>
<td>定义一个选择列表</td>
</tr>
<tr>
<td>separator</td>
<td>定义一个段落分隔</td>
</tr>
<tr>
<td>small</td>
<td>定义小字体的文字</td>
</tr>
<tr>
<td>span</td>
<td>定义文档中的一段</td>
</tr>
<tr>
<td>strike</td>
<td>定义删除线样式的文字</td>
</tr>
<tr>
<td>strong</td>
<td>定义要强调显示的内容</td>
</tr>
<tr>
<td>style</td>
<td>定义一个样式</td>
</tr>
<tr>
<td>sub</td>
<td>定义下标</td>
</tr>
<tr>
<td>sup</td>
<td>定义上标</td>
</tr>
<tr>
<td>table</td>
<td>定义一个表格</td>
</tr>
<tr>
<td>tbody</td>
<td>定义表格的身体</td>
</tr>
<tr>
<td>td</td>
<td>定义表格的数据单元</td>
</tr>
<tr>
<td>textarea</td>
<td>定义一个多行的文字输入域</td>
</tr>
<tr>
<td>tfoot</td>
<td>定义表格的尾部</td>
</tr>
<tr>
<td>th</td>
<td>定义表格的标题单元</td>
</tr>
<tr>
<td>thead</td>
<td>定义表格的头部</td>
</tr>
<tr>
<td>title</td>
<td>定义HTML文档的标题</td>
</tr>
<tr>
<td>tr</td>
<td>定义表格的一行</td>
</tr>
<tr>
<td>tt</td>
<td>定义单间距的文字</td>
</tr>
<tr>
<td>u</td>
<td>定义下划线样式的文字</td>
</tr>
<tr>
<td>ul</td>
<td>定义一个无序列表</td>
</tr>
<tr>
<td>var</td>
<td>表明一个程序的变量</td>
</tr>
<tr>
<td>wbr</td>
<td>定义在nobr中强迫换行</td>
</tr>
<tr>
<td>xmp</td>
<td>预定义格式文字显示</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>属性</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>cmd</td>
<td>打开dos窗口</td>
</tr>
<tr>
<td>ipconfig</td>
<td>查看ip地址</td>
</tr>
<tr>
<td>\192.168.1.*\C$</td>
<td>侵入别人的计算机桌面</td>
</tr>
<tr>
<td>ping</td>
<td>ping别人的ip地址</td>
</tr>
<tr>
<td>route print</td>
<td>查看网关和端口</td>
</tr>
<tr>
<td>ftp</td>
<td>打开ftp共享程序</td>
</tr>
<tr>
<td>shutdown -s -t 10</td>
<td>设置关机</td>
</tr>
<tr>
<td>shutdown -r -t 10</td>
<td>设置重启</td>
</tr>
<tr>
<td>tree</td>
<td>将盘符以树状显示</td>
</tr>
<tr>
<td>dir</td>
<td>显示盘符的所有内容</td>
</tr>
<tr>
<td>winver</td>
<td>查看系统信息</td>
</tr>
<tr>
<td>edit</td>
<td>打开编辑页面</td>
</tr>
<tr>
<td>cd..</td>
<td>后退一步</td>
</tr>
<tr>
<td>md e:\123</td>
<td>新建文件夹</td>
</tr>
<tr>
<td>rd e:\123</td>
<td>删除文件夹</td>
</tr>
<tr>
<td>regedit</td>
<td>打开编辑器</td>
</tr>
<tr>
<td>control</td>
<td>打开控制面板</td>
</tr>
<tr>
<td>systeminfo</td>
<td>查看系统信息</td>
</tr>
<tr>
<td>在开始运行中输入</td>
<td>dxdiag</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS 笔记]]></title>
      <url>http://blog.xheartx.com/2016/03/25/2016-03-25-web-CssNotes/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-03-25-01.png" alt="CSS 笔记"></p>
<blockquote>
<p>自用笔记，不做详解，仅供参考。在此记录学习CSS中整理摘抄的一些笔记。</p>
</blockquote>
<a id="more"></a>
<h2 id="CSS动画"><a href="#CSS动画" class="headerlink" title="CSS动画"></a>CSS动画</h2><h3 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h3><p>Internet Explorer 9 以及更早版本的浏览器不支持 transition 属性</p>
<p>transition 属性是一个简写属性，用于设置四个过渡属性：</p>
<ul>
<li>transition-property    规定设置过渡效果的 CSS 属性的名称。</li>
<li>transition-duration    规定完成过渡效果需要多少秒或毫秒。</li>
<li>transition-timing-function    规定速度效果的速度曲线。</li>
<li>transition-delay    定义过渡效果何时开始。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-webkit-transition-duration: 0.5s;</span><br><span class="line">transition-duration: 0.5s;</span><br><span class="line"></span><br><span class="line">transition: property duration timing-function delay;</span><br><span class="line"></span><br><span class="line">transition:width 2s;</span><br><span class="line">/* Firefox 4 */</span><br><span class="line">-moz-transition:width 2s;</span><br><span class="line">/* Safari and Chrome */</span><br><span class="line">-webkit-transition:width 2s;</span><br><span class="line">/* Opera */</span><br><span class="line">-o-transition:width 2s;</span><br></pre></td></tr></table></figure>
<p>input:focus, select, textarea {<br>  outline: none;<br>}</p>
<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">/*首字母大写*/</span><br><span class="line">text-transform:capitalize;</span><br><span class="line"></span><br><span class="line">/*属性允许您以确切的方式定义适应某个区域的具体内容*/</span><br><span class="line">box-sizing:border-box;</span><br><span class="line">/* Firefox */</span><br><span class="line">-moz-box-sizing:border-box;</span><br><span class="line">/* Safari */</span><br><span class="line">-webkit-box-sizing:border-box;</span><br><span class="line"></span><br><span class="line">/* 清除所有a标签在点击时出现的特效：*/</span><br><span class="line">a&#123;</span><br><span class="line">-webkit-tap-highlight-color:rgba(255,0,0,0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/* 内容将在边界内换行 */</span><br><span class="line">word-wrap: break-word;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iframe无法全屏显示，html，设置高度100%。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CSS a标签，移动端显示方框</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.f-img-light-wrap &#123;</span><br><span class="line">	overflow: hidden;</span><br><span class="line">	position: relative</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.f-img-light-wrap:after &#123;</span><br><span class="line">	content: &apos;&apos;;</span><br><span class="line">	height: 100%;</span><br><span class="line">	width: 100px;</span><br><span class="line">	transform: skewX(-25deg) translate3d(0,0,0);</span><br><span class="line">	background: -moz-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,.3) 50%,rgba(255,255,255,0) 100%);</span><br><span class="line">	background: -webkit-gradient(linear,left top,right top,color-stop(0%,rgba(255,255,255,0)),color-stop(50%,rgba(255,255,255,.3)),color-stop(100%,rgba(255,255,255,0)));</span><br><span class="line">	background: -webkit-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,.3) 50%,rgba(255,255,255,0) 100%);</span><br><span class="line">	background: -o-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,.3)50%,rgba(255,255,255,0) 100%);</span><br><span class="line">	background: linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,.3) 50%,rgba(255,255,255,0) 100%);</span><br><span class="line">	position: absolute;</span><br><span class="line">	left: -160%;</span><br><span class="line">	top: 0;</span><br><span class="line">	z-index: 9</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.f-img-light-wrap:hover:after &#123;</span><br><span class="line">	transition: left 1s ease-in-out;</span><br><span class="line">	left: 160%</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;http://sandbox.runjs.cn/show_square/587&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;&quot;&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line">iframe内联框架</span><br><span class="line">&lt;iframe src=&quot;http://sandbox.runjs.cn/show_square/611&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;&quot;&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line">scrolling</span><br><span class="line">规定是否在 iframe 中显示滚动条。</span><br><span class="line"></span><br><span class="line">name</span><br><span class="line">规定 iframe 的名称。</span><br><span class="line">name=&quot;main&quot;</span><br><span class="line">&lt;a href=&quot;https://www.baidu.com/&quot; target=&quot;main&quot;&gt;评论管理1&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<h3 id="动画transform"><a href="#动画transform" class="headerlink" title="动画transform"></a>动画transform</h3><h4 id="2D"><a href="#2D" class="headerlink" title="2D"></a>2D</h4><p>定位translate</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.div&#123;</span><br><span class="line">	transform:translate(X,Y);</span><br><span class="line"></span><br><span class="line">	设置：XY轴的距离，12px，12%，-12px</span><br><span class="line">	常用浏览器兼容：</span><br><span class="line">	/* Safari 和 Chrome */</span><br><span class="line">	-webkit-transform:translate(X,Y);</span><br><span class="line">	/* Firefox */</span><br><span class="line">	-moz-transform:translate(X,Y);</span><br><span class="line">	/* IE 360 */</span><br><span class="line">	-o-transform:translate(X,Y);</span><br><span class="line">	/* Opera */</span><br><span class="line">	-ms-transform:translate(X,Y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>旋转rotate</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.div&#123;</span><br><span class="line">	transform:rotate(180deg);/* 180度 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>变化scale</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.div&#123;</span><br><span class="line">	transform:scale(1,2);/* 宽度、高度 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>倾斜skew</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.div&#123;</span><br><span class="line">	transform:skew(1,2);/* X轴角度、 Y轴角度*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>矩阵matrix</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.div&#123;</span><br><span class="line">	transform:matrix();/*  */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3D"><a href="#3D" class="headerlink" title="3D"></a>3D</h4><p>旋转rotateX/rotateY</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.div&#123;</span><br><span class="line">	transform:rotateX(100deg);/* 100度 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="动画过渡效果"><a href="#动画过渡效果" class="headerlink" title="动画过渡效果"></a>动画过渡效果</h3><p>transition</p>
<p>Internet Explorer 10、Firefox、Chrome 以及 Opera 支持 transition 属性。<br>Safari 需要前缀 -webkit-。<br>注释：Internet Explorer 9 以及更早的版本，不支持 transition 属性。<br>注释：Chrome 25 以及更早的版本，需要前缀 -webkit-。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.div&#123;</span><br><span class="line">	width: 100px;</span><br><span class="line">	height: 100px;</span><br><span class="line">	background-color: blue;</span><br><span class="line">	transition: width</span><br><span class="line">	transition-delay: 2s;/* 延时执行 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="动画效果animation"><a href="#动画效果animation" class="headerlink" title="动画效果animation"></a>动画效果animation</h3><p>浏览器兼容性：<br>Internet Explorer 10、Firefox 以及 Opera 支持 @keyframes 规则和 animation 属性。<br>Chrome 和 Safari 需要前缀 -webkit-。<br>注释：Internet Explorer 9，以及更早的版本，不支持 @keyframe 规则或 animation 属性。</p>
<p>创建规则动画：<br>规定动画时间、规定动画名称</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.div&#123;</span><br><span class="line">	animation: name 5s infinite alternate;</span><br><span class="line">	/* infinite alternate */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes name&#123;</span><br><span class="line">	0%&#123;</span><br><span class="line">		background-color：#FFF;</span><br><span class="line">	&#125;</span><br><span class="line">	25%&#123;</span><br><span class="line">		background-color：#FFF;</span><br><span class="line">	&#125;</span><br><span class="line">	50%&#123;</span><br><span class="line">		background-color：#FFF;</span><br><span class="line">	&#125;</span><br><span class="line">	100%&#123;</span><br><span class="line">		background-color：#FFF;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes myfirst</span><br><span class="line">&#123;</span><br><span class="line">	from &#123;background:red;&#125;</span><br><span class="line">	to &#123;background:yellow;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">@keyframes	规定动画</span><br><span class="line"></span><br><span class="line">animation</span><br><span class="line">所有动画属性的简写属性，除了 animation-play-state 属性</span><br><span class="line">animation: name duration timing-function delay iteration-count direction;</span><br><span class="line"></span><br><span class="line">animation-name</span><br><span class="line">规定 @keyframes 动画的名称</span><br><span class="line"></span><br><span class="line">animation-duration</span><br><span class="line">规定动画完成一个周期所花费的秒或毫秒。默认是 0</span><br><span class="line"></span><br><span class="line">animation-timing-function</span><br><span class="line">规定动画的速度曲线。默认是 &quot;ease&quot;</span><br><span class="line"></span><br><span class="line">	linear</span><br><span class="line">	动画从头到尾的速度是相同的</span><br><span class="line"></span><br><span class="line">	ease</span><br><span class="line">	默认。动画以低速开始，然后加快，在结束前变慢</span><br><span class="line"></span><br><span class="line">	ease-in</span><br><span class="line">	动画以低速开始</span><br><span class="line"></span><br><span class="line">	ease-out</span><br><span class="line">	动画以低速结束</span><br><span class="line"></span><br><span class="line">	ease-in-out</span><br><span class="line">	动画以低速开始和结束</span><br><span class="line"></span><br><span class="line">	cubic-bezier(n,n,n,n)</span><br><span class="line">	在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。</span><br><span class="line"></span><br><span class="line">steps(n,[ start | end ] ]?)这个阶梯函数，这个函数可以把动画平均划分为基本相等的，</span><br><span class="line">这个n是一个自然数，意思就是把一个动画平均分成n等分，直到平均地走完这个动画，</span><br><span class="line">这个要跟linear区别开来，因为linear是把动画作为一个整体，中间没有断点，而steps是把动画分段平均执行开来。</span><br><span class="line"></span><br><span class="line">step-start等同于steps(1,start)，动画分成1步，动画执行时为开始左侧端点的部分为开始；</span><br><span class="line">step-end等同于steps(1,end)：动画分成一步，动画执行时以结尾端点为开始，默认值为end。</span><br><span class="line"></span><br><span class="line">animation-delay</span><br><span class="line">规定动画何时开始。默认是 0数值</span><br><span class="line"></span><br><span class="line">animation-iteration-count</span><br><span class="line">规定动画被播放的次数。默认是 &quot;1&quot;数值、&quot;infinite&quot;无限次播放</span><br><span class="line"></span><br><span class="line">animation-direction</span><br><span class="line">规定动画是否在下一周期逆向地播放。默认是 &quot;normal&quot;正常播放、&quot;alternate&quot;动画应该轮流反向播放</span><br><span class="line"></span><br><span class="line">animation-play-state</span><br><span class="line">规定动画是否正在运行或暂停。默认是 &quot;running&quot;正在运行的动画、&quot;paused&quot;暂停动画</span><br><span class="line"></span><br><span class="line">animation-fill-mode</span><br><span class="line">规定对象动画时间之外的状态</span><br></pre></td></tr></table></figure>
<h3 id="CSS多列"><a href="#CSS多列" class="headerlink" title="CSS多列"></a>CSS多列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">column-count</span><br><span class="line">多列的个数</span><br><span class="line">column-gap</span><br><span class="line">每一列间隔距离</span><br><span class="line">column-rule</span><br><span class="line">每一列间隔线</span><br></pre></td></tr></table></figure>
<h3 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h3><p>:last-child</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HTML 笔记]]></title>
      <url>http://blog.xheartx.com/2016/03/20/2016-03-20-web-HtmlNotes/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-03-20-03.png" alt="HTML 笔记"></p>
<blockquote>
<p>自用笔记，不做详解，仅供参考。在此记录学习HTML中整理摘抄的一些笔记。</p>
</blockquote>
<a id="more"></a>
<h3 id="版权声明"><a href="#版权声明" class="headerlink" title="版权声明"></a>版权声明</h3><p>DOCTYPE(Document Type)，该声明位于文档中最前面的位置，处于 html 标签之前，此标签告知浏览器文档使用哪种 HTML 或者 XHTML 规范。<br>DTD(Document Type Definition) 声明以 &lt;!DOCTYPE&gt; 开始，不区分大小写，前面没有任何内容，如果有其他内容(空格除外)会使浏览器在 IE 下开启怪异模式(quirks mode)渲染网页。公共 DTD，名称格式为注册//组织//类型 标签//语言,注册指组织是否由国际标准化组织(ISO)注册，+表示是，-表示不是。组织即组织名称，如：W3C。类型一般是 DTD。标签是指定公开文本描述，即对所引用的公开文本的唯一描述性名称，后面可附带版本号。最后语言是 DTD 语言的 ISO 639 语言标识符，如：EN 表示英文，ZH 表示中文。XHTML 1.0 可声明三种 DTD 类型。分别表示严格版本，过渡版本，以及基于框架的 HTML 文档。</p>
<blockquote>
<p>XHTML</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span><br><span class="line">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>HTML</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- HTML 4.01 strict --&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- HTML 4.01 Transitional --&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- HTML 4.01 Frameset --&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>HTML 5</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- HTML 5 --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- HTML 5 --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&apos;en&apos; xmlns=&apos;http://www.w3.org/1999/xhtml&apos;&gt;</span><br></pre></td></tr></table></figure>
<p>HTML5兼容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">引用Google的html5.js文件</span><br><span class="line"></span><br><span class="line">&lt;!--[if IE]&gt;</span><br><span class="line">&lt;script src=&quot;http://html5shiv.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;![endif]--&gt;</span><br><span class="line"></span><br><span class="line">将上代码复制到head部分，记住一定要是head部分（因为IE必须在元素解析前知道这个元素，所以这个js文件不能在其他位置调用，否则失效）</span><br><span class="line"></span><br><span class="line">最后在css里面加上这段：</span><br><span class="line"></span><br><span class="line">/*html5*/</span><br><span class="line">article,aside,dialog,footer,header,section,footer,nav,figure,menu&#123;display:block&#125;</span><br><span class="line"></span><br><span class="line">主要是让这些html5标签成块状，像div那样。</span><br></pre></td></tr></table></figure>
<h3 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 英文 --&gt;</span><br><span class="line">&lt;html lang=&apos;en&apos;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 简体中文 --&gt;</span><br><span class="line">&lt;html lang=&quot;zh-cmn-Hans&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 繁体中文 --&gt;</span><br><span class="line">&lt;html lang=&quot;zh-cmn-Hant&quot;&gt;</span><br></pre></td></tr></table></figure>
<p><a href="http://www.zhihu.com/question/20797118" title="网页头部的声明应该是用 lang=&quot;zh&quot; 还是 lang=&quot;zh-cn&quot;？" target="_blank" rel="external">网页头部语言</a></p>
<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h2 id="HEAD"><a href="#HEAD" class="headerlink" title="HEAD"></a>HEAD</h2><h3 id="标题SEO"><a href="#标题SEO" class="headerlink" title="标题SEO"></a>标题SEO</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 标题 --&gt;</span><br><span class="line">&lt;title&gt;HTML Base&lt;/title&gt;</span><br></pre></td></tr></table></figure>
<h3 id="base默认地址"><a href="#base默认地址" class="headerlink" title="base默认地址"></a>base默认地址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;base&gt; 标签为页面上的所有链接规定默认地址或默认目标。</span><br><span class="line">使用 &lt;base&gt; 标签可以改变这一点。</span><br><span class="line">浏览器随后将不再使用当前文档的 URL，而使用指定的基本 URL 来解析所有的相对 URL。</span><br><span class="line">这其中包括 &lt;a&gt;、&lt;img&gt;、&lt;link&gt;、&lt;form&gt; 标签中的 URL。</span><br><span class="line">在 HTML 中，&lt;base&gt; 标签没有结束标签；在 XHTML 中，&lt;base&gt; 标签必须被正确地关闭。</span><br><span class="line">但是还是建议要闭合标签，这样不同浏览器兼容不容。</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">该标签将会控制所有链接，围棋添加默认的链接。</span><br><span class="line">默认的链接</span><br><span class="line">&lt;base href=&quot;http://www.w3school.com.cn/i/&quot; /&gt;</span><br><span class="line">默认的链接打开方式</span><br><span class="line">&lt;base target=&quot;_blank&quot; /&gt;</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">通常通常情况下，默认链接会自动添加到链接的前面。但是，也有特例：</span><br><span class="line">&lt;base href=&quot;http://www.w3school.com.cn/i/&quot; /&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;css/root.css&quot;/&gt;</span><br><span class="line">http://www.w3school.com.cn/i/css/root.css</span><br><span class="line"></span><br><span class="line">但是，如果添加根目录（绝对路径），链接会自动根据默认链接进行根目录的查询指定。</span><br><span class="line">&lt;base href=&quot;http://www.w3school.com.cn/i/&quot; /&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/root.css&quot;/&gt;</span><br><span class="line">http://www.w3school.com.cn/css/root.css</span><br></pre></td></tr></table></figure>
<h3 id="meta"><a href="#meta" class="headerlink" title="meta"></a>meta</h3><h4 id="编码格式"><a href="#编码格式" class="headerlink" title="编码格式"></a>编码格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 编码格式 --&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h4 id="编码格式-1"><a href="#编码格式-1" class="headerlink" title="编码格式"></a>编码格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=7&quot;&gt;  </span><br><span class="line">&lt;!-- 指定网页的兼容性模式设置 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=8&quot;&gt;  </span><br><span class="line">&lt;!-- 以上代码告诉IE浏览器，无论是否用DTD声明文档标准，IE8/9都会以IE7引擎来渲染页面。   --&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;  </span><br><span class="line">&lt;!-- 以上代码告诉IE浏览器，IE8/9都会以IE8引擎来渲染页面。   --&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=7,IE=9&quot;&gt;  </span><br><span class="line">&lt;!-- 以上代码告诉IE浏览器，IE8/9及以后的版本都会以最高版本IE来渲染页面。   --&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=7,9&quot;&gt;  </span><br><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge,chrome=1&quot;&gt;</span><br><span class="line">&lt;!-- 以上代码IE=edge告诉IE使用最新的引擎渲染网页，chrome=1则可以激活Chrome Frame. --&gt;</span><br></pre></td></tr></table></figure>
<h4 id="渲染页面"><a href="#渲染页面" class="headerlink" title="渲染页面"></a>渲染页面</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;</span><br><span class="line">&lt;!-- 默认webkit内核 --&gt;</span><br><span class="line">&lt;!-- 360 使用Google Chrome Frame --&gt;</span><br><span class="line">&lt;meta name=&quot;renderer&quot; content=&quot;ie-comp&quot;&gt;</span><br><span class="line">&lt;!-- 默认IE兼容模式 --&gt;</span><br><span class="line">&lt;meta name=&quot;renderer&quot; content=&quot;ie-stand&quot;&gt;</span><br><span class="line">&lt;!-- 默认IE标准模式 --&gt;</span><br></pre></td></tr></table></figure>
<h4 id="页面关键词SEO"><a href="#页面关键词SEO" class="headerlink" title="页面关键词SEO"></a>页面关键词SEO</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 关键词 --&gt;</span><br><span class="line">&lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h4 id="页面描述SEO"><a href="#页面描述SEO" class="headerlink" title="页面描述SEO"></a>页面描述SEO</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">每个网页都应有一个不超过 150 个字符且能准确反映网页内容的描述标签。</span><br><span class="line"></span><br><span class="line">&lt;!-- 描述 --&gt;</span><br><span class="line">&lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;author&quot; content=&quot;作者&quot;&gt;</span><br><span class="line">&lt;meta name=&quot;build&quot; content=&quot;日期&quot;&gt;</span><br><span class="line">&lt;meta name=&quot;coprright&quot; content=&quot;版权&quot;&gt;</span><br><span class="line">&lt;meta name=&quot;reply-to&quot; content=&quot;email&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="搜索引擎索引方式"><a href="#搜索引擎索引方式" class="headerlink" title="搜索引擎索引方式"></a>搜索引擎索引方式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Robots用来告诉搜索机器人哪些页面需要索引，哪些页面不需要索引。Content的参数有all、none、index、noindex、follow、nofollow。默认是all。</span><br><span class="line"></span><br><span class="line">&lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">all：文件将被检索，且页面上的链接可以被查询；</span><br><span class="line">none：文件将不被检索，且页面上的链接不可以被查询；</span><br><span class="line">index：文件将被检索；</span><br><span class="line">follow：页面上的链接可以被查询；</span><br><span class="line">noindex：文件将不被检索；</span><br><span class="line">nofollow：页面上的链接不可以被查询。</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure>
<h4 id="页面重定向和刷新"><a href="#页面重定向和刷新" class="headerlink" title="页面重定向和刷新"></a>页面重定向和刷新</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">content内的数字代表时间（秒），既多少时间后刷新。</span><br><span class="line">如果加url,则会重定向到指定网页（搜索引擎能够自动检测，也很容易被引擎视作误导而受到惩罚）。</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;refresh&quot; content=&quot;5;url=http://luuman.github.io/&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h4 id="页面期限"><a href="#页面期限" class="headerlink" title="页面期限"></a>页面期限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新传输，必须使用GMT的时间格式。</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;expires&quot; Content=&quot;Wed, 26 Feb 1997 08:21:57 GMT&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="页面Cookie设定"><a href="#页面Cookie设定" class="headerlink" title="页面Cookie设定"></a>页面Cookie设定</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如果网页过期，那么存盘的cookie将被删除。</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;Set-Cookie&quot; content=&quot;cookievalue=xxx; expires=Friday, 12-Jan-2001 18:18:18 GMT； path=/&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="页面Cache模式"><a href="#页面Cache模式" class="headerlink" title="页面Cache模式"></a>页面Cache模式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">禁止浏览器从本地计算机的缓存中访问页面内容。</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;Pragma&quot; content=&quot;no-cache&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="显示窗口的设定"><a href="#显示窗口的设定" class="headerlink" title="显示窗口的设定"></a>显示窗口的设定</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">强制页面在当前窗口以独立页面显示，用来防止别人在框架里调用自己的页面。</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;Window-target&quot; content=&quot;_top&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="可视区域（移动端）"><a href="#可视区域（移动端）" class="headerlink" title="可视区域（移动端）"></a>可视区域（移动端）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 可视区域 --&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,height=device-height,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot;&gt;</span><br><span class="line"></span><br><span class="line">width - viewport的宽度</span><br><span class="line">height - viewport的高度</span><br><span class="line">initial-scale - 初始的缩放比例</span><br><span class="line">minimum-scale - 允许用户缩放到的最小比例</span><br><span class="line">maximum-scale - 允许用户缩放到的最大比例</span><br><span class="line">user-scalable - 用户是否可以手动缩放</span><br><span class="line"></span><br><span class="line">minimal-ui iOS 7.1 beta 2 中新增属性，可以在页面加载时最小化上下状态栏。这是一个布尔值，可以直接这样写：</span><br><span class="line"></span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, minimal-ui&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="禁止了把数字转化为拨号链接"><a href="#禁止了把数字转化为拨号链接" class="headerlink" title="禁止了把数字转化为拨号链接"></a>禁止了把数字转化为拨号链接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 禁止了把数字转化为拨号链接 --&gt;</span><br><span class="line">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h4 id="忽略识别邮箱"><a href="#忽略识别邮箱" class="headerlink" title="忽略识别邮箱"></a>忽略识别邮箱</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 禁止了识别邮箱 --&gt;</span><br><span class="line">&lt;meta name=&quot;format-detection&quot; content=&quot;email=no&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h4 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 删除默认的苹果工具栏和菜单栏 --&gt;</span><br><span class="line">&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h4 id="关键词-1"><a href="#关键词-1" class="headerlink" title="关键词"></a>关键词</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 控制状态栏显示样式 --&gt;</span><br><span class="line">&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;default&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black-translucent&quot; /&gt;</span><br><span class="line"></span><br><span class="line">默认：default（白色）</span><br><span class="line">black（黑色）</span><br><span class="line">black-translucent（灰色半透明）</span><br></pre></td></tr></table></figure>
<h4 id="Iphone的Safari浏览器"><a href="#Iphone的Safari浏览器" class="headerlink" title="Iphone的Safari浏览器"></a>Iphone的Safari浏览器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- iphone的safari浏览器 --&gt;</span><br><span class="line">&lt;meta name=&quot;apple-itunes-app&quot; content=&quot;app-id=432274380&quot; /&gt;</span><br><span class="line">&lt;!-- &lt;meta name=&quot;znonce&quot; content=&quot;74810a1113ff4cf49d97f2616bdfe158&quot;&gt; --&gt;</span><br></pre></td></tr></table></figure>
<h4 id="添加Meta声明"><a href="#添加Meta声明" class="headerlink" title="添加Meta声明"></a>添加Meta声明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 用于添加Meta声明；无对应关系的PC页面无需添加Meta --&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;mobile-agent&quot; content=&quot;format=[wml|xhtml|html5]; url=url&quot;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;mobile-agent&quot; content=&quot;format=html5;url=http://www.z.com/&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="网站所有者"><a href="#网站所有者" class="headerlink" title="网站所有者"></a>网站所有者</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 验证网站所有者的一种方式 --&gt;</span><br><span class="line">&lt;meta property=&quot;wb:webmaster&quot; content=&quot;8e9c4b702508b902&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;  </span><br><span class="line">&lt;meta name=&quot;HandheldFriendly&quot; content=&quot;true&quot;&gt;  </span><br><span class="line"></span><br><span class="line">&lt;!-- 微软的老式浏览器 --&gt;  </span><br><span class="line">&lt;meta name=&quot;MobileOptimized&quot; content=&quot;320&quot;&gt;  </span><br><span class="line"></span><br><span class="line">&lt;!-- uc强制竖屏 --&gt;  </span><br><span class="line">&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot;&gt;  </span><br><span class="line"></span><br><span class="line">&lt;!-- QQ强制竖屏 --&gt;  </span><br><span class="line">&lt;meta name=&quot;x5-orientation&quot; content=&quot;portrait&quot;&gt;  </span><br><span class="line"></span><br><span class="line">&lt;!-- UC强制全屏 --&gt;  </span><br><span class="line">&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;  </span><br><span class="line"></span><br><span class="line">&lt;!-- QQ强制全屏 --&gt;  </span><br><span class="line">&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;  </span><br><span class="line"></span><br><span class="line">&lt;!-- UC应用模式 --&gt;  </span><br><span class="line">&lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;&gt;  </span><br><span class="line"></span><br><span class="line">&lt;!-- QQ应用模式 --&gt;  </span><br><span class="line">&lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;  </span><br><span class="line"></span><br><span class="line">&lt;!-- windows phone 点击无高光 --&gt;  </span><br><span class="line">&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="社交分享（富媒体对象）"><a href="#社交分享（富媒体对象）" class="headerlink" title="社交分享（富媒体对象）"></a>社交分享（富媒体对象）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">网页内容可以被其他社会化网站引用等，目前这种协议被SNS网站如Fackbook、renren采用。</span><br><span class="line"></span><br><span class="line">&lt;meta property=&quot;og:type&quot; content=&quot;article&quot;&gt;</span><br><span class="line">&lt;meta property=&quot;og:title&quot; content=&quot;HTML结构零散&quot;&gt;</span><br><span class="line">&lt;meta property=&quot;og:url&quot; content=&quot;http://yoursite.com/2016/01/13/HTMLbase/index.html&quot;&gt;</span><br><span class="line">&lt;meta property=&quot;og:site_name&quot; content=&quot;Luuman&apos;s Blog&quot;&gt;</span><br><span class="line">&lt;meta property=&quot;og:description&quot; content=&quot;自用笔记：本文属于自用笔记，不做详解，仅供参考。在此记录自己已理解并开始遵循的前端代码规范。What How Why　　最近，使用Hexo遇到了很多问题，在设立进行整理。&quot;&gt;</span><br><span class="line">&lt;meta property=&quot;og:updated_time&quot; content=&quot;2016-01-20T16:59:08.000Z&quot;&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">-----------Base Element基本类型-----------</span><br><span class="line">1、og:type 网页资源类型标识</span><br><span class="line">content enum:</span><br><span class="line">● video 视频</span><br><span class="line">● audio 音频</span><br><span class="line">● link 链接</span><br><span class="line">● photo 图片</span><br><span class="line">● product 产品</span><br><span class="line">2、og:title 标题描述</span><br><span class="line">3、og:image 缩略图</span><br><span class="line">4、og:url 当前内容链接</span><br><span class="line">5、rr:appid 如果您的网站是CONNECT到renren.com的，请提供该ID</span><br><span class="line">6、rr:appid 如果您的网站是CONNECT到renren.com的，请提供该ID</span><br><span class="line">7、og:width 视频的宽度</span><br><span class="line">8、og:height 视频的高度</span><br><span class="line">-----------Audio Element 音频------------</span><br><span class="line">1、og:audiosrc 音乐资源链接，例如可是播放歌曲的flash地址</span><br><span class="line">2、og:artist 音乐家</span><br><span class="line">-----------Commen Page Element 普通网页------------</span><br><span class="line">1、og:abstract 内容摘要</span><br><span class="line"></span><br><span class="line">2、og:contentid 内容主体的ID，用来标识当前页面主要内容所处的HTML标签的ID</span><br><span class="line">-----------Graphic Element 图片------------</span><br><span class="line"></span><br><span class="line">1、og:photo 图片列表</span><br><span class="line"></span><br><span class="line">2、og:width 图片宽度</span><br><span class="line">3、og:height 图片高度</span><br><span class="line"></span><br><span class="line">-----------Product Element 商品-----------</span><br><span class="line"></span><br><span class="line">1、og:price 产品价格</span><br><span class="line">2、og:description 产品描述</span><br><span class="line">3、og:nick 店铺名</span><br><span class="line"></span><br><span class="line">4、og:postfee 运费</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta property=&quot;fb:admins&quot; content=&quot;100001422224225&quot;&gt;</span><br><span class="line">&lt;meta property=&quot;fb:page_id&quot; content=&quot;241333394220&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="访问时以兼容模式访问"><a href="#访问时以兼容模式访问" class="headerlink" title="访问时以兼容模式访问"></a>访问时以兼容模式访问</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">国内浏览器很多都是双内核（webkit和Trident），webkit内核高速浏览，IE内核兼容网页和旧版网站。而添加meta标签的网站可以控制浏览器选择何种内核渲染。</span><br><span class="line"></span><br><span class="line">&lt;!-- 访问时以兼容模式访问 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 默认webkit内核 --&gt;</span><br><span class="line">&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;</span><br><span class="line">&lt;!-- 默认IE兼容模式 --&gt;</span><br><span class="line">&lt;meta name=&quot;renderer&quot; content=&quot;ie-comp&quot;&gt;</span><br><span class="line">&lt;!-- 默认IE标准模式 --&gt;</span><br><span class="line">&lt;meta name=&quot;renderer&quot; content=&quot;ie-stand&quot;&gt;</span><br><span class="line"></span><br><span class="line">国内双核浏览器默认内核模式如下：</span><br><span class="line"></span><br><span class="line">1. 搜狗高速浏览器、QQ浏览器：IE内核（兼容模式）</span><br><span class="line">2. 360极速浏览器、遨游浏览器：Webkit内核（极速模式）</span><br></pre></td></tr></table></figure>
<h4 id="创建一个推特卡"><a href="#创建一个推特卡" class="headerlink" title="创建一个推特卡"></a>创建一个推特卡</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;twitter:url&quot; content=&quot;http://www.peerflyoffers.com/offer.php?id=7351&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;twitter:title&quot; content=&quot;Tara Astrology - US&quot; /&gt;&lt;br /&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;Payout: $1.30 - CR: 28.91% - EPC: $0.38 - Get your free reading! Target demo is women 25+. Converts on first page.&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;twitter:image&quot; content=&quot;http://s.wordpress.com/mshots/v1/http%3A%2F%2Fpeerfly.com%2Fpreview.php%3Foffer%3D7351?w=400&amp;amp;height=400&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;twitter:site&quot; content=&quot;@peerflyoffers&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;twitter:creator&quot; content=&quot;@LukePeerFly&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h4 id="Windows-8"><a href="#Windows-8" class="headerlink" title="Windows 8"></a>Windows 8</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Windows 8 磁贴颜色 --&gt;</span><br><span class="line">&lt;meta name=&quot;msapplication-TileColor&quot; content=&quot;#000&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Windows 8 磁贴图标 --&gt;</span><br><span class="line">&lt;meta name=&quot;msapplication-TileImage&quot; content=&quot;icon.png&quot;/&gt;</span><br></pre></td></tr></table></figure>
<h4 id="手机页URL"><a href="#手机页URL" class="headerlink" title="手机页URL"></a>手机页URL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;mobile-agent&quot; content=&quot;format=[wml|xhtml|html5]; url=url&quot;&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">[wml|xhtml|html5]根据手机页的协议语言，选择其中一种；url=&quot;url&quot; 后者代表当前PC页所对应的手机页URL，两者必须是一一对应关系。</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure>
<h4 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用百度打开网页可能会对其进行转码（比如贴广告）</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=&quot;Cache-Control&quot; content=&quot;no-siteapp&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h3 id="引入link"><a href="#引入link" class="headerlink" title="引入link"></a>引入link</h3><h4 id="Icon-link"><a href="#Icon-link" class="headerlink" title="Icon link"></a>Icon link</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Icon link --&gt;</span><br><span class="line">&lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 添加到主屏上的图标会使用指定的图片 --&gt;</span><br><span class="line">&lt;link rel=&quot;apple-touch-icon&quot; href=&quot;templets/default/images/ico/apple-touch-icon.png&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- ipad --&gt;</span><br><span class="line">&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;72x72&quot; href=&quot;templets/default/images/ico/apple-touch-icon-72.png&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- iPhone、iTouch --&gt;</span><br><span class="line">&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;114x114&quot; href=&quot;templets/default/images/ico/apple-touch-icon-114.png&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- precomposed --&gt;</span><br><span class="line">&lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;static/img/ios/zhihu(57px).png&quot; /&gt;</span><br><span class="line">&lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;templets/default/images/ico/apple-touch-icon-72.png&quot;&gt;</span><br><span class="line">&lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;templets/default/images/ico/apple-touch-icon-114.png&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="section"><a href="#section" class="headerlink" title="section"></a>section</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 把搜索功能放到浏览器的快捷搜索工具上 --&gt;</span><br><span class="line">&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;static/search.xml&quot; title=&quot;知乎&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h4 id="section-1"><a href="#section-1" class="headerlink" title="section"></a>section</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;.css&quot;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="添加-RSS-订阅"><a href="#添加-RSS-订阅" class="headerlink" title="添加 RSS 订阅"></a>添加 RSS 订阅</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 添加 RSS 订阅 --&gt;</span><br><span class="line">&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;RSS&quot; href=&quot;/rss.xml&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h3 id="引入JavaScript"><a href="#引入JavaScript" class="headerlink" title="引入JavaScript"></a>引入JavaScript</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- JavaScript --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h3 id="引入style"><a href="#引入style" class="headerlink" title="引入style"></a>引入style</h3><h3 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt; &lt;!-- 使用 HTML5 doctype，不区分大小写 --&gt;</span><br><span class="line">&lt;html lang=&quot;zh-cmn-Hans&quot;&gt; &lt;!-- 更加标准的 lang 属性写法 http://zhi.hu/XyIa --&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;!-- 声明文档使用的字符编码 --&gt;</span><br><span class="line">    &lt;meta charset=&apos;utf-8&apos;&gt;</span><br><span class="line">    &lt;!-- 优先使用 IE 最新版本和 Chrome --&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;/&gt;</span><br><span class="line">    &lt;!-- 页面描述 --&gt;</span><br><span class="line">    &lt;meta name=&quot;description&quot; content=&quot;不超过150个字符&quot;/&gt;</span><br><span class="line">    &lt;!-- 页面关键词 --&gt;</span><br><span class="line">    &lt;meta name=&quot;keywords&quot; content=&quot;&quot;/&gt;</span><br><span class="line">    &lt;!-- 网页作者 --&gt;</span><br><span class="line">    &lt;meta name=&quot;author&quot; content=&quot;name, email@gmail.com&quot;/&gt;</span><br><span class="line">    &lt;!-- 搜索引擎抓取 --&gt;</span><br><span class="line">    &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt;</span><br><span class="line">    &lt;!-- 为移动设备添加 viewport --&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no&quot;&gt;</span><br><span class="line">    &lt;!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- iOS 设备 begin --&gt;</span><br><span class="line">    &lt;meta name=&quot;apple-mobile-web-app-title&quot; content=&quot;标题&quot;&gt;</span><br><span class="line">    &lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;</span><br><span class="line">    &lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;/&gt;</span><br><span class="line">    &lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;meta name=&quot;apple-itunes-app&quot; content=&quot;app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL&quot;&gt;</span><br><span class="line">    &lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt;</span><br><span class="line">    &lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot;/&gt;</span><br><span class="line">    &lt;!-- 设置苹果工具栏颜色 --&gt;</span><br><span class="line">    &lt;meta name=&quot;format-detection&quot; content=&quot;telphone=no, email=no&quot;/&gt;</span><br><span class="line">    &lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;</span><br><span class="line">    &lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</span><br><span class="line">    &lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;</span><br><span class="line">    &lt;!-- 避免IE使用兼容模式 --&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span><br><span class="line">    &lt;meta name=&quot;HandheldFriendly&quot; content=&quot;true&quot;&gt;</span><br><span class="line">    &lt;!-- 微软的老式浏览器 --&gt;</span><br><span class="line">    &lt;meta name=&quot;MobileOptimized&quot; content=&quot;320&quot;&gt;</span><br><span class="line">    &lt;!-- uc强制竖屏 --&gt;</span><br><span class="line">    &lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot;&gt;</span><br><span class="line">    &lt;!-- QQ强制竖屏 --&gt;</span><br><span class="line">    &lt;meta name=&quot;x5-orientation&quot; content=&quot;portrait&quot;&gt;</span><br><span class="line">    &lt;!-- UC强制全屏 --&gt;</span><br><span class="line">    &lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</span><br><span class="line">    &lt;!-- QQ强制全屏 --&gt;</span><br><span class="line">    &lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</span><br><span class="line">    &lt;!-- UC应用模式 --&gt;</span><br><span class="line">    &lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;&gt;</span><br><span class="line">    &lt;!-- QQ应用模式 --&gt;</span><br><span class="line">    &lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;</span><br><span class="line">    &lt;!-- windows phone 点击无高光 --&gt;</span><br><span class="line">    &lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;</span><br><span class="line">    &lt;!-- iOS 图标 begin --&gt;</span><br><span class="line">    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;/apple-touch-icon-57x57-precomposed.png&quot;/&gt;</span><br><span class="line">    &lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;</span><br><span class="line">    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;/apple-touch-icon-114x114-precomposed.png&quot;/&gt;</span><br><span class="line">    &lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt;</span><br><span class="line">    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;/apple-touch-icon-144x144-precomposed.png&quot;/&gt;</span><br><span class="line">    &lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt;</span><br><span class="line">    &lt;!-- iOS 图标 end --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- iOS 启动画面 begin --&gt;</span><br><span class="line">    &lt;link rel=&quot;apple-touch-startup-image&quot; sizes=&quot;768x1004&quot; href=&quot;/splash-screen-768x1004.png&quot;/&gt;</span><br><span class="line">    &lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt;</span><br><span class="line">    &lt;link rel=&quot;apple-touch-startup-image&quot; sizes=&quot;1536x2008&quot; href=&quot;/splash-screen-1536x2008.png&quot;/&gt;</span><br><span class="line">    &lt;!-- iPad 竖屏 1536x2008（Retina） --&gt;</span><br><span class="line">    &lt;link rel=&quot;apple-touch-startup-image&quot; sizes=&quot;1024x748&quot; href=&quot;/Default-Portrait-1024x748.png&quot;/&gt;</span><br><span class="line">    &lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;</span><br><span class="line">    &lt;link rel=&quot;apple-touch-startup-image&quot; sizes=&quot;2048x1496&quot; href=&quot;/splash-screen-2048x1496.png&quot;/&gt;</span><br><span class="line">    &lt;!-- iPad 横屏 2048x1496（Retina） --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link rel=&quot;apple-touch-startup-image&quot; href=&quot;/splash-screen-320x480.png&quot;/&gt;</span><br><span class="line">    &lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --&gt;</span><br><span class="line">    &lt;link rel=&quot;apple-touch-startup-image&quot; sizes=&quot;640x960&quot; href=&quot;/splash-screen-640x960.png&quot;/&gt;</span><br><span class="line">    &lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --&gt;</span><br><span class="line">    &lt;link rel=&quot;apple-touch-startup-image&quot; sizes=&quot;640x1136&quot; href=&quot;/splash-screen-640x1136.png&quot;/&gt;</span><br><span class="line">    &lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --&gt;</span><br><span class="line">    &lt;!-- iOS 启动画面 end --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- iOS 设备 end --&gt;</span><br><span class="line">    &lt;meta name=&quot;msapplication-TileColor&quot; content=&quot;#000&quot;/&gt;</span><br><span class="line">    &lt;!-- Windows 8 磁贴颜色 --&gt;</span><br><span class="line">    &lt;meta name=&quot;msapplication-TileImage&quot; content=&quot;icon.png&quot;/&gt;</span><br><span class="line">    &lt;!-- Windows 8 磁贴图标 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;RSS&quot; href=&quot;/rss.xml&quot;/&gt;</span><br><span class="line">    &lt;!-- 添加 RSS 订阅 --&gt;</span><br><span class="line">    &lt;link rel=&quot;shortcut icon&quot; type=&quot;image/ico&quot; href=&quot;/favicon.ico&quot;/&gt;</span><br><span class="line">    &lt;!-- 添加 favicon icon --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;title&gt;标题&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<h3 id="hack-IE"><a href="#hack-IE" class="headerlink" title="hack IE"></a>hack IE</h3><p>用于解决IE兼容性问题的特殊方案，只有满足条件，才会执行代码，否则视为注释。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- hack IE --&gt;</span><br><span class="line">&lt;!--[if lt IE 9]&gt;</span><br><span class="line">&lt;script src=&quot;http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;![endif]--&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure>
<h2 id="Body"><a href="#Body" class="headerlink" title="Body"></a>Body</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>audio声音事件<br><a href="http://e.waimai.meituan.com/#/v2/order/pre" target="_blank" rel="external">美团外卖商家中心</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio id=&quot;main_audio&quot; preload=&quot;auto&quot; volume=&quot;1.0&quot; loop</span><br><span class="line">data-type=&quot;waimai&quot;&gt;</span><br><span class="line">&lt;source src=&quot;meituan://waimai.ogg&quot; type=&quot;audio/ogg&quot;/&gt;</span><br><span class="line">&lt;source src=&quot;static/media/waimai.ogg&quot; type=&quot;audio/ogg&quot;/&gt;</span><br><span class="line">&lt;/audio&gt;</span><br><span class="line">&lt;!-- 加入refundloop的判断 --&gt;</span><br><span class="line">&lt;audio id=&quot;refund-audio&quot; preload=&quot;auto&quot; volume=&quot;1.0&quot;</span><br><span class="line">data-type=&quot;one&quot;&gt;</span><br><span class="line">&lt;source src=&quot;meituan://refund.ogg&quot; type=&quot;audio/ogg&quot;/&gt;</span><br><span class="line">&lt;source src=&quot;static/media/refund.ogg&quot; type=&quot;audio/ogg&quot;/&gt;</span><br><span class="line">&lt;/audio&gt;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2015-2016前端知识体系 【收藏】]]></title>
      <url>http://blog.xheartx.com/2016/03/05/2016-03-05-web-Frontmap/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-03-05-01.jpg" alt="前端知识体系"></p>
<blockquote>
<p>前端知识体系：总结了下前端这两年的主流技术,学习要系统，条理清晰。</p>
</blockquote>
<a id="more"></a>
<h2 id="框架与组件"><a href="#框架与组件" class="headerlink" title="框架与组件"></a>框架与组件</h2><h3 id="bootstrap等UI框架设计与实现"><a href="#bootstrap等UI框架设计与实现" class="headerlink" title="bootstrap等UI框架设计与实现"></a>bootstrap等UI框架设计与实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">伸缩布局：</span><br><span class="line">grid网格布局</span><br><span class="line"></span><br><span class="line">基础UI样式：</span><br><span class="line">元素reset、按钮、图片、菜单、表单</span><br><span class="line"></span><br><span class="line">组件UI样式：</span><br><span class="line">按钮组、字体图标、下拉菜单、输入框组、导航组、面包屑、分页、标签、轮播、弹出框、列表、多媒体、警告</span><br><span class="line"></span><br><span class="line">响应式布局：</span><br><span class="line">布局、结构、样式、媒体、javascript响应式</span><br><span class="line"></span><br><span class="line">第三方插件：</span><br><span class="line">插件管理</span><br></pre></td></tr></table></figure>
<h3 id="jQuery、zepto使用原理以及插件开发"><a href="#jQuery、zepto使用原理以及插件开发" class="headerlink" title="jQuery、zepto使用原理以及插件开发"></a>jQuery、zepto使用原理以及插件开发</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">支持amd、cmd、全局变量的模块化封装</span><br><span class="line">$.fn.method=function()&#123;&#125;</span><br></pre></td></tr></table></figure>
<h3 id="mvc-mvvm框架原理设计，vue-angular-avalon等"><a href="#mvc-mvvm框架原理设计，vue-angular-avalon等" class="headerlink" title="mvc/mvvm框架原理设计，vue/angular/avalon等"></a>mvc/mvvm框架原理设计，vue/angular/avalon等</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">directive设计：</span><br><span class="line">html、text、class、html、attr、repeat、ref，可扩展</span><br><span class="line"></span><br><span class="line">filter设计：</span><br><span class="line">bool、upperCase、lowerCase，可扩展</span><br><span class="line"></span><br><span class="line">表达式设计：</span><br><span class="line">if-else等实现</span><br><span class="line"></span><br><span class="line">viewmodel结构设计：</span><br><span class="line">例如数据，元素，方法的挂载与作用域</span><br><span class="line"></span><br><span class="line">数据更变检测：</span><br><span class="line">函数触发，脏数据检测、对象hijacking</span><br></pre></td></tr></table></figure>
<h3 id="polymer-angular2思想与设计思路"><a href="#polymer-angular2思想与设计思路" class="headerlink" title="polymer/angular2思想与设计思路"></a>polymer/angular2思想与设计思路</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import技术</span><br><span class="line">template和script引入方式</span><br><span class="line">css样式命名空间隔离</span><br><span class="line">简单复用第三方库</span><br></pre></td></tr></table></figure>
<h3 id="reactjs原理与使用"><a href="#reactjs原理与使用" class="headerlink" title="reactjs原理与使用"></a>reactjs原理与使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">virtualdom单向数据绑定</span><br><span class="line">js执行语法方式</span><br><span class="line">UI由状态控制</span><br></pre></td></tr></table></figure>
<h3 id="commonJS-AMD-CMD"><a href="#commonJS-AMD-CMD" class="headerlink" title="commonJS/AMD/CMD"></a>commonJS/AMD/CMD</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">模块引入</span><br><span class="line">模块定义</span><br><span class="line">模块标识</span><br><span class="line">UMD解决不同规范兼容性的问题，例如webpack封装</span><br><span class="line">模块懒执行(CMD)与与预执行(AMD)</span><br></pre></td></tr></table></figure>
<h3 id="loadJs模块化加载原理与实现"><a href="#loadJs模块化加载原理与实现" class="headerlink" title="loadJs模块化加载原理与实现"></a>loadJs模块化加载原理与实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建script标签，需要id映射到资源url</span><br><span class="line">onload加载模块队列判断</span><br><span class="line">全部加载完成后触发</span><br><span class="line">加载失败问题优化</span><br><span class="line">requirejs、modjs、seajs</span><br></pre></td></tr></table></figure>
<h3 id="polyfill、shim原理与实现"><a href="#polyfill、shim原理与实现" class="headerlink" title="polyfill、shim原理与实现"></a>polyfill、shim原理与实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">polyfill提供了开发者们希望浏览器原生提供支持的功能特性</span><br><span class="line">shim将新的API引入到旧的环境中,且仅靠旧环境中已有的手段实现</span><br></pre></td></tr></table></figure>
<h3 id="virtualDom、IncrementalDOM"><a href="#virtualDom、IncrementalDOM" class="headerlink" title="virtualDom、IncrementalDOM"></a>virtualDom、IncrementalDOM</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.用js对象树表示dom树结构，根据该对象树构建dom树</span><br><span class="line">2.状态改变时，重新构建对象，和旧的对象对比，记录两个对象树差异</span><br><span class="line">3.将对象树差异应用到dom中</span><br><span class="line">小结:js对象模拟dom(elem.js)，virtualdomdiff算法(diff.js)、差异渲染dom(patch.js)</span><br><span class="line">incrementaldom在状态改变时扫描旧对象树将差异直接应用到dom中</span><br></pre></td></tr></table></figure>
<h3 id="shadowdom"><a href="#shadowdom" class="headerlink" title="shadowdom"></a>shadowdom</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">隔离外部环境用于封装组件：</span><br><span class="line">结构、样式、行为</span><br><span class="line"></span><br><span class="line">实现形式：</span><br><span class="line">新标签、class类属性+构建编译</span><br></pre></td></tr></table></figure>
<h3 id="webwork与serviceWorker"><a href="#webwork与serviceWorker" class="headerlink" title="webwork与serviceWorker"></a>webwork与serviceWorker</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">webwork与主线程机制，on/post</span><br><span class="line">serviceworker可作为浏览器请求代理</span><br><span class="line">应用场景</span><br></pre></td></tr></table></figure>
<h3 id="ES6转ES5、Babel与ES6开发规范体系"><a href="#ES6转ES5、Babel与ES6开发规范体系" class="headerlink" title="ES6转ES5、Babel与ES6开发规范体系"></a>ES6转ES5、Babel与ES6开发规范体系</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ES6编码规范全</span><br><span class="line">ES6在babel下兼容性</span><br><span class="line">ES6在node下兼容性与性能</span><br><span class="line">ES6新特性：</span><br><span class="line">看编码规范</span><br><span class="line"></span><br><span class="line">aureliaES6前端框架</span><br></pre></td></tr></table></figure>
<h3 id="IsomorphicJavaScript"><a href="#IsomorphicJavaScript" class="headerlink" title="IsomorphicJavaScript"></a>IsomorphicJavaScript</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">同构原理</span><br><span class="line">同构方案Rendr</span><br><span class="line">nodejs:服务器</span><br><span class="line">hapi:应用服务</span><br><span class="line">backbone.js:后台mvc</span><br><span class="line">requirejs:模块加载</span><br><span class="line">jquery:dom处理</span><br><span class="line">reactjs同构:React+Flux+Koa</span><br></pre></td></tr></table></figure>
<h3 id="双向数据绑定"><a href="#双向数据绑定" class="headerlink" title="双向数据绑定"></a>双向数据绑定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">函数触发:vuejs</span><br><span class="line">脏数据检测:angular</span><br><span class="line">对象hijacking:avalon</span><br></pre></td></tr></table></figure>
<h3 id="browserify运行原理"><a href="#browserify运行原理" class="headerlink" title="browserify运行原理"></a>browserify运行原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.从入口模块开始分析require函数调用</span><br><span class="line">2.根据依赖生成AST</span><br><span class="line">3.根据AST找到每个模块的模块名</span><br><span class="line">4.得到每个模块的依赖关系，生成一个依赖字典</span><br><span class="line">5.包装每个模块（传入依赖字典以及export和require函数），生成执行的js</span><br></pre></td></tr></table></figure>
<h3 id="performancetiming"><a href="#performancetiming" class="headerlink" title="performancetiming"></a>performancetiming</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">performancetimingapi</span><br><span class="line">performancetiming过程</span><br><span class="line">performancetiming性能计算</span><br><span class="line">performanceTrace库</span><br></pre></td></tr></table></figure>
<h3 id="组件UI与js组件规范化"><a href="#组件UI与js组件规范化" class="headerlink" title="组件UI与js组件规范化"></a>组件UI与js组件规范化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">组件编码规范</span><br><span class="line">组件目录规范：</span><br><span class="line">组件目录与公用目录</span><br><span class="line"></span><br><span class="line">组件构建规范：</span><br><span class="line">构建环境支持</span><br><span class="line"></span><br><span class="line">组件模块化管理：</span><br><span class="line">spm，bowserify</span><br><span class="line"></span><br><span class="line">组件复用性管理</span><br><span class="line">第三方组件接入成本</span><br></pre></td></tr></table></figure>
<h3 id="immutableJavaScript"><a href="#immutableJavaScript" class="headerlink" title="immutableJavaScript"></a>immutableJavaScript</h3><h3 id="generator与promise原理与使用"><a href="#generator与promise原理与使用" class="headerlink" title="generator与promise原理与使用"></a>generator与promise原理与使用</h3><h2 id="构建生态"><a href="#构建生态" class="headerlink" title="构建生态"></a>构建生态</h2><h3 id="grunt-gulp开发环境任务编写"><a href="#grunt-gulp开发环境任务编写" class="headerlink" title="grunt/gulp开发环境任务编写"></a>grunt/gulp开发环境任务编写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">文件处理插件：</span><br><span class="line">html、scss、js、image、font、其它</span><br><span class="line"></span><br><span class="line">优化插件：</span><br><span class="line">雪碧图、图片压缩、iconfont构建</span><br><span class="line"></span><br><span class="line">发布替换插件</span><br><span class="line">打包、压缩包插件：</span><br><span class="line">组件自动分析</span><br><span class="line"></span><br><span class="line">白名单配置</span><br><span class="line">自定义插件编写</span><br></pre></td></tr></table></figure>
<h3 id="npm、jspm、bower包管理工具"><a href="#npm、jspm、bower包管理工具" class="headerlink" title="npm、jspm、bower包管理工具"></a>npm、jspm、bower包管理工具</h3><h3 id="r-js、browserify、webpack、Rollup打包工具使用"><a href="#r-js、browserify、webpack、Rollup打包工具使用" class="headerlink" title="r.js、browserify、webpack、Rollup打包工具使用"></a>r.js、browserify、webpack、Rollup打包工具使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">原理：</span><br><span class="line">根据依赖配置文件对文件进行依赖打包</span><br><span class="line"></span><br><span class="line">webpack支持更多的规范打包，AMD,Commonjs</span><br><span class="line">webpack+babel/reactjs+reflux</span><br></pre></td></tr></table></figure>
<h3 id="fis3构建与插件开发、构建环境、fis3构建离线包"><a href="#fis3构建与插件开发、构建环境、fis3构建离线包" class="headerlink" title="fis3构建与插件开发、构建环境、fis3构建离线包"></a>fis3构建与插件开发、构建环境、fis3构建离线包</h3><h3 id="webComponent："><a href="#webComponent：" class="headerlink" title="webComponent："></a>webComponent：</h3><p>rosetta-org、x-view、Q、riot、nova</p>
<h3 id="brunch构建工具"><a href="#brunch构建工具" class="headerlink" title="brunch构建工具"></a>brunch构建工具</h3><h2 id="开发技巧与调试"><a href="#开发技巧与调试" class="headerlink" title="开发技巧与调试"></a>开发技巧与调试</h2><h3 id="fiddler加willow基础组合调试"><a href="#fiddler加willow基础组合调试" class="headerlink" title="fiddler加willow基础组合调试"></a>fiddler加willow基础组合调试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">常见配置与分析</span><br><span class="line">结合浏览器调试</span><br></pre></td></tr></table></figure>
<h3 id="werien、vorlonjs远程调试，chromeinspect"><a href="#werien、vorlonjs远程调试，chromeinspect" class="headerlink" title="werien、vorlonjs远程调试，chromeinspect"></a>werien、vorlonjs远程调试，chromeinspect</h3><h3 id="mockjs，F-M-S-FrontMockServer-模拟调试使用与cgi自动调试"><a href="#mockjs，F-M-S-FrontMockServer-模拟调试使用与cgi自动调试" class="headerlink" title="mockjs，F.M.S(FrontMockServer)模拟调试使用与cgi自动调试"></a>mockjs，F.M.S(FrontMockServer)模拟调试使用与cgi自动调试</h3><h3 id="macha-phantomjs-casperjs-karma测试自动化任务使用"><a href="#macha-phantomjs-casperjs-karma测试自动化任务使用" class="headerlink" title="macha/phantomjs/casperjs/karma测试自动化任务使用"></a>macha/phantomjs/casperjs/karma测试自动化任务使用</h3><h3 id="自动化UI测试，海豚"><a href="#自动化UI测试，海豚" class="headerlink" title="自动化UI测试，海豚"></a>自动化UI测试，海豚</h3><h3 id="node-supervior、node-inspector、karma"><a href="#node-supervior、node-inspector、karma" class="headerlink" title="node-supervior、node-inspector、karma"></a>node-supervior、node-inspector、karma</h3><h3 id="开发发布系统流程"><a href="#开发发布系统流程" class="headerlink" title="开发发布系统流程"></a>开发发布系统流程</h3><h3 id="sublime高效插件"><a href="#sublime高效插件" class="headerlink" title="sublime高效插件"></a>sublime高效插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emmet工具使用、sublimelinter、babelsnippets、sublimeLint、SassBeautify、emmet快速编辑、jsxlint、SideBarEnhancements、SnippetsMaker、SublimeCodeIntel、csssnippets、ColorPicker、html/css/jsPretty、SpinnetMacker、DocBlockr、MultiEditUtils、javascript&amp;nodespinnet、JavaScript&amp;NodeJSSnippets、jsLint、cssLint</span><br></pre></td></tr></table></figure>
<h3 id="代码自动化检查fecs"><a href="#代码自动化检查fecs" class="headerlink" title="代码自动化检查fecs"></a>代码自动化检查fecs</h3><h2 id="html、css与重构"><a href="#html、css与重构" class="headerlink" title="html、css与重构"></a>html、css与重构</h2><h3 id="jpeg、webp、apng、bpg图片"><a href="#jpeg、webp、apng、bpg图片" class="headerlink" title="jpeg、webp、apng、bpg图片"></a>jpeg、webp、apng、bpg图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">编码原理</span><br><span class="line">特点与优劣势</span><br><span class="line">适用场景</span><br></pre></td></tr></table></figure>
<h3 id="iconfont使用与实现原理"><a href="#iconfont使用与实现原理" class="headerlink" title="iconfont使用与实现原理"></a>iconfont使用与实现原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">自动打包构建方法</span><br><span class="line">iconfont兼容性写法</span><br><span class="line">fonthello、fontawesome、icomoon.io、iconfont.cn线上工具</span><br></pre></td></tr></table></figure>
<h3 id="页面响应式设计"><a href="#页面响应式设计" class="headerlink" title="页面响应式设计"></a>页面响应式设计</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">layout布局响应式</span><br><span class="line">html结构响应式</span><br><span class="line">css样式响应式</span><br><span class="line">image媒体响应式</span><br><span class="line">javascript响应式</span><br><span class="line">mediaquery与平台判断</span><br></pre></td></tr></table></figure>
<h3 id="css重置"><a href="#css重置" class="headerlink" title="css重置"></a>css重置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reset</span><br><span class="line">nomalize</span><br><span class="line">neat</span><br></pre></td></tr></table></figure>
<h3 id="sass-compass-less-postcss常用语法与使用"><a href="#sass-compass-less-postcss常用语法与使用" class="headerlink" title="sass/compass/less/postcss常用语法与使用"></a>sass/compass/less/postcss常用语法与使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">常用语法功能</span><br><span class="line">组件化UI设计管理</span><br><span class="line">构建工具实现方案</span><br><span class="line">雪碧图自动合成</span><br><span class="line">iconfont自动接入等等</span><br></pre></td></tr></table></figure>
<h3 id="mediaquery与常见页面尺寸了解"><a href="#mediaquery与常见页面尺寸了解" class="headerlink" title="mediaquery与常见页面尺寸了解"></a>mediaquery与常见页面尺寸了解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">媒体类型引入和媒体特性引入</span><br><span class="line">device-width适应</span><br><span class="line">retina屏幕适应</span><br></pre></td></tr></table></figure>
<h3 id="em-rem原理与实现"><a href="#em-rem原理与实现" class="headerlink" title="em,rem原理与实现"></a>em,rem原理与实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rem计算：</span><br><span class="line">width*retina/10，相当于屏幕宽度为10rem</span><br><span class="line"></span><br><span class="line">字体在rem情况下仍然使用px</span><br></pre></td></tr></table></figure>
<h3 id="code4ui、code4app、初页、maka等"><a href="#code4ui、code4app、初页、maka等" class="headerlink" title="code4ui、code4app、初页、maka等"></a>code4ui、code4app、初页、maka等</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">前端dom操作即使刷新前端页面</span><br><span class="line">根据dom操作生成组件config配置保存到db</span><br><span class="line">根据config配置使用r.js或webpack打包</span><br><span class="line">发布打包后输出文件</span><br></pre></td></tr></table></figure>
<h3 id="css3动画"><a href="#css3动画" class="headerlink" title="css3动画"></a>css3动画</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">transform</span><br><span class="line">animation</span><br><span class="line">transiction</span><br><span class="line">3D加速与动画加速</span><br><span class="line">动画库</span><br><span class="line">缓动函数速查表：</span><br><span class="line">http://www.xuanfengge.com/easeing/easeing/</span><br><span class="line"></span><br><span class="line">Ceaser：</span><br><span class="line">http://xuanfengge.com/easeing/ceaser/</span><br><span class="line"></span><br><span class="line">cubic-bezier：</span><br><span class="line">http://cubic-bezier.com/</span><br></pre></td></tr></table></figure>
<h3 id="css网格布局"><a href="#css网格布局" class="headerlink" title="css网格布局"></a>css网格布局</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">susy</span><br><span class="line">ResponsiveGridSystem</span><br><span class="line">Fluid960Grid(adaptjs)</span><br><span class="line">SimpleGrid</span><br></pre></td></tr></table></figure>
<h3 id="搜索引擎与前端SEO"><a href="#搜索引擎与前端SEO" class="headerlink" title="搜索引擎与前端SEO"></a>搜索引擎与前端SEO</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tdk优化</span><br><span class="line">页面内容优化</span><br><span class="line">唯一的H1标题</span><br><span class="line">img设置alt属性</span><br><span class="line">nofollow</span><br><span class="line">url优化</span><br><span class="line">统一链接</span><br><span class="line">301跳转</span><br><span class="line">canonical</span><br><span class="line">robot优化</span><br><span class="line">robots.txt</span><br><span class="line">metarobots</span><br><span class="line">sitemap</span><br><span class="line">SEO工具</span><br><span class="line">各种站长工具等</span><br></pre></td></tr></table></figure>
<h3 id="浏览器缓存种类，resources-webSQL-indexDB-localstorage-cookie-appcache-cachestorage"><a href="#浏览器缓存种类，resources-webSQL-indexDB-localstorage-cookie-appcache-cachestorage" class="headerlink" title="浏览器缓存种类，resources,webSQL,indexDB,localstorage,cookie,appcache,cachestorage"></a>浏览器缓存种类，resources,webSQL,indexDB,localstorage,cookie,appcache,cachestorage</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">store.js、cookie.js</span><br></pre></td></tr></table></figure>
<h3 id="UI框架"><a href="#UI框架" class="headerlink" title="UI框架"></a>UI框架</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bootstrap、jqwidgets、semanticui、amazeui</span><br><span class="line">微信手Qui:frozenui、weui、blendui</span><br><span class="line">extjs、echart图表ui</span><br></pre></td></tr></table></figure>
<h2 id="native-hybrid-桌面开发"><a href="#native-hybrid-桌面开发" class="headerlink" title="native/hybrid/桌面开发"></a>native/hybrid/桌面开发</h2><h3 id="ionic移动开发方案"><a href="#ionic移动开发方案" class="headerlink" title="ionic移动开发方案"></a>ionic移动开发方案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">运行架构</span><br><span class="line">hybrid混合开发</span><br><span class="line">cordova交互</span><br><span class="line">离线包更新</span><br><span class="line">性能瓶颈</span><br></pre></td></tr></table></figure>
<h3 id="nativescript移动开发方案"><a href="#nativescript移动开发方案" class="headerlink" title="nativescript移动开发方案"></a>nativescript移动开发方案</h3><h3 id="reactNative移动开发方案"><a href="#reactNative移动开发方案" class="headerlink" title="reactNative移动开发方案"></a>reactNative移动开发方案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">运行架构：</span><br><span class="line">js引擎</span><br><span class="line"></span><br><span class="line">性能缺陷与内存泄露</span><br><span class="line">更新机制</span><br><span class="line">使用场景</span><br></pre></td></tr></table></figure>
<h3 id="android-ios原生开发与框架"><a href="#android-ios原生开发与框架" class="headerlink" title="android/ios原生开发与框架"></a>android/ios原生开发与框架</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">java</span><br><span class="line">oc、swift</span><br><span class="line">web与native交互</span><br><span class="line">屏幕旋转</span><br><span class="line">摇一摇</span><br><span class="line">录像，拍照，选取本地图片</span><br><span class="line">打电话，发短信</span><br><span class="line">电池电量</span><br><span class="line">地理位置</span><br><span class="line">日期选择</span><br><span class="line">开启硬件加速</span><br></pre></td></tr></table></figure>
<h3 id="桌面应用开发"><a href="#桌面应用开发" class="headerlink" title="桌面应用开发"></a>桌面应用开发</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nodewebkit</span><br><span class="line">atom-shell(后改名为electron)</span><br><span class="line">网易Hex</span><br><span class="line">pomelo(游戏服务器框架)</span><br><span class="line">reactdesktop</span><br><span class="line">appjs:appjs.com</span><br></pre></td></tr></table></figure>
<h2 id="前端-H5优化-另一个图已给出"><a href="#前端-H5优化-另一个图已给出" class="headerlink" title="前端/H5优化(另一个图已给出)"></a>前端/H5优化(另一个图已给出)</h2><h3 id="yslow、pagespeed"><a href="#yslow、pagespeed" class="headerlink" title="yslow、pagespeed"></a>yslow、pagespeed</h3><h3 id="移动web性能优化"><a href="#移动web性能优化" class="headerlink" title="移动web性能优化"></a>移动web性能优化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">手机浏览器&quot;省流量&quot;原理</span><br><span class="line">增量更新原理及注意事项</span><br><span class="line">本地存储的应用</span><br><span class="line">加载优化</span><br><span class="line">图片优化</span><br><span class="line">单页面及路由实现</span><br><span class="line">业内著名站点案例分析</span><br></pre></td></tr></table></figure>
<h2 id="全栈-全端开发"><a href="#全栈-全端开发" class="headerlink" title="全栈/全端开发"></a>全栈/全端开发</h2><h3 id="express-nodeclub-mongodb、thinkjs等框架"><a href="#express-nodeclub-mongodb、thinkjs等框架" class="headerlink" title="express/nodeclub+mongodb、thinkjs等框架"></a>express/nodeclub+mongodb、thinkjs等框架</h3><h3 id="node-js直出"><a href="#node-js直出" class="headerlink" title="node.js直出"></a>node.js直出</h3><h3 id="实时web开发，meteor-express-io"><a href="#实时web开发，meteor-express-io" class="headerlink" title="实时web开发，meteor/express.io"></a>实时web开发，meteor/express.io</h3><h3 id="MEAN-mongodb-express-angular-nodejs"><a href="#MEAN-mongodb-express-angular-nodejs" class="headerlink" title="MEAN(mongodb/express/angular/nodejs)"></a>MEAN(mongodb/express/angular/nodejs)</h3><h3 id="http与http2协议、bigpipe、pipeline"><a href="#http与http2协议、bigpipe、pipeline" class="headerlink" title="http与http2协议、bigpipe、pipeline"></a>http与http2协议、bigpipe、pipeline</h3><h3 id="离线缓存，cookie、localstorage、indexdb"><a href="#离线缓存，cookie、localstorage、indexdb" class="headerlink" title="离线缓存，cookie、localstorage、indexdb"></a>离线缓存，cookie、localstorage、indexdb</h3><h3 id="cdn与dns"><a href="#cdn与dns" class="headerlink" title="cdn与dns"></a>cdn与dns</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">动态域名加速</span><br><span class="line">cdn原理与cdncombo</span><br></pre></td></tr></table></figure>
<h2 id="研究实验"><a href="#研究实验" class="headerlink" title="研究实验"></a>研究实验</h2><h3 id="WebAssembly、webTRC、typescript"><a href="#WebAssembly、webTRC、typescript" class="headerlink" title="WebAssembly、webTRC、typescript"></a>WebAssembly、webTRC、typescript</h3><h3 id="Materialdesign规范的前端框架"><a href="#Materialdesign规范的前端框架" class="headerlink" title="Materialdesign规范的前端框架"></a>Materialdesign规范的前端框架</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">交互动效库</span><br></pre></td></tr></table></figure>
<h3 id="AMP-HTML规范"><a href="#AMP-HTML规范" class="headerlink" title="AMP-HTML规范"></a>AMP-HTML规范</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用受限HTML以及缓存技术来提高移动网络中静态内容的性能</span><br><span class="line">添加自定义的元素代替禁用掉的元素：</span><br><span class="line">amp-audio,amp-img、amp-video等</span><br></pre></td></tr></table></figure>
<h2 id="数据分析与监控"><a href="#数据分析与监控" class="headerlink" title="数据分析与监控"></a>数据分析与监控</h2><h3 id="badjs数据上报"><a href="#badjs数据上报" class="headerlink" title="badjs数据上报"></a>badjs数据上报</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">捕获错误两种方法：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">onerror、try-catch。抽样上报，先onerror统计语法错误，如果是scripterror，再使用tryjs。</span><br><span class="line"></span><br><span class="line">后台统计方法、不同业务接入体系、抽样统计</span><br><span class="line"></span><br><span class="line">onerror:</span><br><span class="line">可以捕捉语法错误和运行时错误；可以拿到出错的信息，堆栈，出错文件、行号、列号；</span><br><span class="line">当前页面执行的js脚本出错都会捕捉到；跨域的资源需要特殊头部支持。</span><br><span class="line"></span><br><span class="line">try-catch:</span><br><span class="line">无法捕捉语法错误，只能捕捉运行时错误；可以拿到出错的信息，堆栈，出错文件、行号、列号；</span><br><span class="line">需要借助工具把function块以及文件块加入try,catch，可以在这个阶段打入更多的静态信息。</span><br></pre></td></tr></table></figure>
<h3 id="点击热力图clickHeat、heatMap"><a href="#点击热力图clickHeat、heatMap" class="headerlink" title="点击热力图clickHeat、heatMap"></a>点击热力图clickHeat、heatMap</h3><h3 id="js加载失败优化方案"><a href="#js加载失败优化方案" class="headerlink" title="js加载失败优化方案"></a>js加载失败优化方案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">失败重发机制</span><br><span class="line">加载源域名服务器文件</span><br><span class="line">https反劫持</span><br></pre></td></tr></table></figure>
<h3 id="百度alog数据上报"><a href="#百度alog数据上报" class="headerlink" title="百度alog数据上报"></a>百度alog数据上报</h3><h2 id="其它软技能"><a href="#其它软技能" class="headerlink" title="其它软技能"></a>其它软技能</h2><h3 id="axure原型图设计"><a href="#axure原型图设计" class="headerlink" title="axure原型图设计"></a>axure原型图设计</h3><h3 id="xmind脑图管理"><a href="#xmind脑图管理" class="headerlink" title="xmind脑图管理"></a>xmind脑图管理</h3><h3 id="效率管理"><a href="#效率管理" class="headerlink" title="效率管理"></a>效率管理</h3><h3 id="caniuse、github"><a href="#caniuse、github" class="headerlink" title="caniuse、github"></a>caniuse、github</h3><h3 id="知识管理-总结分享"><a href="#知识管理-总结分享" class="headerlink" title="知识管理/总结分享"></a>知识管理/总结分享</h3><h3 id="产品思维与技能"><a href="#产品思维与技能" class="headerlink" title="产品思维与技能"></a>产品思维与技能</h3><h2 id="前端技术网站"><a href="#前端技术网站" class="headerlink" title="前端技术网站"></a>前端技术网站</h2><h3 id="技术社区"><a href="#技术社区" class="headerlink" title="技术社区"></a>技术社区</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">w3ctech、w3cplus、w3help</span><br><span class="line">div.io、nodeParty</span><br><span class="line">稀土掘金、前端早读课</span><br><span class="line">alloyteam、html5基地</span><br><span class="line">W3help</span><br></pre></td></tr></table></figure>
<h3 id="行业会议"><a href="#行业会议" class="headerlink" title="行业会议"></a>行业会议</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">segmentfault会议</span><br><span class="line">深js、杭js</span><br><span class="line">GMIC(全球移动互联网大会)</span><br><span class="line">D2、webrebuild</span><br><span class="line">infoQ内容、Qcon、velocity</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Sublime Text 3 使用总结]]></title>
      <url>http://blog.xheartx.com/2016/02/02/2016-02-02-sublime-config/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-02-02-03.jpg" alt="Sublime Text 3"></p>
<blockquote>
<p>记录安装配置 Sublime 的过程，并列出所用到的插件，方便在新电脑上快速用上熟悉的 Sublime。</p>
</blockquote>
<a id="more"></a>
<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h3><ul>
<li>一直使用的是 Sublime 3，直接转到 3 的 <a href="http://www.sublimetext.com/3" target="_blank" rel="external">下载页面</a> 好了。</li>
</ul>
<h3 id="用户设置"><a href="#用户设置" class="headerlink" title="用户设置"></a>用户设置</h3><ul>
<li><code>Preferences/Settings - User</code>，设置字体为 <a href="http://pan.baidu.com/s/1mglgkSK" target="_blank" rel="external">Consolas 雅黑混合体</a> yx5g，字号11，tab 转空格，显示空格和制表符。</li>
</ul>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"font_face"</span>: <span class="string">"Yahei Consolas Hybrid"</span>,</span><br><span class="line"><span class="string">"font_size"</span>: <span class="number">11</span>,</span><br><span class="line"><span class="string">"translate_tabs_to_spaces"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"draw_white_space"</span>: <span class="string">"all"</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">/*统一使用 UTF-8 编码和 UNIX 风格的换行符(LF, 0x0A)*/</span></span><br><span class="line"><span class="string">"default_line_ending"</span>: <span class="string">"unix"</span>,</span><br><span class="line"><span class="string">"default_encoding"</span>: <span class="string">"UTF-8"</span>,</span><br></pre></td></tr></table></figure>
<blockquote>
<p>其他设置参考 <code>Preferences/Settings - Default</code>。</p>
</blockquote>
<h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><blockquote>
<p>1、概况：</p>
<ol>
<li>从上到下：标题栏Title、菜单栏Menu、标签栏Tab、编辑区Editing Area、控制台Console、状态栏Status Bar。</li>
<li><p>从做到右：侧边栏（可关闭、文件、文件夹视图）、编辑区（代码编辑）、MiniMap（缩略图）。</p>
</li>
<li><p>菜单栏：<br>各种命令，各种设置。文件File：编辑Edit：选择Selection：查找Find：视图View：转到Goto：工具Tools：项目Project：首选项Preferences：个性化定制。帮助Help：</p>
</li>
<li><p>标签栏：<br>文件名的缩略图，文件编辑未保存，右上角有个小圆点，提示保存。如果未保存关了也不用害怕，自动保存。</p>
</li>
<li><p>状态栏：<br>ASCII编码、Line 6-Column 53（当前行列号）、Tab Size：4（Tab格式等信息）、HTML（当前语言）。</p>
</li>
<li><p>控制台：<br>使用Ctrl+`调出，它既是一个标准的Python REPL，也可以直接对Sublime Text进行配置。</p>
</li>
<li><p>编辑区：<br>这是我们主要的工作区域，ST2支持代码自动缩进，代码折叠功能。</p>
</li>
</ol>
<p>2、常见的功能：</p>
<ol>
<li>自动完成：<br>自动完成的快捷键是Tab，如果在html文件中，输入cl按下tab，即可自动补全为class=””；加上zencoding后，更是如虎添翼，后面再讲到</li>
<li>多列编辑：<br>按住ctrl点击鼠标，会出现多个闪烁的光标，这时可同时修改多处，或者按住鼠标中键拖拽，</li>
<li>代码注释功能：ctrl+/、ctrl+shift+/分别未行注释和块注释，再按一下就能去掉注释，ST2能够自动识别是html、css还是js文件，给出不同类型的注释。</li>
<li>行操作：<br>ctrl+alt+↑、ctrl+alt+↓向上或者向下交换两行，ctrl+enter，光标后插入空行，ctrl+d选择相似，可以参考后面的快捷键列表。</li>
<li>右键功能：<br>前3个，大家都知道，第4个，show unsaved changes，显示未保存的修改，红色减号表示删去的内容，绿色加号表示新增的内容<br>Open Containing Folder…，打开包含此文件的文件夹，这个很方便找到相关的文件<br>Copy File Path，复制文件路径，方便我们复制路径到浏览器中查看<br>Auto-Format Tags on Selection 格式化选中的文档，方便我们更清晰的查看代码结构，虽然ST2有自动缩进功能，但是当我们粘贴进一段没有格式化过的代码，就需要这个能了，这个功能要安装了Tag这个插件才会出现。</li>
<li>人性化设计：<br>ST2虽然还是beta版中，但是有很多设计细节还是值得称赞的，比如点击一个标签或者括弧，会在起始处显示下划点线，方便看清代码结果，每一层嵌套代码间都有竖线，起到视觉辅助的作用。</li>
</ol>
</blockquote>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>自定制，数据被保存在Preferences.sublime-settings，Default或User，user可以覆盖default。在配置文件，直接设置<br>配置文件在：preferences－setting user。<br>下面是一些可能有用但我很少用到的功能：</p>
<blockquote>
<p>宏（Macro）：Sublime Text支持录制宏，但我在实际工作中并未发现宏有多大用处。</p>
<p>其它平台（Other Platforms）：本文只介绍了Windows平台上Sublime Text的使用，不过Linux和OS X上Sublime Text的使用方式和Windows差别不大，只是在快捷键上有所差异，请参考Windows/Linux快捷键和OS X快捷键。</p>
<p>项目（Projects）：Sublime Text支持简单的项目管理，但我一般只用到文件夹。</p>
<p>Vim模式（Vintage）：Sublime Text自带Vim模式。</p>
<p>构建（Build）：通过配置，Sublime Text可以进行源码构建。</p>
<p>调试（Debug）：通过安装插件，Sublime Text可以对代码进行调试。</p>
</blockquote>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>若稍有英文基础，则更建议打开Preferences-&gt;KeyBindings–Default，这里面是详细的快捷键配置。<br>快捷键设置，ST2的快捷键很多，改的时候注意不要覆盖了。<br>因为快捷键众多，所以有下面这种组合快捷键，先按下ctrl+k，松开k，再按下j就可以展开全部代码了。</p>
<p>快捷键列表（Shortcuts Cheatsheet）<br>我把本文出现的Sublime Text按其类型整理在这里，以便查阅。</p>
<h3 id="通用（General）"><a href="#通用（General）" class="headerlink" title="通用（General）"></a>通用（General）</h3><pre><code>↑↓←→：上下左右移动光标，注意不是不是KJHL！
Alt：调出菜单
</code></pre><h3 id="整理（clear）"><a href="#整理（clear）" class="headerlink" title="整理（clear）"></a>整理（clear）</h3><pre><code>Tab：缩进：自动完成
Shift+Tab：去除缩进
Ctrl+KT：折叠属性
Ctrl+K0：展开所有
</code></pre><h3 id="窗口（Window）"><a href="#窗口（Window）" class="headerlink" title="窗口（Window）"></a>窗口（Window）</h3><h3 id="移动（Move）"><a href="#移动（Move）" class="headerlink" title="移动（Move）"></a>移动（Move）</h3><pre><code>Ctrl+←/→：进行逐词移动
Ctrl+Shift+←/→进行逐词选择
Ctrl+↑/↓移动当前显示区域
Ctrl+Shift+↑/↓移动当前行
Ctrl+D：选择当前光标所在的词并高亮该词所有出现的位置，再次Ctrl+D选择该词出现的下一个位置，在多重选词的过程中，使用Ctrl+K进行跳过，使用Ctrl+U进行回退，使用Esc退出多重
</code></pre><h3 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h3><pre><code>Ctrl+Shift+L：将当前选中区域打散
</code></pre><h3 id="文件（File）"><a href="#文件（File）" class="headerlink" title="文件（File）"></a>文件（File）</h3><pre><code>Ctrl+N：在当前窗口创建一个新标签
Ctrl+O：打开文件
Ctrl+Shift+T：打开最近关闭的文件
Ctrl+S：保存
Ctrl+Shift+S：另存为
Ctrl+Shift+N：创建新窗口
Ctrl+Shift+W：关闭窗口
Ctrl+W：关闭当前标签，当窗口内没有标签时会关闭该窗口
</code></pre><h3 id="编辑（Edit）"><a href="#编辑（Edit）" class="headerlink" title="编辑（Edit）"></a>编辑（Edit）</h3><pre><code>Ctrl+Z：撤销
Ctrl+Y：恢复
</code></pre><h3 id="取消选择（Undo-Selection）"><a href="#取消选择（Undo-Selection）" class="headerlink" title="取消选择（Undo Selection）"></a>取消选择（Undo Selection）</h3><pre><code>Ctrl+U：智能撤销
Ctrl+ Shift+U：智能重做
Ctrl+ Shift+V：粘贴并缩进
Ctrl+K，Ctrl+V：
</code></pre><h3 id="行（Line）"><a href="#行（Line）" class="headerlink" title="行（Line）"></a>行（Line）</h3><pre><code>Ctrl +]：缩进
Ctrl +[：反缩进
Ctrl + Shift + Up：上移一行
Ctrl + Shift + Down：下移一行
Ctrl + Shift + D：复制行(加倍)
Ctrl + Shift + K：删除行
Ctrl + J：连接行
</code></pre><h3 id="文本（Text）"><a href="#文本（Text）" class="headerlink" title="文本（Text）"></a>文本（Text）</h3><pre><code>Ctrl+Shift+Enter：在当前行上面增加一行并跳至该行
Ctrl+Alt+Enter：替换所有关键字匹配
Ctrl+Enter：在当前行下面新增一行然后跳至该行
Ctrl+Delete：删除单词前部
Ctrl+Backspace：删除单词后部
Ctrl+K，Ctrl+K：从光标处删除至行尾
Ctrl+K+Backspace：从光标处删除至行首
Ctrl+T：前后调转
</code></pre><h3 id="注释（Comment）"><a href="#注释（Comment）" class="headerlink" title="注释（Comment）"></a>注释（Comment）</h3><pre><code>Ctrl+/：注释（如已选择内容，同“Ctrl+Shift+/”效果）
Ctrl+Shift：/：块注释(注释已选择内容)
Ctrl+Alt+/：块注释，并Focus到首行，写注释说明用的
</code></pre><h3 id="标签（Tag）"><a href="#标签（Tag）" class="headerlink" title="标签（Tag）"></a>标签（Tag）</h3><pre><code>Alt+.：闭合当前标签
Ctrl+Shift+A：选择标签(可重复)
Ctrl+Shift+W：选择区域被标签包含
</code></pre><h3 id="（Mark）"><a href="#（Mark）" class="headerlink" title="（Mark）"></a>（Mark）</h3><pre><code>Ctrl+K， Alt+Space：设置记号
Ctrl+K，Alt+A：选择到记号
Ctrl+K，Alt+W：删除到记号
Ctrl+K，Alt+S：交换(移动)记号
Ctrl+K，Alt+G：移除记号
Ctrl+K，Alt+Y：Yank
Ctrl+K，Alt+J：取消所有折叠
</code></pre><h3 id="代码折叠（Code-Folding）"><a href="#代码折叠（Code-Folding）" class="headerlink" title="代码折叠（Code Folding）"></a>代码折叠（Code Folding）</h3><pre><code>Ctrl+Shift+[：折叠代码
Ctrl+Shift+]：展开代码
（Convert Case）
Ctrl+K，Ctrl+U：改为大写
Ctrl+K，Ctrl+L：改为小写
</code></pre><h3 id="（Wrap）"><a href="#（Wrap）" class="headerlink" title="（Wrap）"></a>（Wrap）</h3><pre><code>Alt+Q：
Ctrl+Space：显示提示
F9：按行排序
Ctrl+F9：按行排序(区分大小写)
</code></pre><h3 id="选择（Selection）"><a href="#选择（Selection）" class="headerlink" title="选择（Selection）"></a>选择（Selection）</h3><pre><code>Ctrl+ Shift+L：分割为多光标(选择多行时)
Ctrl+ Alt +Up：向上一行添加光标
Ctrl+ Alt +Down：向下一行添加光标
Escape单光标
</code></pre><h3 id="扩展（Expand）"><a href="#扩展（Expand）" class="headerlink" title="扩展（Expand）"></a>扩展（Expand）</h3><pre><code>Ctrl+A：全选
Ctrl+L：选择整行（按住-继续选择下行）
Ctrl+D：选词：（按住-继续选择下个相同的字符串）
Ctrl+Shift+Space：快速选择当前作用域（Scope）的内容
Ctrl+Shift+M：快速选择括号间的内容{}
Ctrl+Shift+J：快速选择同缩进的内容
Ctrl+Shift+A：选择光标位置父标签对儿
</code></pre><h3 id="查找（Find）"><a href="#查找（Find）" class="headerlink" title="查找（Find）"></a>查找（Find）</h3><pre><code>Ctrl+F：进行标准查找
F3：跳至当前关键字下一个位置
Shift+F3：跳到当前关键字上一个位置
Ctrl +I：
Ctrl +H：进行标准替换
Ctrl+Shift+H：替换当前关键字
Ctrl +F3：快速查询
Alt +F3：选中当前关键字出现的所有位置
Ctrl+D：快速查询下一个(多光标)
Ctrl+K，Ctrl+D：快速查询跳过下一个(多光标)
Ctrl+E：字
Ctrl+Shift+E：字
Ctrl+Shift+F：多文件搜索&amp;替换
</code></pre><h3 id="视图（View）"><a href="#视图（View）" class="headerlink" title="视图（View）"></a>视图（View）</h3><pre><code>Ctrl+K，Ctrl+B：侧边栏开关Side Bar
Ctrl+\`：调出控制台
F11：切换普通全屏
Shift+F11：切换无干扰全屏
Alt+Shift+2：进行左右分屏
Alt+Shift+5：进行上下左右分屏
Alt+Shift+8：进行上下分屏。
分屏，使用Ctrl+数字键跳转到指定屏，使用Ctrl+Shift+数字键将当前屏移动到指定屏
</code></pre><h3 id="组（Group）："><a href="#组（Group）：" class="headerlink" title="组（Group）："></a>组（Group）：</h3><pre><code>Ctrl+K，Ctrl+Up：
Ctrl+K，Ctrl+ Shift+ Up：
Ctrl+K，Ctrl+Down：
</code></pre><h3 id="焦点小组（Focus-Group）："><a href="#焦点小组（Focus-Group）：" class="headerlink" title="焦点小组（Focus Group）："></a>焦点小组（Focus Group）：</h3><pre><code>Ctrl+K，Ctrl+Right：
Ctrl+K，Ctrl+ Left：
Ctrl+1：组间切换焦点
Ctrl+ Shift +1：移动文件到组
Syntax语法和文件类型、indentation缩排、Line Endings行尾结束符号
F6：拼写检查
Ctrl + F6：下一个错误
Ctrl+Shift+ F6：上一个错误
</code></pre><h3 id="跳转（Goto）"><a href="#跳转（Goto）" class="headerlink" title="跳转（Goto）"></a>跳转（Goto）</h3><pre><code>Ctrl+P：跳转到指定文件
Ctrl+R：跳转到指定符号
Ctrl+Shift+R：
F12：
Ctrl+G：跳转到指定行号
Alt+-：跳转到底部
Alt+Shift +-：
</code></pre><h3 id="文件开关（Switch-File）"><a href="#文件开关（Switch-File）" class="headerlink" title="文件开关（Switch File）"></a>文件开关（Switch File）</h3><pre><code>Ctrl+Pagedown：下一个文件
Ctrl+Pageup：上一个文件
Ctrl+Tab：下一个文件(stack)
Ctrl+Shift + Tab：上一个文件(stack)
Alt+O：
Alt+1：最近打开文件
</code></pre><h3 id="滚动（Scroll）"><a href="#滚动（Scroll）" class="headerlink" title="滚动（Scroll）"></a>滚动（Scroll）</h3><pre><code>Ctrl+K，Ctrl+C：滚动到光标处
Ctrl+Up：向上滚动一行(定光标)
Ctrl+Down：向下滚动一行(定光标)
</code></pre><h3 id="书签（Boolmarks）"><a href="#书签（Boolmarks）" class="headerlink" title="书签（Boolmarks）"></a>书签（Boolmarks）</h3><pre><code>Ctrl+F2：设置书签
F2：下一个书签
Shift+F2：上一个书签
Ctrl+Shift+F2：清除书签
Alt+F2：全选书签
Ctrl+M：在起始括号和结尾括号间切换
</code></pre><h3 id="工具（Tools）"><a href="#工具（Tools）" class="headerlink" title="工具（Tools）"></a>工具（Tools）</h3><pre><code>Ctrl+Shift+P：调出命令板（Command Palette）
Ctrl +B：
Ctrl+Shift+B：
Ctrl +Break：
F4：
Shift+ F4：
Ctrl +Q：
Ctrl+Shift+Q：
</code></pre><h3 id="项目（Project）"><a href="#项目（Project）" class="headerlink" title="项目（Project）"></a>项目（Project）</h3><pre><code>Ctrl+Alt+P：切换项目
#### 首选项（Preferences）
Ctrl+ Keypad Plus：
Ctrl+Shift+Keypad Plus：
Help（帮助）
</code></pre><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><h3 id="多行游标："><a href="#多行游标：" class="headerlink" title="多行游标："></a>多行游标：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">方法一：利用查找替换功能：Ctrl + H</span><br><span class="line">方法二（推荐）：Ctrl+D选中另一个，如果有某些不想添加新行的模式则按ctrl+K，ctrl+D跳过这个进入下一个符合条件的模式行。</span><br><span class="line">按Alt + F3快捷键，全选所有符合条件的单词。</span><br><span class="line">如果要在每行都加入光标，可以先ctrl+A然后ctrl+shift+L即可。</span><br><span class="line">如果在某个字符的多行后面加上光标，可以将光标放在这个字符后面，按住shift键，然后右键可以向下拖动产生多个光标。</span><br></pre></td></tr></table></figure>
<h3 id="Goto-anything：（模糊匹配）"><a href="#Goto-anything：（模糊匹配）" class="headerlink" title="Goto anything：（模糊匹配）"></a>Goto anything：（模糊匹配）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+P：跳转到指定文件，输入文件名后可以：</span><br><span class="line">@ 符号跳转：输入@symbol跳转到symbol符号所在的位置</span><br><span class="line"># 关键字跳转：输入#keyword跳转到keyword所在的位置</span><br><span class="line">: 行号跳转：输入:12跳转到文件的第12行。</span><br></pre></td></tr></table></figure>
<p>命令快捷执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Shift+P：输入set syntax JavaScript进行文件类型更改。</span><br><span class="line">输入Minimap进行迷你地图切换。</span><br></pre></td></tr></table></figure></p>
<p>快速添加新行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Enter可以在当前行下新建一行。</span><br><span class="line">Ctrl + Shift + Enter可以在当前行上面添加一行。</span><br></pre></td></tr></table></figure></p>
<h2 id="最后购买："><a href="#最后购买：" class="headerlink" title="最后购买："></a>最后购买：</h2><p>Sublime Text2或者3都没关系，3也只是作为2的beta版本，所以还是推荐3吧，支持新版嘛。2和3在使用方法功能上也有差异~<br>你可以去官网下载对应版本，但可能需要输入序列号什么的。访问<a href="http://www.sublimetext.com/2" target="_blank" rel="external">下载 2.x 版本</a>。或从<a href="http://www.sublimetext.com/3" target="_blank" rel="external">下载 3.x 版本</a>。</p>
<p>注册码（仅供个人非商业应用）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">----- BEGIN LICENSE ------</span><br><span class="line">Alexander</span><br><span class="line">Single User License</span><br><span class="line">EA7E-814345</span><br><span class="line">51F47F09 4EAB1285 7827EFF0 8B1207DC</span><br><span class="line">A76A6EA3 E1A1CA7A DC1F2703 14,897,784</span><br><span class="line">8EDC1C82 3F2A58B9 1C0C8B24 67686432</span><br><span class="line">281245B3 6233DE5C ADC5C2F9 61FB8A04</span><br><span class="line">171B63EF 86BA423F 6AC884FD 3273A7AA</span><br><span class="line">5F50A6DB CE7859AE D62D2B37 AEEDD8C2</span><br><span class="line">078A8A20 70EEA791 84F48C1E 8ABA7DEB</span><br><span class="line">0B3907C0 C9A3523B 0091A045 6F67AED8</span><br><span class="line">------ END LICENSE ------</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">----- BEGIN LICENSE -----</span><br><span class="line">Andrew Weber</span><br><span class="line">Single User License</span><br><span class="line">EA7E-855605</span><br><span class="line">813A03DD 5E4AD9E6 6C0EEB94 BC99798F</span><br><span class="line">942194A6 02396E98 E62C9979 4BB979FE</span><br><span class="line">91424C9D A45400BF F6747D88 2FB88078</span><br><span class="line">90F5CC94 1CDC92DC 8457107A F151657B</span><br><span class="line">1D22E383 A997F016 42397640 33F41CFC</span><br><span class="line">E1D0AE85 A0BBD039 0E9C8D55 E1B89D5D</span><br><span class="line">5CDB7036 E56DE1C0 EFCC0840 650CD3A6</span><br><span class="line">B98FC99C 8FAC73EE D2B95564 DF450523</span><br><span class="line">------ END LICENSE ------</span><br></pre></td></tr></table></figure>
<h2 id="汉化："><a href="#汉化：" class="headerlink" title="汉化："></a>汉化：</h2><p>可以网上找些中文包放进去就行了。<br><a href="http://lucida.me/blog/sublime-text-complete-guide/" target="_blank" rel="external">Sublime Text 全程指南：</a></p>
<h2 id="插件："><a href="#插件：" class="headerlink" title="插件："></a>插件：</h2><p><strong>安装有两个办法</strong>：</p>
<blockquote>
<p>1、直接把插件放到它的安装路径对应文件包packages里面去，不知道在哪的可以直接打开 preferences-&gt;Browse packages，放进去之后软件会自动检测。</p>
<p>2、使用命令方式直接让软件自己下载安装。（使用package control组件）（前提：先安装下面那个package control插件)</p>
<p>按下Ctrl+Shift+P调出命令面板，输入install， 调出 Install Package 选项并回车，然后在列表中选中要安装的插件。</p>
<p>下载拷贝：然后把它放到package文件包中。没用过Github的朋友不知道在哪里下载。Download ZIP。然后把它解压，把文件夹放进package文件包，然后它就能检测到包啦！</p>
<p>代码安装：Ctrl+shift+p、输入install、选择package install 过几秒会弹出另一个框。然后在输入框中输入你想要的插件关键字安装吧！大致就是这样，简单明了。下面介绍其他常用插件，安装方式同理！</p>
</blockquote>
<h3 id="基础插件"><a href="#基础插件" class="headerlink" title="基础插件"></a>基础插件</h3><h4 id="Package-Control"><a href="#Package-Control" class="headerlink" title="Package Control"></a><a href="https://packagecontrol.io/" target="_blank" rel="external">Package Control</a></h4><ul>
<li>用于管理插件的插件，基础中的基础。之后列的插件全部通过 Package Control 安装。<blockquote>
<p>插件使用与安装: <a href="https://packagecontrol.io/installation" target="_blank" rel="external">https://packagecontrol.io/installation</a></p>
</blockquote>
</li>
</ul>
<h4 id="Convert​To​UTF8"><a href="#Convert​To​UTF8" class="headerlink" title="Convert​To​UTF8"></a><a href="https://packagecontrol.io/packages/ConvertToUTF8" target="_blank" rel="external">Convert​To​UTF8</a></h4><ul>
<li>文本编码自动转换，减少中日韩文乱码问题。<blockquote>
<p>插件安装: Ctrl+Shift+P, Package Control: Installed Packages, 搜索 Convert​To​UTF8</p>
</blockquote>
</li>
</ul>
<h4 id="IMESupport"><a href="#IMESupport" class="headerlink" title="IMESupport"></a><a href="https://packagecontrol.io/packages/IMESupport" target="_blank" rel="external">IMESupport</a></h4><ul>
<li>解决输入法选字框不跟随问题。</li>
</ul>
<h4 id="Side​Bar​Enhancements"><a href="#Side​Bar​Enhancements" class="headerlink" title="Side​Bar​Enhancements"></a><a href="https://packagecontrol.io/packages/SideBarEnhancements" target="_blank" rel="external">Side​Bar​Enhancements</a></h4><ul>
<li>自带边栏功能太少，必须安装此插件增强一下。</li>
</ul>
<h3 id="主题配色"><a href="#主题配色" class="headerlink" title="主题配色"></a>主题配色</h3><h4 id="Theme-Spacegray"><a href="#Theme-Spacegray" class="headerlink" title="Theme - Spacegray"></a><a href="https://packagecontrol.io/packages/Theme%20-%20Spacegray" target="_blank" rel="external">Theme - Spacegray</a></h4><ul>
<li>Spacegray 主题的 Base16 Eighties Dark 配色方案看着最顺眼，用着最舒服。<br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-02-02-01.jpg" alt="Base16 Eighties Dark color scheme"></li>
</ul>
<h3 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h3><h4 id="Sublime​Linter"><a href="#Sublime​Linter" class="headerlink" title="Sublime​Linter"></a><a href="https://packagecontrol.io/packages/SublimeLinter" target="_blank" rel="external">Sublime​Linter</a></h4><ul>
<li>用于管理其他 code linting 代码规范插件。<blockquote>
<p>使用说明: <a href="http://sublimelinter.readthedocs.org/en/latest/installation.html#installing-via-pc" target="_blank" rel="external">http://sublimelinter.readthedocs.org/en/latest/installation.html#installing-via-pc</a></p>
</blockquote>
</li>
</ul>
<h4 id="Sublime​Linter-jshint"><a href="#Sublime​Linter-jshint" class="headerlink" title="Sublime​Linter-jshint"></a><a href="https://packagecontrol.io/packages/SublimeLinter-jshint" target="_blank" rel="external">Sublime​Linter-jshint</a></h4><ul>
<li>基于 <a href="http://jshint.com/" target="_blank" rel="external">JSHint</a>，用于检查规范 JavaScript 代码。<blockquote>
<p>NPM 依赖包: <code>npm install -g jshint</code><br>使用说明: <a href="https://github.com/SublimeLinter/SublimeLinter-jshint" target="_blank" rel="external">https://github.com/SublimeLinter/SublimeLinter-jshint</a></p>
</blockquote>
</li>
</ul>
<h4 id="Sublime​Linter-csslint"><a href="#Sublime​Linter-csslint" class="headerlink" title="Sublime​Linter-csslint"></a><a href="https://packagecontrol.io/packages/SublimeLinter-csslint" target="_blank" rel="external">Sublime​Linter-csslint</a></h4><ul>
<li>基于 <a href="https://github.com/CSSLint/csslint" target="_blank" rel="external">CSSLint</a>，用于检查规范 CSS 代码。<blockquote>
<p>NPM 依赖包: <code>npm install -g csslint</code><br>使用说明: <a href="https://github.com/SublimeLinter/SublimeLinter-csslint" target="_blank" rel="external">https://github.com/SublimeLinter/SublimeLinter-csslint</a></p>
</blockquote>
</li>
</ul>
<h4 id="Sublime​Linter-contrib-htmlhint"><a href="#Sublime​Linter-contrib-htmlhint" class="headerlink" title="Sublime​Linter-contrib-htmlhint"></a><a href="https://packagecontrol.io/packages/SublimeLinter-contrib-htmlhint" target="_blank" rel="external">Sublime​Linter-contrib-htmlhint</a></h4><ul>
<li>基于 <a href="http://htmlhint.com/" target="_blank" rel="external">HTMLHint</a>，用于检查规范 HTML 代码。<blockquote>
<p>NPM 依赖包: <code>npm install -g htmlhint@latest</code><br>使用说明: <a href="https://github.com/mmaday/SublimeLinter-contrib-htmlhint" target="_blank" rel="external">https://github.com/mmaday/SublimeLinter-contrib-htmlhint</a></p>
</blockquote>
</li>
</ul>
<h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><h4 id="HTML-CSS-JS-Prettify"><a href="#HTML-CSS-JS-Prettify" class="headerlink" title="HTML-CSS-JS Prettify"></a><a href="https://packagecontrol.io/packages/HTML-CSS-JS%20Prettify" target="_blank" rel="external">HTML-CSS-JS Prettify</a></h4><ul>
<li>格式化 HTML, CSS, JavaScript 及 JSON 代码。</li>
</ul>
<h4 id="Color-Highlighter"><a href="#Color-Highlighter" class="headerlink" title="Color Highlighter"></a><a href="https://packagecontrol.io/packages/Color%20Highlighter" target="_blank" rel="external">Color Highlighter</a></h4><ul>
<li>直接在代码中预览颜色。</li>
</ul>
<h4 id="Stylus"><a href="#Stylus" class="headerlink" title="Stylus"></a><a href="https://packagecontrol.io/packages/Stylus" target="_blank" rel="external">Stylus</a></h4><ul>
<li>使代码高亮支持 Stylus。</li>
</ul>
<h4 id="Stylus-Clean-Completions"><a href="#Stylus-Clean-Completions" class="headerlink" title="Stylus Clean Completions"></a><a href="https://packagecontrol.io/packages/Stylus%20Clean%20Completions" target="_blank" rel="external">Stylus Clean Completions</a></h4><ul>
<li>Stylus 代码自动补全。</li>
</ul>
<h4 id="AutoFileName"><a href="#AutoFileName" class="headerlink" title="AutoFileName"></a><a href="https://packagecontrol.io/packages/AutoFileName" target="_blank" rel="external">AutoFileName</a></h4><ul>
<li>文件名自动补全。<br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-02-02-02.png" alt="AutoFileName"></li>
</ul>
<h4 id="Can-I-Use"><a href="#Can-I-Use" class="headerlink" title="Can I Use"></a><a href="https://packagecontrol.io/packages/Can%20I%20Use" target="_blank" rel="external">Can I Use</a></h4><ul>
<li><a href="http://caniuse.com/" target="_blank" rel="external">http://caniuse.com/</a> 的插件版，快速查询 HTML, CSS 等前端技术的浏览器兼容性</li>
</ul>
<h4 id="BracketHighlighter"><a href="#BracketHighlighter" class="headerlink" title="BracketHighlighter"></a><a href="https://packagecontrol.io/packages/BracketHighlighter" target="_blank" rel="external">BracketHighlighter</a></h4><ul>
<li>调整各类括号匹配的高亮样式</li>
</ul>
<h4 id="To-be-added"><a href="#To-be-added" class="headerlink" title="To be added"></a>To be added</h4><h3 id="插件整理"><a href="#插件整理" class="headerlink" title="插件整理"></a>插件整理</h3><blockquote>
<h4 id="代码整理："><a href="#代码整理：" class="headerlink" title="代码整理："></a>代码整理：</h4></blockquote>
<ul>
<li><a href="">Tag（代码格式化）</a><ul>
<li>全选Ctrl+A，Ctrl+Alt+F</li>
</ul>
</li>
<li><a href="">HTMLBeautify（）</a><ul>
<li>格式化HTML。</li>
</ul>
</li>
<li><a href="">HTML/CSS/JS Prettify（代码格式化）</a><ul>
<li>能够格式化css html和js。</li>
<li>注意：格式化的文件路径中不能有中文，不然会报找不到node的错误（windows下）。</li>
</ul>
</li>
<li><a href="">YUI Compressor（压缩JS和CSS文件） </a></li>
<li><a href="">PHPTidy（整理与排版PHP代码）</a></li>
<li><a href="">JsFormat（javascript格式化） </a><ul>
<li>格式化js代码，这个插件很有用，我们有时在网上看到某些效果，想查看是怎么实现的，但是代码被压缩过，很难阅读，不用怕，用ST2打开，按下ctrl+alt+5（这是我设置的快捷键），即可让代码还原，莫非是武林中失传已久的“还我靓靓拳”。</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="注释："><a href="#注释：" class="headerlink" title="注释："></a>注释：</h4></blockquote>
<ul>
<li><a href="">DocBlockr（代码自动注释生成） </a></li>
<li><a href="">HtmlTidy（清理与排版你的HTML代码）</a></li>
<li><a href="">AutoPEP8（）</a><ul>
<li>格式化Python代码。</li>
</ul>
</li>
<li><a href="">Alignment安装案例</a></li>
<li><a href="">Alignment（代码补齐）补齐就是补齐~就像这样</a></li>
</ul>
<blockquote>
<h4 id="代码简写："><a href="#代码简写：" class="headerlink" title="代码简写："></a>代码简写：</h4></blockquote>
<ul>
<li><a href="">SublimeCodeIntel（代码提示）</a><ul>
<li>自动提示我们，可能要输入HTML代码内容</li>
</ul>
</li>
<li><a href="">snippets（自定制代码补齐机制）</a><ul>
<li>自定制代码补齐机制，</li>
</ul>
</li>
<li><a href="">Emmet（Zen Coding 代码自动补齐） </a><ul>
<li>通过简单的命令直接生成一大段代码！一个字又快又准，安装好插件后，使用Ctrl＋Alt＋Enter呼出ZenCoding。<br>我们可以用 div#content&gt;ul&gt;li<em>3&gt;a</em> [href=”javascript:void(0);”]{Links$} 这样短短的一句话，生成下面一段代码：<br>技巧：<br>前端必备，快速开发HTML/CSS</li>
</ul>
</li>
</ul>
<p>输入 div.wrapper&gt;div.header+div.main+div.footer 按下Tab，立刻变成</p>
<p>或者按下ctrl+alt+enter，激发zencoding控制台，可看到整个动态的过程。</p>
<blockquote>
<h4 id="高亮显示："><a href="#高亮显示：" class="headerlink" title="高亮显示："></a>高亮显示：</h4></blockquote>
<ul>
<li><a href="">BracketHighlighter</a><ul>
<li>BracketHighlighter高亮显示匹配的括号、引号和标签，BracketHighlighter这个插件能在左侧高亮显示匹配的括号、引号和标签，能匹配的<em> [] ,  ()   </em> ,  {} ,  “” ,  ‘’ , <tag></tag>等甚至是自定义的标签，当看到密密麻麻的代码分不清标签之间包容嵌套的关系时，这款插件就能很好地帮你理清楚代码结构，快速定位括号，引号和标签内的范围。</li>
</ul>
</li>
<li><a href="">TrailingSpacer（高亮显示多余的空格和Tab）</a></li>
</ul>
<blockquote>
<h4 id="颜色："><a href="#颜色：" class="headerlink" title="颜色："></a>颜色：</h4></blockquote>
<ul>
<li><a href="">ColorPicker （调色盘） </a><ul>
<li>在编辑CSS样式的时候，ColorPicker可以让sublime text 内置一个调色盘，调好颜色，点击OK就会在光标处生成十六进制颜色代码。</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="CSS："><a href="#CSS：" class="headerlink" title="CSS："></a>CSS：</h4></blockquote>
<ul>
<li><a href="">CSScomb（CSS属性排序） </a></li>
<li><a href="">CSS3_Syntax（css语法高亮）</a><ul>
<li>对css语法高亮的支持，view-syntax-css3选中css3就能使用css3高亮了。必须每条属性都加上分号，并且属性必须小写，不然不会高亮，有点鸡肋啊。</li>
</ul>
</li>
<li><a href="">Prefixr（自动加-webkit前缀）</a><ul>
<li>写 CSS可自动添加 -webkit 等私有词缀，Ctrl+Alt+X触发。</li>
</ul>
</li>
<li><a href="">Autoprefixer（自动加前缀）</a><ul>
<li>可以给css自动加前缀功能</li>
</ul>
</li>
<li><a href="">Goto-CSS-Declaration（CSS文件跳转）</a><ul>
<li>跳转到css文件该class的声明处，方便修改查看，如图下所示，注意对应的css文件要同时打开才行。</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="编码："><a href="#编码：" class="headerlink" title="编码："></a>编码：</h4></blockquote>
<ul>
<li><a href="">GBK Encoding Support（GBK中文编码）</a><ul>
<li>这个插件还是非常有用的，因为sublime 本身 不支持gbk编码，在utf8如此流行的今天，我们整站还是gbk编码，o(︶︿︶)o 唉，所以全靠这个插件了。</li>
</ul>
</li>
<li><a href="">GBK to UTF8（编码转换）</a><ul>
<li>将文件编码从GBK转换成UTF8，菜单 – File里面找。</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="文档管理："><a href="#文档管理：" class="headerlink" title="文档管理："></a>文档管理：</h4></blockquote>
<ul>
<li><a href="">Nettus+ fetch （管理一些开源框架）</a><ul>
<li>配置文件修改，Ctrl+Shift+P输入Fetch Manage，配置文档。通过输入fetch file，搜索框架名进行导入。</li>
</ul>
</li>
<li><a href="">SideBarEnhancements（侧边栏增强） </a></li>
<li><a href="">SyncedSideBar（侧边栏打开文件定位）</a><ul>
<li>支持当前文件在左侧面板中定位，不错。</li>
</ul>
</li>
<li><a href="">Hex-to-HSL-Color Hex（颜色模式转HSL颜色模式）</a></li>
<li><a href="">advanceNewfile（面板随意添加文件）</a><ul>
<li>按Ctrl+Alt+N，下方输入A\B\test.css就好了，test.css这个文件出现在某个文件夹。</li>
</ul>
</li>
<li><a href="">SublimeTmpl （自定义新建文件） </a><ul>
<li>默认已经添加了html、css、js等常见类型的面板，按ctrl+alt+h/ctrl+alt+c/ctrl+alt+j可新建这 3钟类型的文件，快捷键在这里\Packages\SublimeTmpl\Default (Windows).sublime-keymap, 模板文件在这里\Packages\SublimeTmpl\templates，可修改。 比如下边简单的html文件</li>
</ul>
</li>
<li><a href="">DocBlockr（代码建立文档）</a><ul>
<li>DocBlockr 可以使你很方便地对代码建立文档。它会解析函数，变量，和参数，根据它们自动生成文档范式，你的工作就是去填充对应的说明。</li>
</ul>
</li>
<li><a href="">GotoRecent（历史文档记录）</a><ul>
<li>打开最近的文件，系统有这个功能，但只能看最近8个，有点不爽，按ctrl+e，选择即可。</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="语法识别："><a href="#语法识别：" class="headerlink" title="语法识别："></a>语法识别：</h4></blockquote>
<ul>
<li><a href="">jQuery（jQuery语法识别）</a><ul>
<li>支持jquery的只能语法提示，很赞。</li>
</ul>
</li>
<li><a href="">JavaScriptNext - ES6 Syntax（ES6语法识别）</a><ul>
<li>提供ES6的语法支持。</li>
</ul>
</li>
<li><a href="">WordPress（WordPress的函数）</a><ul>
<li>集成一些WordPress的函数，对于像我这种经常要写WP模版和插件的人特别有用</li>
</ul>
</li>
<li><a href="">Vintage（Vim模拟）</a><ul>
<li>如果你习惯使用vim，那么可以安装这个插件，这个插件可以让sublime像vim一样。</li>
</ul>
</li>
<li><a href="">LESS（LESS语法识别）</a><ul>
<li>这是一个非常棒的插件，可以让sublime支持less的语法高亮和语法提示，对于搞less的同学灰常重要，不过多解释。</li>
</ul>
</li>
<li><a href="">SCSS（SCSS语法识别）</a><ul>
<li>支持scss的语法高亮，里面附带了好多CSS Snippet，无论现用或者改造成，都可节省不少时间。</li>
</ul>
</li>
<li><a href="">Liquid（Liquid语法识别）</a><ul>
<li>提供Liquid语法支持，如果你也写博客的话不妨试试。</li>
</ul>
</li>
<li><a href="">Smarty（Smarty语法识别）</a><ul>
<li>提供smarty语法的支持。Smarty插件默认的分隔符是{}，如果你使用的分隔符不同可以更改插件目录的Smarty.tmPreferences文件，找到其中的SMARTY_LDELIM和SMARTY_RDELIM，修改为你的分隔符即可。</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="文件传输："><a href="#文件传输：" class="headerlink" title="文件传输："></a>文件传输：</h4></blockquote>
<ul>
<li><a href="">SFTP（编辑 FTP 或 SFTP 服务器上的文件）</a></li>
<li><a href="">Package Syncing</a><ul>
<li>最后推荐一个同步插件，这个插件可以在不同的机器同步配置信息和插件，非常方便，但鉴于国内的墙太高，我都是直接把插件给手动备份了，然后直接拖进去，或者直接去github上下载对应的包。</li>
</ul>
</li>
</ul>
<blockquote>
<h4 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h4></blockquote>
<ul>
<li><a href="">Gits（集成 GitHub） </a></li>
<li><a href="">Clipboard-history（粘贴板历史记录） </a><ul>
<li>可以保存粘贴的历史，很赞的功能，再也不用担心历史丢失了。ctrl+alt+v可打开历史面板，上下选择即可，安装后会和默认的ctrl+shift+v（粘贴缩进）冲突，干掉这个快捷键。</li>
</ul>
</li>
<li><a href="">lint（语法校验）：</a></li>
<li><a href="">SublimeLinter（代码错误提示） 总体架构</a></li>
<li><a href="">Jslint编程风格</a><ul>
<li>Sub</li>
</ul>
</li>
<li><a href="">Tradsim（中文繁字体和简体字转换） </a></li>
<li><a href="">Terminal</a><ul>
<li>可以sublime中，打开命令行，非常方便哦。</li>
</ul>
</li>
<li><a href="">AllAutocomplete</a><ul>
<li>自动完成插件，可在全部打开的文件中，自动完成。</li>
</ul>
</li>
<li><a href="">HexViewer</a><ul>
<li>提供十六进制文件查看功能。</li>
</ul>
</li>
<li><a href="">MultiEditUtils</a><ul>
<li>扩展多行编辑的功能。</li>
</ul>
</li>
<li><a href="">IMESupport（输入框不更随着光标）</a></li>
</ul>
<h2 id="快捷代码："><a href="#快捷代码：" class="headerlink" title="快捷代码："></a>快捷代码：</h2><ol>
<li>跳到行首行尾的快捷键<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    //跳到行首行尾的快捷键</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+k&quot;, &quot;ctrl+h&quot;], &quot;command&quot;: &quot;move_to&quot;, &quot;args&quot;: &#123;&quot;to&quot;: &quot;bol&quot;, &quot;extend&quot;: false&#125; &#125;,</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+k&quot;, &quot;ctrl+e&quot;], &quot;command&quot;: &quot;move_to&quot;, &quot;args&quot;: &#123;&quot;to&quot;: &quot;eol&quot;, &quot;extend&quot;: false&#125; &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>先按ctrl+k，然后按ctrl+h（home首字母）光标移动到行首；先按ctrl+k，然后按ctrl+e（end首字母）光标移动到行尾。</p>
<h2 id="设置Setting"><a href="#设置Setting" class="headerlink" title="设置Setting"></a>设置Setting</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//Set Update false</span><br><span class="line">&quot;update_check&quot;: false,</span><br></pre></td></tr></table></figure>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ol>
<li><strong>Package Control</strong>: <a href="https://packagecontrol.io/" target="_blank" rel="external">https://packagecontrol.io/</a></li>
<li><strong>SublimeLinter</strong>: <a href="http://sublimelinter.readthedocs.org/" target="_blank" rel="external">http://sublimelinter.readthedocs.org/</a></li>
<li><strong>JSHint</strong>: <a href="http://jshint.com/" target="_blank" rel="external">http://jshint.com/</a></li>
<li><strong>CSSLint</strong>: <a href="https://github.com/CSSLint/csslint" target="_blank" rel="external">https://github.com/CSSLint/csslint</a></li>
<li><strong>HTMLHint</strong>: <a href="http://htmlhint.com/" target="_blank" rel="external">http://htmlhint.com/</a></li>
<li><strong>Stylus</strong>: <a href="http://learnboost.github.io/stylus/" target="_blank" rel="external">http://learnboost.github.io/stylus/</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git 使用总结]]></title>
      <url>http://blog.xheartx.com/2016/01/30/2016-01-30-git-command/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-30-01.png" alt="Git 使用总结"></p>
<blockquote>
<p>笔记整理自网站 <a href="https://try.github.io" target="_blank" rel="external">Try Git</a>，一套很不错的 Git 在线入门教程。</p>
</blockquote>
<a id="more"></a>
<h2 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h2><p>To initialize a Git repository here<br>要初始化 Git 存储库中</p>
<h3 id="Directory"><a href="#Directory" class="headerlink" title="Directory"></a>Directory</h3><ul>
<li>A folder used for storing multiple files.<br>用于存储多个文件的文件夹。</li>
</ul>
<h3 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h3><ul>
<li>A directory where Git has been initialized to start version controlling your files.<br>Git 已初始化启动版本控制文件的目录。</li>
</ul>
<h2 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h2><p>See what the current state of the project is.<br>请参阅该项目的当前状态是什么。</p>
<h3 id="staged"><a href="#staged" class="headerlink" title="staged"></a>staged</h3><ul>
<li>Files are ready to be committed.<br>文件是准备被提交。</li>
</ul>
<h3 id="unstaged"><a href="#unstaged" class="headerlink" title="unstaged"></a>unstaged</h3><ul>
<li>Files with changes that have not been prepared to be committed.<br>包含已不准备提交的更改的文件。</li>
</ul>
<h3 id="untracked"><a href="#untracked" class="headerlink" title="untracked"></a>untracked</h3><ul>
<li>Files aren’t tracked by Git yet. This usually indicates a newly created file.<br>然而 git 跟踪不是文件。这通常表明一个新创建的文件。</li>
</ul>
<h3 id="deleted"><a href="#deleted" class="headerlink" title="deleted"></a>deleted</h3><ul>
<li>File has been deleted and is waiting to be removed from Git.<br>文件已被删除，等待从 Git 中删除。</li>
</ul>
<h2 id="git-add-lt-file-gt"><a href="#git-add-lt-file-gt" class="headerlink" title="git add &lt;file&gt;"></a>git add <code>&lt;file&gt;</code></h2><p>Add files to the staging area.<br>将文件添加到暂存区域。</p>
<h3 id="Staging-Area"><a href="#Staging-Area" class="headerlink" title="Staging Area"></a>Staging Area</h3><ul>
<li>A place where we can group files together before we “commit” them to Git.<br>在那里我们可以将文件分组在一起之前我们”死记”，Git 一个地方。<br>Commit<br>提交</li>
</ul>
<h3 id="add-all"><a href="#add-all" class="headerlink" title="add all"></a>add all</h3><ul>
<li>You can also type <code>git add -A</code> . where the dot stands for the current directory, so everything in and beneath it is added. The <code>-A</code> ensures even file deletions are included.<br>您也可以键入 git add-A。其中点代表当前目录，因此，一切都在和它下面添加。’-A’ 确保甚至删除文件都包括在内。</li>
</ul>
<h2 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h2><p>You can use <code>git reset &lt;filename&gt;</code> to remove a file or files from the staging area.<br>可以使用 git 复位 <filename>要删除的文件从临时区域。</filename></p>
<h2 id="Commit"><a href="#Commit" class="headerlink" title="Commit"></a>Commit</h2><p>A “commit” is a snapshot of our repository. This way if we ever need to look back at the changes we’ve made (or if someone else does), we will see a nice timeline of all changes.<br>“提交”是我们的存储库的快照。这种方式如果我们需要回头看变化我们已经取得了 （或如果别人做），我们将看到一个好时间线的所有更改。</p>
<h3 id="git-commit-m-“msg”"><a href="#git-commit-m-“msg”" class="headerlink" title="git commit -m “msg”"></a>git commit -m “msg”</h3><ul>
<li>To store our staged changes we run the commit command with a message describing what we’ve changed.<br>来存储我们的阶段性的变化我们描述我们已经改变了的消息与运行提交命令。</li>
</ul>
<h3 id="‘-a’-option"><a href="#‘-a’-option" class="headerlink" title="‘-a’ option"></a>‘-a’ option</h3><ul>
<li>Auto removes deleted files with the commit.<br>自动删除已删除的文件一起提交。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -am &quot;msg&quot;</span><br></pre></td></tr></table></figure>
<h2 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h2><p>a journal that remembers all the changes we’ve committed so far<br>记得的所有更改的日志我们犯为止</p>
<h3 id="git-log-–summary"><a href="#git-log-–summary" class="headerlink" title="git log –summary"></a>git log –summary</h3><ul>
<li>see more information for each commit. You can see where new files were added for the first time or where files were deleted. It’s a good overview of what’s going on in the project.<br>看到每次提交的详细信息。你可以看到第一次在哪里添加新的文件或删除文件的位置。它是在项目中怎么好概述。</li>
</ul>
<h2 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add &lt;remote name&gt; &lt;repository URL&gt;</span><br><span class="line">git remote add origin https://github.com/try-git/try_git.git</span><br></pre></td></tr></table></figure>
<p>Git doesn’t care what you name your remotes, but it’s typical to name your main one <code>origin</code>.<br>Git 并不在乎你的名字你的遥控器，但它是典型的名字你主要的一个原点。</p>
<p>It’s also a good idea for your main repository to be on a remote server like GitHub in case your machine is lost at sea during a transatlantic boat cruise or crushed by three monkey statues during an earthquake.<br>它也是一个好主意你主要的存储库，要像 GitHub 万一你的机器是在一艘横渡大西洋的船迷失在大海航行的远程服务器上，或在地震中被压在三个猴子雕像。</p>
<h2 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h2><p>Tells Git where to put our commits when we’re ready.<br>告诉 Git 在哪里，把我们提交时，我们准备好了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push -u &lt;remote name&gt; &lt;branch name&gt;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p>The <code>-u</code> tells Git to remember the parameters, so that next time we can simply run <code>git push</code>.<br>‘-U’ 告诉 Git 要记住参数，以便下一次我们可以简单地运行git push。</p>
<h2 id="git-stash"><a href="#git-stash" class="headerlink" title="git stash"></a>git stash</h2><p>Sometimes when you go to pull you may have changes you don’t want to commit just yet. One option you have, other than commiting, is to stash the changes.<br>有时当你去拉你可有改变你不想只是还没有提交。你除了提交，还有一个选择是藏所做的更改。</p>
<p>Use the command <code>git stash</code> to stash your changes, and <code>git stash apply</code> to re-apply your changes after your pull.<br>使用命令 ‘git 藏匿’ 到藏您的更改，和 git 藏匿应用来重新应用您的更改后你的拉。</p>
<h2 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push &lt;remote name&gt; &lt;branch name&gt;</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure>
<p>Check for changes on remote repository and pull down any new changes.<br>检查对远程资源库中的更改和拉下任何新的变化。</p>
<h2 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h2><p>A good overview of changes we have made and lets us add files or directories one at a time and commit them separately.<br>很好地概述的变化我们取得，让我们一次添加文件或目录一并提交他们分开。</p>
<h3 id="git-diff-HEAD"><a href="#git-diff-HEAD" class="headerlink" title="git diff HEAD"></a>git diff HEAD</h3><ul>
<li>Show what is different from our last commit. <code>HEAD</code> points to your most recent commit by default.<br>显示什么是从我们最后提交不同。默认情况下，’ HEAD ‘ 指向您最新提交。</li>
</ul>
<h3 id="git-diff-–staged"><a href="#git-diff-–staged" class="headerlink" title="git diff –staged"></a>git diff –staged</h3><ul>
<li>Look at changes within files that have already been staged.<br>看看已经发动的文档内的修改。</li>
</ul>
<h2 id="git-checkout-–-lt-target-gt"><a href="#git-checkout-–-lt-target-gt" class="headerlink" title="git checkout – &lt;target&gt;"></a>git checkout – <code>&lt;target&gt;</code></h2><p>Changed files back to how they were at the last commit, namely get rid of all the changes since the last commit.<br>已更改的文件返回到他们是如何在最后的承诺，即摆脱所有更改自上次提交。</p>
<p><code>--</code>: promise the command line that there are no more options after the ‘–’, avoid switching to the branch of the same name.<br>‘— — ‘: 保证命令行有没有更多的选择后,’ — — ‘，避免切换到具有相同名称的分支。</p>
<h2 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h2><p>List local branches of now repository.<br>列出现在资料库的地方分支机构。</p>
<h3 id="git-branch-lt-name-gt"><a href="#git-branch-lt-name-gt" class="headerlink" title="git branch &lt;name&gt;"></a>git branch <code>&lt;name&gt;</code></h3><ul>
<li>Create a new branch.<br>创建一个新的分支。</li>
</ul>
<blockquote>
<p>When developers are working on a feature or bug they’ll often create a copy (aka. branch) of their code they can make separate commits to. Then when they’re done they can merge this branch back into their main master branch.</p>
</blockquote>
<h3 id="git-checkout-lt-branch-gt"><a href="#git-checkout-lt-branch-gt" class="headerlink" title="git checkout &lt;branch&gt;"></a>git checkout <code>&lt;branch&gt;</code></h3><ul>
<li>Switch to certain branch.<br>切换到某个分支。</li>
</ul>
<h3 id="git-checkout-b-new-branch"><a href="#git-checkout-b-new-branch" class="headerlink" title="git checkout -b new_branch"></a>git checkout -b new_branch</h3><ul>
<li>Checkout and create a branch at the same time.<br>签出和在同一时间创建一个分支。</li>
</ul>
<h2 id="git-rm-lt-file-gt"><a href="#git-rm-lt-file-gt" class="headerlink" title="git rm &lt;file&gt;"></a>git rm <code>&lt;file&gt;</code></h2><p>Not only remove the actual files from disk, but will also stage the removal of the files for us.<br>不仅从磁盘，删除实际的文件也将阶段我们文件的删除。</p>
<h3 id="git-rm-r-folder"><a href="#git-rm-r-folder" class="headerlink" title="git rm -r folder"></a>git rm -r folder</h3><ul>
<li>Recursively remove all folders and files from the given directory.<br>从给定的目录中递归删除所有文件夹和文件。</li>
</ul>
<h2 id="git-merge-lt-branch-gt"><a href="#git-merge-lt-branch-gt" class="headerlink" title="git merge &lt;branch&gt;"></a>git merge <code>&lt;branch&gt;</code></h2><p>Merge your changes from the given branch into current branch.<br>将你给定的分支中的更改合并到当前分支。</p>
<h3 id="Merge-Conflicts"><a href="#Merge-Conflicts" class="headerlink" title="Merge Conflicts"></a>Merge Conflicts</h3><ul>
<li>Merge Conflicts can occur when changes are made to a file at the same time. Reading more on<br>在同一时间对文件进行更改时，可能会发生合并冲突。阅读更多关于<br><a href="http://git-scm.com/docs/git-merge#_how_conflicts_are_presented" target="_blank" rel="external">how conflicts are presented</a>.</li>
</ul>
<h2 id="Delete-Branch"><a href="#Delete-Branch" class="headerlink" title="Delete Branch"></a>Delete Branch</h2><h3 id="git-branch-d-lt-branch-gt"><a href="#git-branch-d-lt-branch-gt" class="headerlink" title="git branch -d &lt;branch&gt;"></a>git branch -d <code>&lt;branch&gt;</code></h3><ul>
<li>Delete a local branch. <code>-d</code> won’t let you delete something that hasn’t been merged.<br>删除本地分支。’-d’ 不会让你删除尚未合并的东西。</li>
</ul>
<h3 id="f-and-D"><a href="#f-and-D" class="headerlink" title="-f and -D"></a><code>-f</code> and <code>-D</code></h3><ul>
<li>Force delete the branch that hasn’t been merged.<br>删除尚未合并的分支。</li>
</ul>
<blockquote>
<p>Add the <code>-f</code>(–force) option or use <code>-D</code> which combines <code>-d -f</code> together into one command.</p>
</blockquote>
<h3 id="Delete-Remote-Branch"><a href="#Delete-Remote-Branch" class="headerlink" title="Delete Remote Branch"></a>Delete Remote Branch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -r -d &lt;remote name&gt;/&lt;branch name&gt;</span><br><span class="line">git push &lt;remote name&gt;: &lt;branch name&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -r -d origin/branch-name</span><br><span class="line">git push origin :branch-name</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MarkDown 使用总结]]></title>
      <url>http://blog.xheartx.com/2016/01/25/2016-01-25-markdown-sum/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-25-01.jpg" alt="MarkDown 使用总结">
　</p>
<blockquote>
<p>如果你是个经常码字的人，你肯定有所体会，码字过程一半时间用在遣词造句，一半时间则在死磕排版。那么有没有一种方法能够自动排版，且各处通用呢？<br>Markdown是一种轻量级的「标记语言」。是为那些经常需要码字或者进行文字排版的、对码字手速和排版顺畅度有要求的人群设计的，他们希望用键盘把文字内容打出来的同时搞定排版，最好从头到尾都不要使用鼠标。这些人最常见的是经常需要写文档的码农，另外包括博客写手、网站小编、出版业人士等等。</p>
</blockquote>
<h2 id="Markdown的特点"><a href="#Markdown的特点" class="headerlink" title="Markdown的特点"></a><strong>Markdown的特点</strong></h2><p><code>易写易读</code>是Markdown语法的最大亮点，也是它为什么能提高书写效率的原因。<br><a id="more"></a></p>
<h3 id="易写"><a href="#易写" class="headerlink" title="易写"></a>易写</h3><p>Markdown语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，非程序员人群不到半小时完全能够掌握。但这十个不到的标记符号，却能让人优雅地沉浸式写作，专注内容而 不纠结排版，大大提高书写效率。名副其实的「码字神器」。</p>
<h3 id="易读"><a href="#易读" class="headerlink" title="易读"></a>易读</h3><p>兼顾“什么人都能打开” 和 “版样式不变”。 所谓“什么人都能打开”是指，Markdown属于兼容性极强的纯文本，可以用所有文本编辑器打开，避免了“用 Windows 的人打不开 .pages 文件”的情况发生；Markdown文本轻松可转成HTML、电子书等格式，而HTML 是整个万维网（web）的标记语言，也是目前主流电子书格式（ EPUB、mobi、Kindle专有格式 .azw）所用的标记语言。人们如果采用Markdown 标注格式，对日后的文件转换工作将大有裨益。</p>
<p>所谓“排版样式不变”是指，在转化为富文本/HTML等格式后依然可以保留原本的排版和阅读体验。不会出现“我这篇稿子是用旧版 Word 写的，你用新版 Word 看可能格式会有点问题”的情况。</p>
<p>这是因为，实质上markdown的本质仍是一种基本文本，并非word等后期加工自我渲染的结果。这与<code>html</code>其实非常相似。但是<code>html</code>有几个比较明显的缺陷。比如对于非专业认识来说认知困难，另外<code>html</code>的过于强大和驳杂的标记也对安全造成了比较大的影响。<br>而Markdown实质上是<code>html</code>其中的几个标记的友好宏定义，使其对书写更加的便利和方便。</p>
<h2 id="Markdown使用指南"><a href="#Markdown使用指南" class="headerlink" title="Markdown使用指南"></a>Markdown使用指南</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line">大标题</span><br><span class="line">=</span><br><span class="line">小标题</span><br><span class="line">-</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>大标题<br>=<br>小标题<br>-</p>
<h3 id="粗体、斜体"><a href="#粗体、斜体" class="headerlink" title="粗体、斜体"></a>粗体、斜体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line">**粗体**</span><br><span class="line">__粗体__</span><br><span class="line">*斜体*</span><br><span class="line">_斜体_</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<p><strong>粗体</strong><br><strong>粗体</strong><br><em>斜体</em><br><em>斜体</em></p>
<h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line">---</span><br><span class="line">***</span><br><span class="line">~~文字删除线~~</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<hr>
<hr>
<p><del>文字删除线</del></p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line">- 无序列表项目</span><br><span class="line">- 无序列表项目</span><br><span class="line">- 无序列表项目</span><br><span class="line"></span><br><span class="line">* 无序列表项目</span><br><span class="line">* 无序列表项目</span><br><span class="line">* 无序列表项目</span><br><span class="line"></span><br><span class="line">1. 有序列表项目</span><br><span class="line">2. 有序列表项目</span><br><span class="line">3. 有序列表项目</span><br><span class="line"></span><br><span class="line">- 外层列表项目</span><br><span class="line"> + 内层列表项目</span><br><span class="line"> + 内层列表项目</span><br><span class="line"> + 内层列表项目</span><br><span class="line">- 外层列表项目</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<ul>
<li>无序列表项目</li>
<li>无序列表项目</li>
<li>无序列表项目</li>
</ul>
<ul>
<li>无序列表项目</li>
<li>无序列表项目</li>
<li>无序列表项目</li>
</ul>
<ol>
<li>有序列表项目</li>
<li>有序列表项目</li>
<li>有序列表项目</li>
</ol>
<ul>
<li>外层列表项目<ul>
<li>内层列表项目</li>
<li>内层列表项目</li>
<li>内层列表项目</li>
</ul>
</li>
<li>外层列表项目</li>
</ul>
<h3 id="添加超链接、图片"><a href="#添加超链接、图片" class="headerlink" title="添加超链接、图片"></a>添加超链接、图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[MarkDown 使用](链接地址 &quot;描述&quot;)</span><br><span class="line">![MarkDown 使用](http://7xvjap.com1.z0.glb.clouddn.com/2016-01-25-02.jpg &quot;描述&quot;)</span><br><span class="line"></span><br><span class="line">[MarkDown 使用][1]</span><br><span class="line">![MarkDown 使用][2]</span><br><span class="line"></span><br><span class="line">[1]:链接地址 &quot;描述&quot;</span><br><span class="line">[2]:链接地址 &quot;描述&quot;</span><br><span class="line"></span><br><span class="line">[无链接的链接][null-link]</span><br><span class="line">[null-link]: chrome://not-a-link</span><br></pre></td></tr></table></figure>
<p>效果预览：</p>
<p><a href="链接地址" title="描述">MarkDown 使用</a></p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-25-02.jpg" alt="MarkDown 使用" title="描述"></p>
<p><a href="链接地址" title="描述">MarkDown 使用</a></p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-25-02.jpg" alt="MarkDown 使用" title="描述"></p>
<p><a href="chrome://not-a-link" target="_blank" rel="external">无链接的链接</a></p>
<h3 id="添加表格"><a href="#添加表格" class="headerlink" title="添加表格"></a>添加表格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line">| ABCD | EFGH | IJKL |</span><br><span class="line">| -----|:----:| ----:|</span><br><span class="line">| a    | b    | c    |</span><br><span class="line">| d    | e    |  f   |</span><br><span class="line">| g    | h    |   i  |</span><br><span class="line"></span><br><span class="line">ABCD | EFGH | IGKL</span><br><span class="line">-----|------|----</span><br><span class="line">a    | b    | c</span><br><span class="line">d    | e    | f</span><br><span class="line">g    | h    | i</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<table>
<thead>
<tr>
<th>ABCD</th>
<th style="text-align:center">EFGH</th>
<th style="text-align:right">IJKL</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td style="text-align:center">b</td>
<td style="text-align:right">c</td>
</tr>
<tr>
<td>d</td>
<td style="text-align:center">e</td>
<td style="text-align:right">f</td>
</tr>
<tr>
<td>g</td>
<td style="text-align:center">h</td>
<td style="text-align:right">i</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>ABCD</th>
<th>EFGH</th>
<th>IGKL</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>b</td>
<td>c</td>
</tr>
<tr>
<td>d</td>
<td>e</td>
<td>f</td>
</tr>
<tr>
<td>g</td>
<td>h</td>
<td>i</td>
</tr>
</tbody>
</table>
<h3 id="添加代码"><a href="#添加代码" class="headerlink" title="添加代码"></a>添加代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line">`字符`（简短文字添加代码框）</span><br><span class="line"></span><br><span class="line">`Tab`或</span><br><span class="line">    四个空格（大段文字添加代码框，每行前添加）</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<p><code>字符</code>（简短文字添加代码框）</p>
<p><code>Tab</code>或<br>    四个空格（大段文字添加代码框，每行前添加）</p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line">&gt; 引用的文字</span><br><span class="line">&gt; 引用的文字</span><br><span class="line">&gt; 引用的文字</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">&gt; 引用的文字引用的文字引用的文字引用的文字引用的文字引用的文字引</span><br><span class="line">用的文字引用的文字引用的文字引用的文字引用的文字引用的文字引用</span><br><span class="line">的文字引用的文字引用的文字</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">&gt; 引用的文字引用的文字引用的文字引用的文字引用的文字</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"> &gt;&gt; 引言内的引言引言内的引言引言内的引言</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">&gt; 引用的文字引用的文字引用的文字引用的文字引用的文字</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<blockquote>
<p>引用的文字<br>引用的文字<br>引用的文字</p>
</blockquote>
<hr>
<blockquote>
<p>引用的文字引用的文字引用的文字引用的文字引用的文字引用的文字引<br>用的文字引用的文字引用的文字引用的文字引用的文字引用的文字引用<br>的文字引用的文字引用的文字</p>
</blockquote>
<hr>
<blockquote>
<p>引用的文字引用的文字引用的文字引用的文字引用的文字</p>
</blockquote>
<hr>
<blockquote>
<blockquote>
<p>引言内的引言引言内的引言引言内的引言</p>
</blockquote>
</blockquote>
<hr>
<blockquote>
<p>引用的文字引用的文字引用的文字引用的文字引用的文字</p>
</blockquote>
<h3 id="单行长文字"><a href="#单行长文字" class="headerlink" title="单行长文字"></a>单行长文字</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line">在需要以单行长文字显示的文字两段各加三个`~`,即`~~~`</span><br><span class="line"></span><br><span class="line">在需要以单行长文字显示的文字段落前加四个空格</span><br></pre></td></tr></table></figure>
<p>预览显示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">单行长文字单行长文字单行长文字单行长文字单行长文字单行长文字单行长文字单行长文字单行长文字单行长文字单行长文字单行长文字单行长文字单行长文字</span><br></pre></td></tr></table></figure></p>
<h3 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line"> 缩进一个字符缩进一个字符缩进一个字符缩进一个字符缩进一个字符缩进一个字符</span><br><span class="line"></span><br><span class="line"> 缩进两个字符缩进两个字符缩进两个字符缩进两个字符缩进两个字符缩进两个字符</span><br><span class="line"></span><br><span class="line">  缩进四个字符缩进四个字符缩进四个字符缩进四个字符缩进四个字符缩进四个字符</span><br><span class="line"></span><br><span class="line">预览效果：</span><br><span class="line"></span><br><span class="line"> 缩进一个字符缩进一个字符缩进一个字符缩进一个字符缩进一个字符缩进一个字符</span><br><span class="line"></span><br><span class="line"> 缩进两个字符缩进两个字符缩进两个字符缩进两个字符缩进两个字符缩进两个字符</span><br><span class="line"></span><br><span class="line">  缩进四个字符缩进四个字符缩进四个字符缩进四个字符缩进四个字符缩进四个字符</span><br></pre></td></tr></table></figure>
<h3 id="添加脚注"><a href="#添加脚注" class="headerlink" title="添加脚注"></a>添加脚注</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line">![添加脚注](http://upload-images.jianshu.io/upload_images/1064727-49caf145bf6c2a97.png)添加脚注</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<p>A <a href="http://www.jianshu.com/p/21d355525bdf#fn_lemma_a" title="描述" target="_blank" rel="external"><a href="链接地址" title="描述">1</a></a></p>
<h3 id="创建链接"><a href="#创建链接" class="headerlink" title="创建链接"></a>创建链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">为输入的URL或邮箱自动创建链接，如test@domain.com。</span><br><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line">&lt;test@domain.com&gt;</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<p><a href="&#x6d;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#116;&#101;&#x73;&#116;&#64;&#x64;&#111;&#109;&#97;&#105;&#110;&#x2e;&#x63;&#111;&#109;">&#116;&#101;&#x73;&#116;&#64;&#x64;&#111;&#109;&#97;&#105;&#110;&#x2e;&#x63;&#111;&#109;</a></p>
<h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">在特殊字符，如*、[、&gt;等前面加\可使特殊格式字符转换为正常字符打出（有序列表符号如1.，须在. 前加\）。</span><br><span class="line"></span><br><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line">\\</span><br><span class="line">\`</span><br><span class="line">\*</span><br><span class="line">\_</span><br><span class="line">\&#123;\&#125;</span><br><span class="line">\[\]</span><br><span class="line">\(\)</span><br><span class="line">\#</span><br><span class="line">\+</span><br><span class="line">\-</span><br><span class="line">\.</span><br><span class="line">\!</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<p>\<br>`<br>*<br>_<br>{}<br>[]<br>()<br>#<br>+<br>-<br>.<br>!</p>
<h3 id="小型文本"><a href="#小型文本" class="headerlink" title="小型文本"></a>小型文本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Markdown语法：</span><br><span class="line"></span><br><span class="line">&lt;small&gt;文本内容&lt;/small&gt;</span><br></pre></td></tr></table></figure>
<p>预览效果：</p>
<p><small>文本内容</small></p>
<h2 id="样式调整"><a href="#样式调整" class="headerlink" title="样式调整"></a>样式调整</h2><p>Markdown 写的表格最终会被解析成 HTML 代码，如果使用的编辑器支持自定义 CSS，就能方便的调整样式。如果可以引入 JavaScript，样式自适应也能较好地实现。</p>
<h3 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h3><pre><code>&lt;table&gt;: 表格
&lt;thead&gt;: table header 表头区
&lt;th&gt;: table headings 表头单元格内容
&lt;tbody&gt;: table body 表格内容区
&lt;tr&gt;: table row 表行
&lt;td&gt;: table data 单元格内容
</code></pre><h3 id="基本样式"><a href="#基本样式" class="headerlink" title="基本样式"></a>基本样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>; <span class="comment">/*表格宽度*/</span></span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">65em</span>; <span class="comment">/*表格最大宽度，避免表格过宽*/</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dedede</span>; <span class="comment">/*表格外边框设置*/</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">15px</span> auto; <span class="comment">/*外边距*/</span></span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse; <span class="comment">/*使用单一线条的边框*/</span></span><br><span class="line">    <span class="attribute">empty-cells</span>: show; <span class="comment">/*单元格无内容依旧绘制边框*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span>,</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">35px</span>; <span class="comment">/*统一每一行的默认高度*/</span></span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dedede</span>; <span class="comment">/*内部边框样式*/</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>; <span class="comment">/*内边距*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="表头样式"><a href="#表头样式" class="headerlink" title="表头样式"></a>表头样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold; <span class="comment">/*加粗*/</span></span><br><span class="line">    <span class="attribute">text-align</span>: center <span class="meta">!important</span>; <span class="comment">/*内容居中，加上 !important 避免被 Markdown 样式覆盖*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(158,188,226,0.2); <span class="comment">/*背景色*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="隔行变色"><a href="#隔行变色" class="headerlink" title="隔行变色"></a>隔行变色</h3><ul>
<li>使用选择器选取复数行设置背景色。一般 Markdown 表格编译后都有 <code>&lt;tbody&gt;</code> 包裹内容，那下面就相当于从表格第二行开始计数</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">tbody</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child(2n)</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(158,188,226,0.12);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="悬浮变色"><a href="#悬浮变色" class="headerlink" title="悬浮变色"></a>悬浮变色</h3><ul>
<li>鼠标悬浮时该行改变背景色</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#efefef</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="自适应优化"><a href="#自适应优化" class="headerlink" title="自适应优化"></a>自适应优化</h2><p>表格用 Markdown 书写，编辑器解析，因而只能在已经生成好的代码上进行自适应优化。</p>
<h3 id="表头不换行"><a href="#表头不换行" class="headerlink" title="表头不换行"></a>表头不换行</h3><ul>
<li>设置表头单元格内容不换行，这样可以通过表头控制该列的最小宽度，避免浏览器窗口缩小时内容被压缩得太紧</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap; <span class="comment">/*表头内容强制在一行显示*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="首列不换行"><a href="#首列不换行" class="headerlink" title="首列不换行"></a>首列不换行</h3><ul>
<li>表格第一列单元格内容不换行，多数情况下表格首列不应该被压缩换行</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">td</span><span class="selector-pseudo">:nth-child(1)</span> &#123;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="表格滚动条"><a href="#表格滚动条" class="headerlink" title="表格滚动条"></a>表格滚动条</h3><ul>
<li>添加 JavaScript 代码，用一个 <code>&lt;div&gt;</code> 把表格包裹起来，父元素宽度不足时显示横向滚动条，避免表格撑破布局</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[].slice.call(<span class="built_in">document</span>.querySelectorAll(<span class="string">'table'</span>)).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">el</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> wrapper = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">    wrapper.className = <span class="string">'table-area'</span>;</span><br><span class="line">    el.parentNode.insertBefore(wrapper, el);</span><br><span class="line">    el.parentNode.removeChild(el);</span><br><span class="line">    wrapper.appendChild(el);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<ul>
<li>jQuery</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"table"</span>).wrap(<span class="string">"&lt;div class='table-area'&gt;&lt;/div&gt;"</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li>同时添加如下 CSS</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.table-area</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h2><p>在线编辑<br><a href="https://www.gitbook.com/" target="_blank" rel="external">gitbook</a></p>
<p>新手指南<br><a href="http://www.jianshu.com/p/21d355525bdf" target="_blank" rel="external">Markdown入门学习小结</a><br><a href="http://www.jianshu.com/p/7bd23251da0a#" target="_blank" rel="external">Markdown 简明教程</a><br><a href="http://markdown.tw/" target="_blank" rel="external">Markdown語法說明（繁體中文版）</a><br><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown 语法说明（简体中文版）</a><br><a href="http://zh.wikipedia.org/wiki/Wikipedia:%E9%A6%96%E9%A1%B5" target="_blank" rel="external">维基百科</a>：<a href="http://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="external">Markdown词条</a></p>
<p><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a><br><a href="http://www.jianshu.com/p/05289a4bc8b2#" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></p>
<p><a href="http://www.jianshu.com/users/yZq3ZV/latest_articles" target="_blank" rel="external">简书</a>：<a href="http://www.jianshu.com/p/q81RER" target="_blank" rel="external">献给写作者的 Markdown 新手指南</a><br><a href="https://twitter.com/liruyi" target="_blank" rel="external">Lawrence Li</a>：<a href="http://www.jianshu.com/p/qqGjLN" target="_blank" rel="external">为什么作家应该用 Markdown 保存自己的文稿</a><br><a href="http://weibo.com/ouyangzhiping" target="_blank" rel="external">阳志平</a>：<a href="http://www.jianshu.com/p/PpDNMG" target="_blank" rel="external">「Markdown写作浅谈」</a><br><a href="http://www.douban.com/people/casa_nova/" target="_blank" rel="external">Casa Nova</a>：<a href="http://www.douban.com/note/221187015/" target="_blank" rel="external">為什麼文科生也該用markdown寫作?</a><br><a href="http://www.jianshu.com/users/faa44ac9e895/latest_articles" target="_blank" rel="external">Gnat</a>：<a href="http://www.jianshu.com/p/7bd23251da0a" target="_blank" rel="external">Markdown 简明教程</a><br><a href="http://www.jianshu.com/users/faa44ac9e895/latest_articles" target="_blank" rel="external">Gnat</a>：<a href="http://www.jianshu.com/p/3bd994e702a7" target="_blank" rel="external">Markdown 写作规范参考</a><br><a href="http://www.jianshu.com/users/ea86ff9520da/latest_articles" target="_blank" rel="external">Te_Lee</a>：<a href="http://www.jianshu.com/p/1e402922ee32" target="_blank" rel="external">Markdown——入门指南</a><br><a href="http://www.jianshu.com/users/a3365067ff28/latest_articles" target="_blank" rel="external">怀瑾握瑜</a>：<a href="http://www.jianshu.com/p/0752bd0418df" target="_blank" rel="external">Markdown语法纪要</a><br><a href="http://www.jianshu.com/users/7e669eb8f84f/latest_articles" target="_blank" rel="external">唐衣可俊</a>：<a href="http://www.jianshu.com/p/9d94660a96f1" target="_blank" rel="external">MarkDown使用小技巧</a><br><a href="http://www.ituring.com.cn/users/81963" target="_blank" rel="external">温谦</a>：<a href="http://www.ituring.com.cn/article/23" target="_blank" rel="external">怎样使用Markdown</a><br><a href="http://home.cnblogs.com/u/hnrainll/" target="_blank" rel="external">Leo Chin </a>：<a href="http://www.cnblogs.com/hnrainll/p/3514637.html" target="_blank" rel="external">Markdown 11种基本语法</a><br><a href="http://equation85.github.io/" target="_blank" rel="external">Equation 85</a>：<a href="http://equation85.github.io/blog/markdown-examples/" target="_blank" rel="external">Markdown语法示例</a></p>
<p>Markdown 免费编辑器</p>
<p>在线编辑器<br><a href="http://mahua.jser.me/" title="小众软件推荐，界面有些简陋" target="_blank" rel="external">MaHua</a><br><a href="http://dillinger.io/" title="漂亮强大，支持md, html, pdf 文件导出。支持dropbox, onedrive，google drive, github. 来自国外，可能不够稳定。" target="_blank" rel="external">Dillinger.io</a><br><a href="http://markable.in/" title="一个显著的markdown编辑器" target="_blank" rel="external">Markable.in</a><br><a href="http://marxi.co/" title="马克飞象" target="_blank" rel="external">marxi</a></p>
<p>浏览器插件<br><a href="https://chrome.google.com/webstore/detail/oknndfeeopgpibecfjljjfanledpbkog" title="Chrome" target="_blank" rel="external">MaDe</a></p>
<p>Windows 平台<br><a href="https://atom.io/" target="_blank" rel="external">GitHub Atom</a><br><a href="http://markdownpad.com/" target="_blank" rel="external">MarkdownPad</a><br><a href="http://code52.org/DownmarkerWPF/" target="_blank" rel="external">MarkPad</a></p>
<p>Linux 平台<br><a href="http://sourceforge.net/p/retext/home/ReText/" target="_blank" rel="external">ReText</a></p>
<p>Mac 平台<br><a href="http://mouapp.com/" target="_blank" rel="external">Mou</a></p>
<p>高级应用(Sublime Text 2 + MarkdownEditing 教程)<br><a href="http://www.sublimetext.com/2" target="_blank" rel="external">Sublime Text 2</a><br><a href="http://ttscoff.github.com/MarkdownEditing/" target="_blank" rel="external">MarkdownEditing</a><br><a href="http://lucifr.com/2012/07/12/markdownediting-for-sublime-text-2/" target="_blank" rel="external">教程</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Google 搜索技巧]]></title>
      <url>http://blog.xheartx.com/2016/01/23/2016-01-23-googleSearchSkill/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-23-01.png" alt="Google 搜索"></p>
<p>作为一个IT工程师或程序员，熟悉下面的搜索技巧很必要。当你熟悉使用这些技巧后，就会明白百度和google不是一个级别的。百度永远超越不了google。</p>
<blockquote>
<p>使用的前提：你进的去 → <a href="https://www.google.com.hk/" target="_blank" rel="external">Google.com</a></p>
</blockquote>
<a id="more"></a>
<h1 id="搜索运算符"><a href="#搜索运算符" class="headerlink" title="搜索运算符"></a>搜索运算符</h1><h2 id="双引号（””）"><a href="#双引号（””）" class="headerlink" title="双引号（””）"></a>双引号（””）</h2><p>如果你很明确你想要找什么，给你的搜索关键词加上双引号，这样，搜索引擎会严格地按照你输入的内容查找相关的结果。甚至，比如你输入的是 “易烊千玺 最帅” 这样的关键词，Google 也会严格地按照关键词的先后顺序查找网页内容，只有「易烊千玺」先出现，「最帅」后出现的内容才会出现在结果中，而像「最帅的是易烊千玺」这样的结果则不会出现。</p>
<h2 id="星号（-）"><a href="#星号（-）" class="headerlink" title="星号（*）"></a>星号（*）</h2><p>如果你想搜索的内容中，有一些部分你不能完全确定，比如最常见的情况，在路边听到的某首歌，只记住了零星的歌词，或者是听别人口头跟你说的东西，但是东北腔、福建腔太重时，你可能没听懂一些关键词，这时候星号就派上用场了。</p>
<p>还记得当年红遍大江南北的「骑李湘」吗？你感觉你听到了一句「爽歪的麻雀在电线杆上裸睡」，其实如果你搜索「 * 的麻省在电线杆上 * 」还是能找到正确结果的。</p>
<h2 id="短横（-）"><a href="#短横（-）" class="headerlink" title="短横（-）"></a>短横（<strong>-</strong>）</h2><p>比如，如果你是苹果日报的忠实读者，却不知道从哪一天起，搜索「苹果」铺天盖地的都是 iPhone 和苹果公司的结果，这时候该怎么报？试试看「苹果 <strong>-</strong> 手机」，这样就可以找到只含有「苹果」，但绝不含「手机」的结果了。</p>
<h1 id="高级搜索"><a href="#高级搜索" class="headerlink" title="高级搜索"></a>高级搜索</h1><h2 id="site"><a href="#site" class="headerlink" title="site"></a>site</h2><p>通过添加 site 关键词，你可以指定从哪个网站上搜索你想要的结果。少数派的站内搜索，其实只能针对标题中的关键词进行搜索，而正文中或者在 Matrix 中如果出现过相关的内容，则搜索不到。</p>
<p>比如我们经常会在网盘查东西，在查找文件时，想看看咋在百度网盘里有没有？不妨试试用 Google 搜索「文件 site:pan.baidu.com」。</p>
<h2 id="link"><a href="#link" class="headerlink" title="link"></a>link</h2><p>“link”语法返回所有链接到某个URL地址的网页。</p>
<p>示例：搜索所有含指向华军软件园“www.newhua.com”链接的网页。<br>搜索：“link:www.newhua.com”</p>
<blockquote>
<p>注意：“link”不能与其他语法相混合操作，所以“link:”后面即使有空格，也将被GOOGLE忽略。</p>
</blockquote>
<h2 id="inurl"><a href="#inurl" class="headerlink" title="inurl"></a>inurl</h2><p>inurl语法返回的网页链接中包含第一个关键字，后面的关键字则出现在链接中或者网页文档中。有很多网站把某一类具有相同属性的资源名称显示在目录名称或者网页名称中，比如“MP3”、“GALLARY”等，于是，就可以用INURL语法找到这些相关资源链接，然后，用第二个关键词确定是否有某项具体资料。INURL语法和基本搜索语法的最大区别在于，前者通常能提供非常精确的专题资料。</p>
<p>示例：查找MIDI曲“沧海一声笑”。<br>搜索：“inurl:midi 沧海一声笑”</p>
<p>示例：查找微软网站上关于windows2000的安全课题资料。<br>搜索：“inurl:security windows2000 site:microsoft.com”</p>
<blockquote>
<p>注意：“inurl:”后面不能有空格，GOOGLE也不对URL符号如“/”进行搜索。GOOGLE对“cgi-bin/phf”中的“/”当成空格处理。</p>
</blockquote>
<h2 id="allinurl"><a href="#allinurl" class="headerlink" title="allinurl"></a>allinurl</h2><p>allinurl语法返回的网页的链接中包含所有查询关键字。这个查询的对象只集中于网页的链接字符串。</p>
<p>示例：查找可能具有PHF安全漏洞的公司网站。通常这些网站的CGI-BIN目录中含有PHF脚本程序（这个脚本是不安全的），表现在链接中就是“域名/cgi-bin/phf”。<br>语法：“allinurl:”cgi-bin” phf +com”</p>
<p>allintitle和intitle的用法类似于上面的allinurl和inurl，只是后者对URL进行查询，而前者对网页的标题栏进行查询。网页标题，就是HTML标记语言title中之间的部分。网页设计的一个原则就是要把主页的关键内容用简洁的语言表示在网页标题中。因此，只查询标题栏，通常也可以找到高相关率的专题页面。</p>
<p>示例：查找日本明星藤原纪香的照片集。<br>搜索：“intitle:藤原纪香 写真”</p>
<h2 id="related"><a href="#related" class="headerlink" title="related"></a>related</h2><p>related用来搜索结构内容方面相似的网页。例：搜索所有与中文新浪网主页相似的页面（如网易首页，搜狐首页，中华网首页等），“related:www.sina.com.cn/index.shtml”。</p>
<h2 id="cache"><a href="#cache" class="headerlink" title="cache"></a>cache</h2><p>cache用来搜索GOOGLE服务器上某页面的缓存，这个功能同“网页快照”，通常用于查找某些已经被删除的死链接网页，相当于使用普通搜索结果页面中的“网页快照”功能。</p>
<h2 id="info"><a href="#info" class="headerlink" title="info"></a>info</h2><p>info用来显示与某链接相关的一系列搜索，提供cache、link、related和完全包含该链接的网页的功能。</p>
<p>示例：查找和新浪首页相关的一些资讯。<br>搜索：“info:www.sina.com.cn”</p>
<h1 id="其它搜索技巧"><a href="#其它搜索技巧" class="headerlink" title="其它搜索技巧"></a>其它搜索技巧</h1><h2 id="强制搜索"><a href="#强制搜索" class="headerlink" title="强制搜索"></a>强制搜索</h2><p>GOOGLE对一些网路上出现频率极高的词（主要是英文单词），如“i”、“com”，以及一些符号如“*”、“.”等，作忽略处理，如果用户必须要求关键字中包含这些常用词，就要用强制语法“<strong>+</strong>”。</p>
<p>示例：搜索包含“Who am I ?”的网页。如果用“”who am i ?””，“Who”、“I”、“?”会被省略掉，搜索将只用“am”作关键字，所以应该用强制搜索。<br>搜索：“”+who +am +i””</p>
<blockquote>
<p>注意：英文符号（如问号，句号，逗号等）无法成为搜索关键字，加强制也不行。</p>
</blockquote>
<h2 id="indexof-inurl"><a href="#indexof-inurl" class="headerlink" title="indexof / inurl"></a>indexof / inurl</h2><p>在搜索框上输入“inurl:pdf ecommerce”<br>再按搜索你就可以找到关于电子商务（ECOMMERCE）的PDF文档。</p>
<p>在搜索框上输入：“indexof/”inurl:lib<br>再按搜索你将进入许多图书馆，并且一定能下载自己喜欢的书籍。</p>
<p>在搜索框上输入：“indexof/”cnki<br>再按搜索你就可以找到许多图书馆的CNKI、VIP、超星等入口！</p>
<p>在搜索框上输入：“indexof/”ppt<br>再按搜索你就可以突破网站入口下载powerpint作品！</p>
<p>在搜索框上输入：“indexof/”mp3<br>再按搜索你就可以突破网站入口下载mp3、rm等影视作品！</p>
<p>在搜索框上输入：“indexof/”swf<br>再按搜索你就可以突破网站入口下载flash作品！</p>
<p>在搜索框上输入：“indexof/”要下载的软件名<br>再按搜索你就可以突破网站入口下载软件！</p>
<blockquote>
<p>注意引号应是英文的！ 我使用最多的是inurl:参数</p>
</blockquote>
<h2 id="用Google看世界"><a href="#用Google看世界" class="headerlink" title="用Google看世界!"></a>用Google看世界!</h2><p>用Google看世界!!! 只要你在GOOGLE里输入特殊的关键字,就可以搜到数千个摄象头的IP地址!通过他你就可以看到其所摄的实时影象!!</p>
<p>在Google里输入</p>
<p>inurl:”viewerframe?mode=”</p>
<p>随便打开一个,然后按提示装一个插件,就可以看到了!!!</p>
<h2 id="黑客的Google搜索技巧"><a href="#黑客的Google搜索技巧" class="headerlink" title="黑客的Google搜索技巧"></a>黑客的Google搜索技巧</h2><p>大家都知道，Google毫无疑问是当今世界上最强大的搜索引擎。然而，在黑客手中，它也是一个秘密武器，它能搜索到一些你意想不到的信息。我把他们进行了简单的总结不是希望您利用他去攻击别人的网站，而是利用这些技巧去在浩如烟海的网络信息中，来个大海捞针，寻找到对您有用的信息。</p>
<p>如果您是一名普通网民，您可以使用黑客的技巧扩大自己的视野，提高自己的检索效率；如果您是一名网管，请您赶快看看您的网站是否做好了对下面黑客探测手 段的防范措施，如果没有就赶快来个亡羊补牢，毕竟隐患胜于明火，防范胜于救灾.</p>
<p>搜索URL</p>
<p>比如我们提交这种形式：passwd.txtsite:virtualave.net</p>
<p>看到了什么？是不是觉得太不可思议了！有很多基于CGI/PHP/ASP类型的留言板存在这种问题。有时我们得到密码甚至还是明码的！管理员或许太不负责了，或许安全防范的意识太差了，如果你是网络管理员，赶快检查一下不要让恶意攻击者捡了便宜。不要太相信DES加密，即使我们的密码经过DES加密的密 码，黑客们还是可以通过许多破解软件来搞定。</p>
<p>这次我们能得到包含密码的文件。“site:virtualave.net”意思是只搜索virutalave.net的URL。virutalave.net是一个网络服务器提供商。</p>
<p>搜索特定的文件类型</p>
<p>比如你想指定一种文件的类型，可以提交如下形式：</p>
<p>filetype:.docsite:.milclassified</p>
<p>这个就是搜索军方的资料，你可以自定义搜索。</p>
<h1 id="Google的特殊功能"><a href="#Google的特殊功能" class="headerlink" title="Google的特殊功能"></a>Google的特殊功能</h1><h2 id="查询电话号码"><a href="#查询电话号码" class="headerlink" title="查询电话号码"></a>查询电话号码</h2><p>Google的搜索栏中最新加入了电话号码和美国街区地址的查询信息。</p>
<p>个人如想查找这些列表，只要填写姓名，城市和省份。</p>
<p>如果该信息为众人所知，你就会在搜索结果页面的最上方看到搜索的电话和街区地址</p>
<p>你还可以通过以下任何一种方法找到该列表：</p>
<p>名字（或首位大写字母），姓，电话地区号</p>
<p>名字（或首位大写字母），姓，邮递区号</p>
<p>名字（或首位大写字母），姓，城市（可写州）</p>
<p>名字（或首位大写字母），姓，州</p>
<p>电话号码，包括区号</p>
<p>名字，城市，州</p>
<p>名字，邮递区号</p>
<h2 id="随手查股票"><a href="#随手查股票" class="headerlink" title="随手查股票　"></a>随手查股票　</h2><p>Google 可以帮你查 A 股、港股、美股等各种股票，你只需要输入股票代码，不管是像 A 股的数字代码「600280」，还是美股中的爸爸「BABA」，股价就会实时闪现。</p>
<p>用Google查找股票和共有基金信息，只要输入一个或多个NYSE，NASDAQ，AMEX或</p>
<p>共有基金的股票行情自动收录机的代码，也可以输入在股市开户的公司名字。</p>
<p>如果Google识别出你查询的是股票或者共有基金，它回复的链接会直接连到高质量的金融信息提供者提供的股票和共有基金信息。</p>
<p>在你搜索结果的开头显示的是你查询的股市行情自动收录器的代码。如果你要查找一家公司的名字（比如，INTEL），请查看“股票报价”在Google搜索结果的金融栏里会有那个公司的主页的链接（比如， www. INTEL. COM）。</p>
<p>Google是以质量为基础来选择和决定金融信息提供者的，包括的因素有下载速度，用户界面及其功能。</p>
<h2 id="随手计算器"><a href="#随手计算器" class="headerlink" title="随手计算器　"></a>随手计算器　</h2><p>想打开 Windows 自带的计算器，还要去开始菜单里苦苦找寻？不如直接在 Google 搜索栏输入「计算器」，一个简易的科学计算器就蹦出来啦。</p>
<p>如果你直接搜索一些函数表达式，Google 甚至可以用图形帮你画出来</p>
<h2 id="单位换算"><a href="#单位换算" class="headerlink" title="单位换算　"></a>单位换算　</h2><p>日常生活里，总是会遇到各类换算，如面积、温度、汇率、时间等等，你可以直接试着输入你想换算的两个量纲，Google 会自动提供换算功能。</p>
<h2 id="查单词、做翻译"><a href="#查单词、做翻译" class="headerlink" title="查单词、做翻译　"></a>查单词、做翻译　</h2><p>在搜索关键词前加上「定义」或「翻译」，Google 就可以帮你查单词或做翻译。不过，如果 Google 使用的是中文语言，查单词会直接使用 wiki，这样会导致无论是释义还是词库都非常不完备。推荐使用英文语言的 Google 并配合「define 关键词」，无论是释义还是词库都更加完善。</p>
<h2 id="Google-学术搜索"><a href="#Google-学术搜索" class="headerlink" title="Google 学术搜索　"></a>Google 学术搜索　</h2><p>相信在外留学的人，没有人不用 scholar.google.com，不管你是要写论文还是要查证一些权威资料，Google 的学术搜索都是你的最佳助手。你可以通过它找到各类论文、引文、出处及作者的相关信息，部分论文甚至提供在线的全文查看。</p>
<p>Google 学术搜索不仅最大可能地索引了全球的论文期刊，其搜索结果的排序，也是按照论文的相关度、发表期刊、作者、影响因子等权重进行排名的。</p>
<p>此外，它还有一个非常贴心好用的小功能：一键帮你生成引用，你可以很方便地粘贴到自己的论文脚注中。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Win8.1 Office2016 Office2013 电话激活教程]]></title>
      <url>http://blog.xheartx.com/2016/01/20/2016-01-20-win-active/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-20-01.png" alt="Win8.1 Office2016 Office2013 电话激活教程"></p>
<blockquote>
<p>“工欲善其事，必先利其器。居是邦也，事其大夫之贤者，友其士之仁者。”<br>                                     ——孔子（春秋）《论语·卫灵公》</p>
</blockquote>
<p>要想做好工作首先要有一个清爽的运行环境。到官网下载的系统，都会遇到激活的难题，网上找的各种软件早已被木马病毒侵蚀，所以我特意研究了下这种安全永久的方法，可能比较麻烦，还需要打国际长途，但是有网络电话没关系，过程是挺有意思的，一场折腾下来英语听力也长进不少。<br>在这里就总结下具体方法以便备用。</p>
<a id="more"></a>
<h1 id="使用官方镜像，远离流氓捆绑软件"><a href="#使用官方镜像，远离流氓捆绑软件" class="headerlink" title="使用官方镜像，远离流氓捆绑软件"></a>使用官方镜像，远离流氓捆绑软件</h1><iframe height="318" width="510" src="http://player.youku.com/embed/XNjE0NTY3NzQ4" frameborder="0" allowfullscreen></iframe>

<p>暂不谈电脑硬件配置，大多数windows电脑变慢，跟国产流氓软件有很大关系。<br>国内一大帮流氓网站，发布的所谓纯净版windows系统光盘镜像，其实捆绑了大量国产垃圾软件。有些是根本卸载不干净的，所以推荐到微软官网下载最新镜像文件，但是激活就又是一个问题了，网上有很多一键激活，诸如 <em>小马激活</em> 等软件，很方便点一下就好，但是网上搜到的基本上都是伪装之后的木马，使用之后在你跟不察觉不到的情况下，会在后台做一些事情，非常的危险，所以在这里我推荐一种标准的，无需修改系统文件，安全无毒永久激活的方法，虽然有些麻烦，但是为了一个原版的安全原汁原味的系统，我觉得还是比较值得的。以激活WIN8.1为例，其他激活方法相同。<br>当然对于土豪级别的：<strong>请直接购买正版授权，支持正版！</strong></p>
<h1 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h1><p>使用电话激活Win8.1系统，我们需要准备：</p>
<ul>
<li>Skype 网络电话软件 </li>
<li>VPN工具 </li>
<li>KEY 激活密匙 </li>
</ul>
<h1 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h1><h2 id="替换系统密钥"><a href="#替换系统密钥" class="headerlink" title="替换系统密钥"></a>替换系统密钥</h2><p>首先利用命令替换系统密钥，按下Win + X，打开命令提示符（管理员），输入<code>slmgr.vbs -ipk KEY</code> 回车 安装或者替换密钥。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-20-02.png" alt="替换系统密钥"></p>
<h2 id="判断激活密钥是否有效"><a href="#判断激活密钥是否有效" class="headerlink" title="判断激活密钥是否有效"></a>判断激活密钥是否有效</h2><p>电话激活前请务必先测试KEY是否有效，省的浪费时间。如果确认密钥有效，那就请跳过此步骤。</p>
<p>打开命令提示符：管理员，Win+X+A（即以管理员身份运行CMD），依次输入以下命令：<br>注：鼠标右键复制粘贴上去即可<br>    slmgr/upk<br>    slmgr -ipk xxxxx-xxxxx-xxxxx-xxxxx-xxxxx（注：XXXX代表密钥）<br>    slmgr/ato<br>在最后一个命令弹出的窗口中若提示：</p>
<blockquote>
<p>错误代码：0XC004C008 或 0XC004C020，<br>错误描述：激活服务器报告产品密钥已超过其解锁限制。<br>错误描述：激活服务器报告多次激活密钥已超过其限制。</p>
</blockquote>
<p>此为可以电话激活的提示。<br>其它提示都不保证可以电话激活。</p>
<h2 id="获取安装ID"><a href="#获取安装ID" class="headerlink" title="获取安装ID"></a>获取安装ID</h2><p>输入slui 4回车打开电话激活界面，国家或地区选择英国，点击下一步；得到你的安装ID，将ID抄写在记事本上或截个图，待会打电话时要输入这个安装ID。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-20-03.png" alt="安装ID"></p>
<h2 id="用-Skype-拨打电话"><a href="#用-Skype-拨打电话" class="headerlink" title="用 Skype 拨打电话"></a>用 Skype 拨打电话</h2><p>先链接上VPN（不然电话打不通），用 Skype 拨打英国电话 +448000188354.</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-20-04.png" alt="拨打英国电话"></p>
<blockquote>
<p>这里打电话最近又有另一种方法，无需vpn的，我没试过，有兴趣了可以试试。<br>使用荷属圣马丁电话激活：（无需VPN，无需验证，美式英语）<br>skype直拨号码：+18663220524*</p>
</blockquote>
<h2 id="电话内容"><a href="#电话内容" class="headerlink" title="电话内容"></a>电话内容</h2><p>接下来就会有对话，要求输入验证，全程都是英语交流，系统录音非真人;<br>然后你会听到下面的内容，你要做得就是电脑操作：<br>以下教程为英国电话激活的通话过程翻译，如果实在听不懂语音内容，可每隔2至3秒按照教程的红字顺序进行按键操作</p>
<blockquote>
<p>Thank you for calling Microsoft. For security purposes, please enter the following number using your touch phone pad. Please enter the number, XXX</p>
</blockquote>
<p>（感谢致电微软，为了安全，请输入接下来的数字，请输入数字XXX）<br>如果<strong>输入数字</strong>正确，则输入完后一秒钟后</p>
<blockquote>
<p>Thank you, success. Please hold while I transfer you to our activation system.</p>
</blockquote>
<p>(谢谢，验证通过。请不要挂机，我将转接你到我们的激活系统)<br>若输错三次，则有以下的回馈</p>
<blockquote>
<p>Unfortunately, you are unable to verify. Please call back and try again.</p>
</blockquote>
<p>（对不起，验证失败，请重新拨打)<br>接下来是女声：</p>
<blockquote>
<p>Welcome to Microsoft Product Activation.</p>
</blockquote>
<p>（欢迎来到微软产品激活中心）</p>
<blockquote>
<p>Please press 1 as a home user, and 2 if you are a business customer with a volume license agreement.</p>
</blockquote>
<p>(家庭用户请按1，企业用户请按2）<br>家庭用户按1，企业用户按2(企业用户会比家庭用户多一步，下面加【】括号部分就是多出来的部分)</p>
<p>【 Some business licenses require activation. If you want to activate your Microsoft products, press 1. To activate remote desktop or terminal services product, please press 2. If you require a volume license key for your licensing agreement, please press 3. For question related to the volume license service center, press 4. To help us to process your enquiry, please have all valuable agreement information to hang, such as your agreement and organization number, and also your live ID.<br>(一些企业用户需要激活。如果要激活你的Microsoft产品，请按1。远程桌面或者终端服务的产品，请按2。需要一个批量授权的密钥加进你正在使用的授权许可，请按3。与批量授权服务中心有关的问题，请按4。如果你需要我们帮助你进行咨询，请提供所有有用的许可信息，比如说你的许可或是组织编号，以及你的授权ID)。】<br><strong>按1</strong></p>
<blockquote>
<p>To proceed you need ……installation ID that several blocks with six or seven digits, and it displayed in the activation window on your screen. Press 1 if you have the installation ID available, if not, press 2.</p>
</blockquote>
<p>(要继续，你需要找到你的安装ID，它是由6-7个数字 组成的一些分组，显示在你屏幕的激活窗口中。如果你有安装ID，请按1；否则请按2。)<br><strong>按1</strong> </p>
<blockquote>
<p>If you want to activate Microsoft products, press 1 now. To activate office for Mac, press 2.</p>
</blockquote>
<p>(如果你要激活微软产品，请按 1。如果你想激活苹果系统上的 office，请按 2。)<br><strong>按1</strong></p>
<blockquote>
<p>To make things easier for you, we offer to activate your product using a smart phone……..To enter the number ….press 1, if you don’t have a smart phone, press 2…</p>
</blockquote>
<p>（说明性语言，此处只翻译关键性操作。）<br>(为了更方便地激活你的产品，我们提供智能手机激活方式，输入您的手机号码即可，。。(略)。。如果你有智能手机请按1，否则请按2。)<br>这里不管有没有智能手机，都选2。否则要输入手机号。</p>
<blockquote>
<p>To activate your product, you must have your installation numbers from your activation wizard on your computer screen.</p>
</blockquote>
<p>（要激活你的产品，你必须有安装ID）<br>中间一段说明省略。。。</p>
<blockquote>
<p>If you have your ID to hand and are ready to proceed, please press the hash key.</p>
</blockquote>
<p>（如果有安装ID，并且准备好继续，请按 #号键）<br><strong>按#</strong></p>
<blockquote>
<p>To repeat this message, press the star key.</p>
</blockquote>
<p>（重复请按 *号键）</p>
<blockquote>
<p>Please enter the first group now.</p>
</blockquote>
<p><strong>请输入第一组数字</strong></p>
<blockquote>
<p>Thank you! And the second group</p>
</blockquote>
<p>谢谢，<strong>请输入第二组数字</strong></p>
<blockquote>
<p>Thank you! And the third group</p>
</blockquote>
<p>谢谢，<strong>请输入第三组数字</strong></p>
<blockquote>
<p>Thank you! And the fourth group</p>
</blockquote>
<p>谢谢，<strong>请输入第四组数字</strong></p>
<blockquote>
<p>Thank you! And the fifth group</p>
</blockquote>
<p>谢谢，<strong>请输入第五组数字</strong></p>
<blockquote>
<p>Thank you! And the sixth group</p>
</blockquote>
<p>谢谢，<strong>请输入第六组数字</strong></p>
<blockquote>
<p>Thank you! And the Seventh group</p>
</blockquote>
<p>谢谢，<strong>请输入第七组数字</strong></p>
<blockquote>
<p>Thank you! Now enter the eighth group</p>
</blockquote>
<p>谢谢，现在，<strong>请输入第八组数字</strong></p>
<blockquote>
<p>Thank you! To finish, enter the final group</p>
</blockquote>
<p>谢谢，<strong>请输入最后一组数字</strong> 以完成输入</p>
<p>下面会出现3种情况:<br>(1) Key 失效的情况。</p>
<blockquote>
<p>We are unable to activate your product.</p>
</blockquote>
<p>（我们无法激活您的产品 ）</p>
<blockquote>
<p>It is possible that you are a victim of software piracy.</p>
</blockquote>
<p>（您可能是盗版软件的受害者。）</p>
<blockquote>
<p>In order to check if your product is original, please click on the web link microsoft.com/genuine.</p>
</blockquote>
<p>（查询 您的产品是否为正版，请登录网址 microsoft.com/genuine）</p>
<blockquote>
<p>To obtain the licensed product，please return to your Microsoft reseller.</p>
</blockquote>
<p>（获取合法的产品，请到您的微软经销商。）</p>
<blockquote>
<p>To repeat the message, please press the star key.</p>
</blockquote>
<p>（要重复信息，请按 *号键。）</p>
<blockquote>
<p>No entry was detected.</p>
</blockquote>
<p>（没有检测到信息输入）</p>
<blockquote>
<p>We are now ending your call.</p>
</blockquote>
<p>（现在我们将结束您的通话）<br>(2) Key 有效的情况</p>
<blockquote>
<p>On how many computers is your product currently installed?</p>
</blockquote>
<p>（您的激活密钥安装在了几台电脑上？）</p>
<blockquote>
<p>Press one if you have installed this product on one computer.</p>
</blockquote>
<p>（如果您把这个密钥安装在一台电脑上，请按1）</p>
<blockquote>
<p>Press two if you have install this product on more than one computer.</p>
</blockquote>
<p>（如果您把这个密钥安装在多台电脑上，请按2）<br><strong>按1</strong></p>
<blockquote>
<p>We will now continue to activate your product.</p>
</blockquote>
<p>(现在，我们将继续以激活您的产品)</p>
<blockquote>
<p>Your entry was accepted, now you will hear the confirmation ID readout.</p>
</blockquote>
<p>（你输入的数据已验证完毕，现在你将听到 激活ID）</p>
<blockquote>
<p>Starting with block A.</p>
</blockquote>
<p>（从A组开始）</p>
<blockquote>
<p>Please either insert this number into the empty blocks at the bottom of your activation wizard, or write this number down for immediate entry into the activation wizard at the end of this call.</p>
</blockquote>
<p>（请为您激活向导底部的空格内插入这些数字；或者记下这些数字，在通话结束时立即进入激活向导。）</p>
<blockquote>
<p>To hear this message again, please press the star key. For help, press 0.</p>
</blockquote>
<p>（重听请按 *号键。如需帮助，请按0）<br>此步如果自己不能一时间很好的翻译出来的话可以进行录音<br>听激活ID过程如果自己不进行任何按键操作的话，则激活系统会将一组ID读两遍，但等待时间较长</p>
<blockquote>
<p>Here is Block A <strong>**</strong></p>
</blockquote>
<p>A组数字<br>*记下A组数字</p>
<blockquote>
<p>To continue press the hash key. To repeat the last block press the star key.</p>
</blockquote>
<p>（要继续收听下一组请按 #号键；重听请按 <em>号键）<br>Block B <strong>**</strong><br>B组数字
</em>记下B组数字</p>
<blockquote>
<p>To continue press the hash key. To repeat the last block press the star key.</p>
</blockquote>
<p>（要继续收听下一组请按 #号键；重听请按 *号键）<br>。。。。。。 。。。。。。 。。。。。。（略）</p>
<blockquote>
<p>Block H <strong>*</strong></p>
</blockquote>
<p>H组数字<br>*记下H组数字</p>
<blockquote>
<p>To continue press the hash key. To repeat the last block press the star key.</p>
</blockquote>
<p>（要继续收听下一组请按 #号键；重听请按 *号键）</p>
<blockquote>
<p>To complete, click the next button at the bottom of your activation window, then click finish.</p>
</blockquote>
<p>(要完成激活，请在您激活窗口的底部，单击“下一步”按钮，然后单击“完成”)</p>
<blockquote>
<p>If you wish to hear your entire confirmation ID again, press 1.</p>
</blockquote>
<p>（如果你*想再听一遍你的激活ID，请按1）</p>
<blockquote>
<p>Otherwise, thank you for calling Microsoft. Goodbye.</p>
</blockquote>
<p>（感谢您致电微软，再见！）</p>
<p>(3) Key有效，但是你选错License Agreement了，或者你自己已经打过一次电话了</p>
<blockquote>
<p>The installation number was not verify. You will be transfer to the next valuable agent.</p>
</blockquote>
<p>(你所提供的序列号不能被我们确认。你将会被转到人工客服)<br>这种情况有两种可能：<br>a.一种是选错License Agreement，你还可以重打一次电话，搞清楚你的是VL的还是非VL的还是Enterprise的。<br>b.另一种便很不幸，你不能够用同一个installation（安装） ID打两次电话。只能用另外一个有效的Key，或者通过屏蔽一下部分硬件使安装 ID 改变，或者重装一遍系统。</p>
<h2 id="写入确认ID并激活产品"><a href="#写入确认ID并激活产品" class="headerlink" title="写入确认ID并激活产品"></a>写入确认ID并激活产品</h2><p>直接点下一步，直到输入确认ID界面，然后输入你刚刚得到的ID，单击 激活。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-20-05.jpg" alt="激活产品"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 问题汇总]]></title>
      <url>http://blog.xheartx.com/2016/01/15/2016-01-15-hexo-problem-summary/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-15-01.png" alt="Hexo 问题汇总"></p>
<blockquote class="blockquote-center"><br> <strong>生命在于折腾，不懂的善用搜索，来享受研究的乐趣吧！</strong><br><br></blockquote>

<a id="more"></a>
<h1 id="关于上传文件到github的方法"><a href="#关于上传文件到github的方法" class="headerlink" title="关于上传文件到github的方法"></a>关于上传文件到github的方法</h1><h2 id="首次提交"><a href="#首次提交" class="headerlink" title="首次提交"></a>首次提交</h2><p>在本地根目录打开<code>git bash</code> ：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line"></span><br><span class="line">git add .  </span><br><span class="line"></span><br><span class="line">git commit -m &quot;init&quot;</span><br><span class="line"></span><br><span class="line">git remote add origin git@git.coding.net:xheart/xheartx.git</span><br><span class="line"></span><br><span class="line">git push origin gh-pages</span><br></pre></td></tr></table></figure>
<h2 id="提交更新"><a href="#提交更新" class="headerlink" title="提交更新"></a>提交更新</h2><ul>
<li>如果上一次是同一台设备提交的，那就直接同首次提交方法一致</li>
<li>如果上一次是另一台设备提交的，那需要先将远程服务器github上面的文件 pull 下来，再 push 上去。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line"></span><br><span class="line">git remote add origin git@git.coding.net:xheart/xheartx.git</span><br><span class="line"></span><br><span class="line">git pull origin gh-pages</span><br><span class="line"></span><br><span class="line">git add .  </span><br><span class="line"></span><br><span class="line">git commit -m &quot;init&quot;</span><br><span class="line"></span><br><span class="line">git push origin gh-pages</span><br></pre></td></tr></table></figure>
<h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><p>如果执行<code>git remote add origin git@git.coding.net:xheart/xheartx.git</code>，出现错误：</p>
<blockquote>
<p>fatal: remote origin already exists </p>
</blockquote>
<p>则执行以下语句：</p>
<blockquote>
<p>git remote rm origin</p>
</blockquote>
<p>在执行git push origin master时，报错：</p>
<blockquote>
<p>error:failed to push som refs to…….</p>
</blockquote>
<p>则执行以下语句：</p>
<blockquote>
<p>git push origin gh-pages </p>
</blockquote>
<h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><p>创建一个本地分支gh-pages,并切换到该分支下</p>
<pre><code>git branch gh-pages
git checkout gh-pages
</code></pre><h1 id="git-push用法和常见问题分析"><a href="#git-push用法和常见问题分析" class="headerlink" title="git push用法和常见问题分析"></a>git push用法和常见问题分析</h1><h2 id="Git-push"><a href="#Git-push" class="headerlink" title="Git push"></a>Git push</h2><pre><code>git push origin test:master       // 提交本地test分支作为远程的master分支
git push origin test:test         // 提交本地test分支作为远程的test分支
</code></pre><p>如果想删除远程的分支呢？类似于上面，如果:左边的分支为空，那么将删除:右边的远程的分支。</p>
<pre><code>git push origin :test             // 刚提交到远程的test将被删除，但是本地还会保存的，不用担心。
</code></pre><p>提交到github时,如果不想每次都打这么多命令,可以进行这样的设置</p>
<pre><code>git push --set-upstream origin blog
#之后就用下面这个命令推送吧
git push
</code></pre><h2 id="hexo问题"><a href="#hexo问题" class="headerlink" title="hexo问题"></a>hexo问题</h2><ul>
<li>先hexo g再执行hexo d布署，也可使直接用hexo d -g</li>
<li>hexo 更新到3.0之后，deploy的type 的github需要改成git</li>
<li>在执行 hexo deploy 后,出现 error deployer not found:git 的错误处理</li>
</ul>
<p>输入代码：</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo+Github 搭建之路-进阶篇]]></title>
      <url>http://blog.xheartx.com/2016/01/10/2016-01-10-hexo-advanced-article/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-01.png" alt="Hexo+Github 搭建之路-进阶篇"></p>
<h1 id="hexo双线部署到github和coding"><a href="#hexo双线部署到github和coding" class="headerlink" title="hexo双线部署到github和coding"></a>hexo双线部署到github和coding</h1><p>如果只把hexo托管在github，但是毕竟github是国外的，访问速度上还是有点慢，所以就有了同时再部署到国内的coding，实现全球快速访问，通过域名解析可以把国内流量的解析到Coding，国外的解析到Github(这里可以用DNSPod的免费服务)。</p>
<a id="more"></a>
<h2 id="注册Coding账户并建立项目"><a href="#注册Coding账户并建立项目" class="headerlink" title="注册Coding账户并建立项目"></a>注册Coding账户并建立项目</h2><p>github的托管详情，请看<a href="/2016/01/06/hexo-personal-blog-from-Octopress-to-Hexo/">基础篇</a>。Coding托管的方法与github的类似，托管完成后，你可以手动删除Coding上的项目。具体如下：</p>
<p>去<a href="https://coding.net" target="_blank" rel="external">Coding的官网</a>注册，在个人主页的<code>项目</code>中创建一个项目，最好创建与你账户名相同的项目。例如，我的账户名为xheart, 创建的项目名为xheart（大小写不区分）。</p>
<h2 id="上传SSH文件"><a href="#上传SSH文件" class="headerlink" title="上传SSH文件"></a>上传SSH文件</h2><p>在Coding的个人主页的<code>账户</code>中，进入<code>SSH公钥</code>。添加你的公钥，如果你之前生成过，公钥在<code>C:\Users\你的用户名\.ssh\id_rsa.pub</code>。复制里面的内容在<code>SSH-RSA公钥内容</code>中即可。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-03.png" alt=""></p>
<p>打开<code>git bash</code>，输入</p>
<pre><code>ssh -T git@git.coding.net
</code></pre><p>进行测试，如果显示如下则SSH配置成功：</p>
<pre><code>Hello ...! You&apos;ve conected to Coding.net by SSH successfully!
</code></pre><h2 id="修改网站的配置文件"><a href="#修改网站的配置文件" class="headerlink" title="修改网站的配置文件"></a>修改网站的配置文件</h2><p>修改网站根目录下的配置文件<code>_config.yml</code>，找到<code>deploy</code>的设置处，改为如下：</p>
<pre><code>deploy:
  type: git
  repo: 
       github: https://xheartx@github.com/xheartx/xheartx.github.io.git
       coding: git@git.coding.net:xheart/xheart.git
  branch: master
</code></pre><p>注意要改成你的项目地址。</p>
<h2 id="将网站文件部署至Coding"><a href="#将网站文件部署至Coding" class="headerlink" title="将网站文件部署至Coding"></a>将网站文件部署至Coding</h2><p>在网站根目录下打开<code>git bash</code>，输入</p>
<pre><code>hexo g -d
</code></pre><p>进行网站文件的生成和部署。成功之后，进入你的Coding对应的项目中应该能看到网站文件。</p>
<h2 id="配置Coding的Page服务"><a href="#配置Coding的Page服务" class="headerlink" title="配置Coding的Page服务"></a>配置Coding的Page服务</h2><p>进入你在Coding上的项目，点击左侧的<code>代码</code>可以看到<code>Coding Pages</code>服务。输入分支为<code>master</code>，点击开启服务。在自定义域名处填上你的网站域名，如下图所示：</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-04.png" alt=""></p>
<hr>
<h1 id="注册及绑定自己的域名地址"><a href="#注册及绑定自己的域名地址" class="headerlink" title="注册及绑定自己的域名地址"></a>注册及绑定自己的域名地址</h1><p>将hexo部署至github及Coding之后，可以通过github或者Coding分配的pages二级域名来访问博客，比如username.github.io。但是对于一个强迫症患者，一个爱折腾的人，怎么可以就这样满足了，当然是要有一个自己的个性域名了，通过将自己的博客绑定至自己购买的域名可以更加方便的访问，下面将介绍如何购买一个域名及将自定义域名绑定至github。</p>
<h2 id="注册域名"><a href="#注册域名" class="headerlink" title="注册域名"></a>注册域名</h2><p>这里推荐<a href="https://www.namesilo.com/?rid=e509366fb" target="_blank" rel="external">namesilo</a>域名注册商，支付宝付款方便，赠送永久whois保护、免备案，赠送域名停靠业务，很多新鲜功能，免费给客户使用。不必再去godaddy这类国际域名商那里注册了，性价比不高。<br>详细教程请看：<a href="http://since1989.org/wordpress/namesilo-coupon-godaddy-domain-free.html" target="_blank" rel="external">namesilo免费注册账号、购买域名教程</a> ，输入优惠码还可优惠1美元。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-02.png" alt=""></p>
<blockquote>
<p>提醒：</p>
<ul>
<li>一定不要注册.cn域名，一定不要在国内万网注册域名。原因我就不多说了，国内的环境你们懂的。</li>
<li>域名注册首选.com ,其它的都是浮云。</li>
</ul>
</blockquote>
<h2 id="DNS域名解析设置"><a href="#DNS域名解析设置" class="headerlink" title="DNS域名解析设置"></a>DNS域名解析设置</h2><p>域名解析推荐NDSPod国际版，NDSPod的域名解析服务中，提供根据线路进行不同的路由的功能是免费的，NDSPod国内版本目前只对国内线路做细分，没有海外线路的选择，所以不推荐，建议用NDSPod的国际版。</p>
<p>操作流程：</p>
<ul>
<li>注册dnspod国际帐号<a href="https://www.dnspod.com/" target="_blank" rel="external">www.dnspod.com</a><br>域名服务商那里更改ns记录为dnspod国际版的nameserver，默认为</li>
</ul>
<blockquote>
<p>   a.dnspod.com.<br>   b.dnspod.com.<br>   c.dnspod.com.</p>
</blockquote>
<ul>
<li>在dnspod添加域名解析：</li>
</ul>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-05.png" alt=""></p>
<blockquote>
<p>注意：<br>A解析：只能填IP地址，IP地址如果换了的话就需要换解析记录<br>CNAME解析：解析到另一个域名，即使被指向的域名的ip发生变化，也不需要更改解析记录。<br>建议全都用CNAME解析，具体可参考我的设置。（由于我还添加了自己的二级域名，只看红框里的就行）<br>Value的地址后面一定要加.  ,比如：pages.coding.me. </p>
</blockquote>
<ul>
<li>Github自定义域名需要在项目根目录下添加一个CNAME文件，文件内容为自定义域名。CNAME文件创建完之后扔到blog/source目录下即可 (不能直接扔到public下!!)。<br>CNAME文件设置的目的是，通过访问 MyGithub.github.io 可以跳转到你所注册的域名上。</li>
<li>Coding需要在项目Coding Pages 服务中直接绑定自己的域名即可。</li>
<li>DNS域名解析设置需要一定时间，请耐心等待。</li>
</ul>
<hr>
<h1 id="使用七牛图床分流"><a href="#使用七牛图床分流" class="headerlink" title="使用七牛图床分流"></a>使用七牛图床分流</h1><p>本来图片放在本地的文件夹里也可以，但是github还是有存储空间限制的，而且这样网站加载也慢，所以用云存储商的云服务来作图床还可以加速，图片也不会丢。其实还有很多免费图床网站可以用，但是七牛的口碑比较哦好，比较稳定。所以决定用七牛了。</p>
<h2 id="注册七牛账号"><a href="#注册七牛账号" class="headerlink" title="注册七牛账号"></a>注册七牛账号</h2><p><a href="https://portal.qiniu.com/signup?code=3lmwk5kdtr1oy" target="_blank" rel="external">点此注册</a>，官网注册很简单，都是中文。没有账先去注册，实名认证之后就可以使用云存储服务了。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-06.png" alt=""></p>
<p> <strong>注意：</strong> 一定要选公开空间，不然别人访问不到</p>
<h2 id="七牛云插件上传"><a href="#七牛云插件上传" class="headerlink" title="七牛云插件上传"></a>七牛云插件上传</h2><ul>
<li><p>推荐chrome里七牛云存储的 <a href="https://chrome.google.com/webstore/detail/qiniu-upload-files/emmfkgdgapbjphdolealbojmcmnphdcc" target="_blank" rel="external">qiniu upload files</a> 插件</p>
<blockquote>
<p>七牛云插件,像使用桌面系统一样管理你的七牛云空间<br>支持拖拽上传，批量操作，文件处理等功能</p>
</blockquote>
</li>
<li><p>安装完成后，填写表单,内容七牛网站密匙管理里都有。</p>
</li>
<li>配置完成后直接拖动图片进去即可。</li>
</ul>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-07.png" alt=""></p>
<h2 id="图片压缩处理"><a href="#图片压缩处理" class="headerlink" title="图片压缩处理"></a>图片压缩处理</h2><ul>
<li>使用七牛图床，免费账户有10G空间和每个月10G流量，如果不搞清楚 容量 和 流量 的区别，肆无忌惮的用，早晚会用爆的。</li>
<li>强烈建议使用图片压缩工具 <a href="https://tinypng.com/" target="_blank" rel="external">tinypng</a> 压缩后再上传到七牛，上传图片必须限制在 200 k 以内。(放心一般截图压缩一下也就100k左右)</li>
<li>使用起来很简单，同样也可以直接拖进去，压缩能力很强大，基本看不出失真。</li>
</ul>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-08.png" alt=""></p>
<hr>
<h1 id="hexo多台电脑间同步"><a href="#hexo多台电脑间同步" class="headerlink" title="hexo多台电脑间同步"></a>hexo多台电脑间同步</h1><p>由于hexo没有后台，而且全部文件都在本地生成，所以如果在家里电脑上发表了文章后，到公司又写了篇文章，就无法上传，我们的空闲时间都是很难得的，如果终于腾出来个时间想写点东西，却发现没家伙，岂不是很扫兴。我这里整理了现阶段主流的两种解决方案。如下： </p>
<ul>
<li>利用git到github分支的方法（大多数人的方法）</li>
<li>采用便携版，搭建Node+Git+Hexo的绿色环境（个人比较喜欢）</li>
</ul>
<h2 id="利用git解决多PC间同步问题"><a href="#利用git解决多PC间同步问题" class="headerlink" title="利用git解决多PC间同步问题"></a>利用git解决多PC间同步问题</h2><p>以下以备份到coding为例，github是一样的道理。</p>
<h3 id="备份博客源文件"><a href="#备份博客源文件" class="headerlink" title="备份博客源文件"></a>备份博客源文件</h3><p>在本地博客根目录打开<code>git bash</code> </p>
<p><code>git init</code>后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;远程项目地址&gt;</span><br><span class="line"></span><br><span class="line">git checkout -b coding-pages分支</span><br><span class="line"></span><br><span class="line">git add -A  </span><br><span class="line"></span><br><span class="line">git commit -m &quot;提交&quot;</span><br><span class="line"></span><br><span class="line">git push origin coding-pages</span><br></pre></td></tr></table></figure></p>
<p>此时备份到<code>coding-pages</code>分支成功</p>
<h3 id="在另一台电脑写博备份操作。"><a href="#在另一台电脑写博备份操作。" class="headerlink" title="在另一台电脑写博备份操作。"></a>在另一台电脑写博备份操作。</h3><p>某盘下：打开<code>git bash</code>键入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;远程博客地址&gt; &lt;本地文件夹名&gt;</span><br></pre></td></tr></table></figure></p>
<p>当前默认为<code>master</code>分支，也就是<code>hexo</code>编译后的静态博客。</p>
<p>切换到<code>coding-pages</code>分支。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -a </span><br><span class="line">git checkout coding-pages</span><br></pre></td></tr></table></figure>
<p>输入以下指令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli    # 安装hexo</span><br><span class="line"></span><br><span class="line">npm install                # 安装依赖包</span><br><span class="line"></span><br><span class="line">npm install hexo-deployer-git   # 用git部署插件</span><br><span class="line"></span><br><span class="line">（记得，不需要hexo init这条指令）。</span><br><span class="line"></span><br><span class="line">npm install hexo-generator-feed --save       RSS插件</span><br></pre></td></tr></table></figure>
<p>输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g  </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>打开： <code>http://localhost:4000/</code>   博客又完整回来了，神奇吧。。</p>
<h2 id="采用便携版，搭建Node-Git-Hexo的绿色环境"><a href="#采用便携版，搭建Node-Git-Hexo的绿色环境" class="headerlink" title="采用便携版，搭建Node+Git+Hexo的绿色环境"></a>采用便携版，搭建Node+Git+Hexo的绿色环境</h2><p>由于我有时需要用到别人的电脑写东西，但是在别人电脑上随便装一些东西(Node+Git+Hexo)不太礼貌，所以这种便捷版的方案很适合我。</p>
<p>首先还是要感谢下这个 <a href="https://project.bitmoe.cn/PortableHexo/" target="_blank" rel="external">Hexo 便携版</a>  的开发团队：<em> 深圳比特萌信息技术有限公司 </em>。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-09.png" alt=""></p>
<blockquote>
<p>版本特性</p>
<ol>
<li>解压即用， 免 Nodejs 和 Git 的安装和配置；</li>
<li>包含了配置和懒人脚本；</li>
</ol>
</blockquote>
<p>使用方法<a href="http://project.bitmoe.cn/PortableHexo/" target="_blank" rel="external">官网</a> 上都写的很清楚，十分简单，并且不用装任何软件。我是直接同步到网盘上了，这个方法和第一种方法不冲突，可以一起使用。</p>
<h1 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h1><p>SEO (Search Engine Optimization)，即搜索引擎优化。对网站做SEO优化，有利于提高搜索引擎的收录速度及网页排名。下面讲解一些简单的SEO优化方法，主要针对Hexo网站。</p>
<hr>
<h2 id="SEO优化之title"><a href="#SEO优化之title" class="headerlink" title="SEO优化之title"></a>SEO优化之title</h2><p>编辑站点目录下的<code>themes/layout/index.swig</code>文件，</p>
<p>将下面的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endlock %&#125;</span><br></pre></td></tr></table></figure>
<p>改成</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endlock %&#125;</span><br></pre></td></tr></table></figure>
<p>这时将网站的描述及关键词加入了网站的<code>title</code>中，更有利于详细地描述网站。</p>
<h2 id="添加robots-txt"><a href="#添加robots-txt" class="headerlink" title="添加robots.txt"></a>添加robots.txt</h2><p>robots.txt是一种存放于网站根目录下的ASCII编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。robots.txt应该放在站点目录下的source文件中，网站生成后在网站的根目录(<code>站点目录/public/</code>)下。</p>
<p>我的robots.txt文件内容如下</p>
<pre><code>User-agent: *
Allow: /
Allow: /archives/
Allow: /categories/
Allow: /about/

Disallow: /vendors/
Disallow: /js/
Disallow: /css/
Disallow: /fonts/
Disallow: /vendors/
Disallow: /fancybox/
</code></pre><h2 id="添加sitemap"><a href="#添加sitemap" class="headerlink" title="添加sitemap"></a>添加sitemap</h2><p>Sitemap即网站地图，它的作用在于便于搜索引擎更加智能地抓取网站。最简单和常见的sitemap形式，是XML文件，在其中列出网站中的网址以及关于每个网址的其他元数据（上次更新时间、更新的频率及相对其他网址重要程度等）。</p>
<p><strong>Step 1</strong>: 安装sitemap生成插件</p>
<pre><code>npm install hexo-generator-sitemap --save
npm install hexo-generator-baidu-sitemap --save
</code></pre><p><strong>Step 2</strong>: 编辑站点目录下的_config.yml，添加</p>
<pre><code># hexo sitemap网站地图
sitemap:
path: sitemap.xml
baidusitemap:
path: baidusitemap.xml
</code></pre><p><strong>Step 3</strong>: 在robots.txt文件中添加</p>
<pre><code>Sitemap: http://www.jeyzhang.com/sitemap.xml
Sitemap: http://www.jeyzhang.com/baidusitemap.xml
</code></pre><h2 id="注册站长平台"><a href="#注册站长平台" class="headerlink" title="注册站长平台"></a>注册站长平台</h2><p>Google站长平台： <a href="https://www.google.com/webmasters/" target="_blank" rel="external">https://www.google.com/webmasters/</a><br>百度站长平台： <a href="http://zhanzhang.baidu.com/linksubmit/" target="_blank" rel="external">http://zhanzhang.baidu.com/linksubmit/</a><br>360网址提交入口： <a href="http://info.so.360.cn/site_submit.html" target="_blank" rel="external">http://info.so.360.cn/site_submit.html</a>  (直接提交即可)<br>根据提示注册好之后，添加你的博客域名。然后点击你的域名进入:</p>
<p><em>Google</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-10.png" alt="Google站长平台"><br><em>百度</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-11.png" alt="百度站长平台"></p>
<h2 id="测试robots-txt"><a href="#测试robots-txt" class="headerlink" title="测试robots.txt"></a>测试robots.txt</h2><p>点击左侧的robots.txt测试工具，根据提示提交你的robots.txt，其实刚才我们已经提交了。</p>
<p><em>Google</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-12.png" alt="Google测试robots"><br><em>百度</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-13.png" alt="百度测试robots"></p>
<blockquote>
<p>注意要0错误才可以，如果有错误的话，会有提示，改正确就可以了。</p>
</blockquote>
<h2 id="提交站点地图"><a href="#提交站点地图" class="headerlink" title="提交站点地图"></a>提交站点地图</h2><p>还记得我们刚才创建创建<code>sitemap.xml</code>文件吧,现在它要派上用场了。点击左侧工具栏的<code>站点地图</code>添加。</p>
<p><em>Google</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-14.png" alt="Google站点地图"><br><em>百度</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-155.png" alt="百度站点地图"></p>
<h2 id="抓取方式"><a href="#抓取方式" class="headerlink" title="抓取方式"></a>抓取方式</h2><p>提交站点地图之后，点击左侧的<code>Google 抓取方式</code> || <code>抓取诊断</code>。</p>
<p><em>Google</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-16.png" alt="Google抓取方式"><br><em>百度</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-17.png" alt="百度抓取方式"></p>
<p>在这里我们填上我们需要抓取的url,不填这表示抓取首页，抓取方式可以选择桌面，智能手机等等，自行根据需要选择。填好url之后，点击抓取。<br>然后可能会出现几种情况，如:完成、部分完成、重定向等，自由这三种情况是可以提交的。<br>提交完成后，提交至索引，根据提示操作就可以了。</p>
<blockquote>
<p>Google提交之后索引很快就可以搜索到了，百度的就坑了，索引很慢要24小时。</p>
</blockquote>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo+Github 搭建之路-基础篇]]></title>
      <url>http://blog.xheartx.com/2016/01/06/2016-01-06-hexo-Octopress/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/hexo-common.png" alt="Hexo+Github 搭建之路-基础篇"></p>
<blockquote>
<p>如果你对默认配置满意，只需几个命令便可秒搭一个hexo。<br>如果你跟我一样喜欢折腾下，30分钟也足够个性化。<br>如果你过于喜欢折腾，可以折腾个把星期，尽情的玩。</p>
</blockquote>
<p>就是看到这段话，让我决定落脚在Hexo和Githu上，Hexo是一个快速、简洁且高效的博客框架，而Github是一个免费的代码托管工具，利用Github Page可以免费创建一个静态网站。</p>
<p>其实最后只需要几个简单命令，你就可以完成一切。但是在那之前，却不是我想的那么简单，下面逐步介绍，进入正题。</p>
<a id="more"></a>
<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>安装Node<br>到<a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a>官网下载相应平台的最新版本，一路安装即可。<br>安装Git<br>到<a href="https://git-scm.com/download/win" target="_blank" rel="external">Git</a>官网，安装过程网上一堆，很简单。</p>
<h1 id="创建Github账号"><a href="#创建Github账号" class="headerlink" title="创建Github账号"></a>创建Github账号</h1><p>如果已经注册Github，可跳过此步骤。否则，访问<a href="https://github.com/" target="_blank" rel="external">Github官网</a>进行注册，下面假设你注册Github账号名为MyGithub。</p>
<blockquote>
<p>创建与账号同名的Repository</p>
</blockquote>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/QQ图片20160716162640.png" alt="New repository"><br>注册并登陆Github官网成功后，点击页面右上角的<code>+</code>，选择<code>New repository</code>。</p>
<p>在<code>Repository name</code>中填写<code>你的Github账号名.github.io</code>，这里是<code>MyGithub.github.io</code>。<code>Description</code>中填写对此repository的描述信息(可选，但建议填写，如<code>Personal website</code>)。<br><img src="http://7xvjap.com1.z0.glb.clouddn.com/QQ图片20160716162802.png" alt="Create repository"></p>
<p>点击<code>Create repository</code>，完成创建。</p>
<h1 id="添加SSH-Key"><a href="#添加SSH-Key" class="headerlink" title="添加SSH-Key"></a>添加SSH-Key</h1><p>首先设置你的用户名密码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></p>
<h1 id="生成密钥："><a href="#生成密钥：" class="headerlink" title="生成密钥："></a>生成密钥：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>
<p>想简单，过程一路回车。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;    你的email帐户</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/c/Documents and Settings/Administrator/.ssh/id_rsa): （设置保存公钥和私钥的位置，保持默认，可以不填直接回车）</span><br><span class="line">Enter passphrase (empty for no passphrase): （读取id_rsa的密码，可不填，不过建议填写）</span><br><span class="line">Enter same passphrase again: （再次输入id_rsa密码确认）</span><br><span class="line">Your identification has been saved in /c/Documents and Settings/Administrator/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /c/Documents and Settings/Administrator/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:生成的KEY 你的email帐户</span><br></pre></td></tr></table></figure></p>
<p>上述命令若执行成功，会在<code>c/Documents and Settings/Administrator/.ssh/</code>目录下生成两个文件<code>id_rsa</code>和<code>id_rsa.pub</code>，最后两步：</p>
<p>用文本编辑器打开<code>id_rsa.pub</code>文件，拷贝其中的内容，将其添加到<code>Add SSH Key</code> 不会添加的百度一下，这里不再说了。</p>
<p>最后可以验证一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p>
<p>顺利的话可以看到下面的信息</p>
<blockquote>
<p>Hi Your Name! You’ve successfully authenticated, but GitHub does not provide shell access.</p>
</blockquote>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><code>Node</code>和<code>Git</code>都安装好后，可执行如下命令安装<code>hexo</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure></p>
<h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><p>然后，执行init命令初始化hexo到你指定的目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>也可以cd到目标目录，执行<code>hexo init</code>。</p>
</blockquote>
<p>好啦，至此，全部安装工作已经完成！</p>
<h1 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h1><p><code>cd</code>到你的<code>init</code>目录，执行如下命令，生成静态页面至<code>hexo\public\</code>目录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>命令必须在<code>init</code>目录下执行，否则不成功，但是也不报错。<br>当你修改文章<code>Tag</code>或内容，不能正确重新生成内容，可以删除<code>hexo\db.json</code>后重试，还不行就到<code>public</code>目录删除对应的文件，重新生成。</p>
</blockquote>
<h1 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h1><p>执行如下命令，启动本地服务，进行文章预览调试。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></p>
<p>浏览器输入<code>http://localhost:4000</code>就可以看到效果。<br><img src="http://7xvjap.com1.z0.glb.clouddn.com/20160106-3.png" alt=""></p>
<blockquote>
<p>请使用高级浏览器，否则可能看不到你想要的…</p>
</blockquote>
<h1 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h1><p>Hexo的主题有很多，而且都很不错，可以到<a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo themes</a>找你喜欢的。<br>本文以Next主题为例，安装主题的方法就是一句git命令：</p>
<blockquote>
<p>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd your-hexo-site</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>安装完成后，打开hexo_config.yml，修改主题为NexT<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: NexT</span><br></pre></td></tr></table></figure></p>
<p>打开hexo\themes\modernist目录，编辑主题配置文件_config.yml：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">menu: #配置页头显示哪些菜单</span><br><span class="line">#  Home: /</span><br><span class="line">  Archives: /archives</span><br><span class="line">  Reading: /reading</span><br><span class="line">  About: /about</span><br><span class="line">#  Guestbook: /about</span><br><span class="line"></span><br><span class="line">excerpt_link: Read More #摘要链接文字</span><br><span class="line">archive_yearly: false #按年存档</span><br><span class="line"></span><br><span class="line">widgets: #配置页脚显示哪些小挂件</span><br><span class="line">  - category</span><br><span class="line">#  - tag</span><br><span class="line">  - tagcloud</span><br><span class="line">  - recent_posts</span><br><span class="line">#  - blogroll</span><br><span class="line"></span><br><span class="line">blogrolls: #友情链接</span><br><span class="line">  - bruce sha&apos;s duapp wordpress: http://ibruce.duapp.com</span><br><span class="line">  - bruce sha&apos;s javaeye: http://buru.iteye.com</span><br><span class="line">  - bruce sha&apos;s oschina blog: http://my.oschina.net/buru</span><br><span class="line">  - bruce sha&apos;s baidu space: http://hi.baidu.com/iburu</span><br><span class="line"></span><br><span class="line">fancybox: true #是否开启fancybox效果</span><br><span class="line"></span><br><span class="line">duoshuo_shortname: buru #多说账号</span><br><span class="line"></span><br><span class="line">google_analytics:</span><br><span class="line">rss:</span><br></pre></td></tr></table></figure></p>
<h1 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/modernist</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<p>主题其它使用配置及常见问题点此：<a href="http://theme-next.iissnan.com/" title="NexT 使用文档" target="_blank" rel="external">NexT 使用文档</a></p>
<h1 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h1><p>执行new命令，生成指定名称的文章至<code>hexo\source\_posts\postName.md</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &quot;postName&quot; #新建文章</span><br></pre></td></tr></table></figure></p>
<p>其中<code>layout</code>是可选参数，默认值为<code>post</code>。有哪些<code>layout</code>呢，请到<code>scaffolds</code>目录下查看，这些文件名称就是<code>layout</code>名称。当然你可以添加自己的<code>layout</code>，方法就是添加一个文件即可，同时你也可以编辑现有的<code>layout</code>，比如<code>post</code>的<code>layout</code>默认是<code>hexo\scaffolds\post.md</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line">date: &#123; &#123; date &#125; &#125;</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>请注意，大括号与大括号之间我多加了个空格，否则会被转义，不能正常显示。</p>
</blockquote>
<p>我想添加<code>categories</code>，以免每次手工输入，只需要修改这个文件添加一行，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line">date: &#123; &#123; date &#125; &#125;</span><br><span class="line">categories: </span><br><span class="line">tags: </span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<p><code>postName</code>是md文件的名字，同时也出现在你文章的URL中，<code>postName</code>如果包含空格，必须用”将其包围，<code>postName</code>可以为中文。</p>
<blockquote>
<p>注意，所有文件：后面都必须有个空格，不然会报错。</p>
</blockquote>
<p>看一下刚才生成的文件<code>hexo\source\_posts\postName.md</code>，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: postName #文章页面上的显示名称，可以任意修改，不会出现在URL中</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories: #文章分类目录，可以为空，注意:后面有个空格</span><br><span class="line">tags: #文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格</span><br><span class="line">---</span><br><span class="line">这里开始使用markdown格式输入你的正文。</span><br></pre></td></tr></table></figure></p>
<p>接下来，你就可以用喜爱的编辑器尽情书写你的文章。<a href="http://www.appinn.com/markdown/" title="Markdown 语法说明" target="_blank" rel="external">Markdown 语法说明。</a></p>
<h1 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h1><p>在需要显示摘要的地方添加如下代码即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以上是摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">以下是余下全文</span><br></pre></td></tr></table></figure></p>
<p>more以上内容即是文章摘要，在主页显示，more以下内容点击『&gt; Read More』链接打开全文才显示。</p>
<blockquote>
<p>hexo中所有文件的编码格式均是UTF-8。</p>
</blockquote>
<h1 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h1><h2 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHub</span><br></pre></td></tr></table></figure>
<h2 id="常用复合命令："><a href="#常用复合命令：" class="headerlink" title="常用复合命令："></a>常用复合命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy -g</span><br><span class="line">hexo server -g</span><br></pre></td></tr></table></figure>
<h2 id="简写："><a href="#简写：" class="headerlink" title="简写："></a>简写：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>
<h2 id="至此，基本操作介绍完毕，以下内容普通用户无需了解。"><a href="#至此，基本操作介绍完毕，以下内容普通用户无需了解。" class="headerlink" title="至此，基本操作介绍完毕，以下内容普通用户无需了解。"></a>至此，基本操作介绍完毕，以下内容普通用户无需了解。</h2><h1 id="目录介绍"><a href="#目录介绍" class="headerlink" title="目录介绍"></a>目录介绍</h1><h2 id="默认目录结构："><a href="#默认目录结构：" class="headerlink" title="默认目录结构："></a>默认目录结构：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── .deploy</span><br><span class="line">├── public</span><br><span class="line">├── scaffolds</span><br><span class="line">├── scripts</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">├── themes</span><br><span class="line">├── _config.yml</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure>
<ul>
<li>.deploy：执行hexo deploy命令部署到GitHub上的内容目录</li>
<li>public：执行hexo generate命令，输出的静态网页内容目录</li>
<li>scaffolds：layout模板文件目录，其中的md文件可以添加编辑</li>
<li>scripts：扩展脚本目录，这里可以自定义一些javascript脚本</li>
<li>source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。<ul>
<li>_drafts：草稿文章</li>
<li>_posts：发布文章</li>
</ul>
</li>
<li>themes：主题文件目录</li>
<li>_config.yml：全局配置文件，大多数的设置都在这里</li>
<li>package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮</li>
</ul>
<p>接下来是重头戏<code>_config.yml</code>，做个简单说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: http://zespia.tw/hexo/docs/configure.html</span><br><span class="line">## Source: https://github.com/tommy351/hexo/</span><br><span class="line"></span><br><span class="line"># Site #整站的基本信息</span><br><span class="line">title:  #网站标题</span><br><span class="line">subtitle: 码农，程序猿 #网站副标题</span><br><span class="line">description: bruce sha&apos;s blog | java | scala | bi #网站描述，给搜索引擎用的，在生成html中的head-&gt;meta中可看到</span><br><span class="line">author: bruce #网站作者，在下方显示</span><br><span class="line">email: *****u@qq.com #联系邮箱</span><br><span class="line">language: zh-CN #语言</span><br><span class="line"></span><br><span class="line"># URL #域名和文件结构</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://xheartx.como #你的域名</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line"></span><br><span class="line"># Writing #写文章选项</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post #默认layout方式</span><br><span class="line">auto_spacing: false # Add spaces between asian characters and western characters</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">max_open_file: 100</span><br><span class="line">multi_thread: true</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">highlight: #代码高亮</span><br><span class="line">  enable: true #是否启用</span><br><span class="line">  line_number: false #是否显示行号</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag #分类与标签</span><br><span class="line">default_category: uncategorized # default</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Archives #存档，这里的说明好像不对。全部选择1，这个选项与主题中的选项有时候会有冲突</span><br><span class="line">## 2: Enable pagination</span><br><span class="line">## 1: Disable pagination</span><br><span class="line">## 0: Fully Disable</span><br><span class="line">archive: 1</span><br><span class="line">category: 1</span><br><span class="line">tag: 1</span><br><span class="line"></span><br><span class="line"># Server #本地服务参数</span><br><span class="line">## Hexo uses Connect as a server</span><br><span class="line">## You can customize the logger format as defined in</span><br><span class="line">## http://www.senchalabs.org/connect/logger.html</span><br><span class="line">port: 4000</span><br><span class="line">logger: true</span><br><span class="line">logger_format:</span><br><span class="line"></span><br><span class="line"># Date / Time format #日期显示格式</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: MMM D YYYY</span><br><span class="line">time_format: H:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination #分页设置</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10 #每页10篇文章</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Disqus #社会化评论disqus，我使用多说，在主题中配置</span><br><span class="line">disqus_shortname:</span><br><span class="line"></span><br><span class="line"># Extensions #插件，暂时未安装插件</span><br><span class="line">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</span><br><span class="line">## Themes: https://github.com/tommy351/hexo/wiki/Themes</span><br><span class="line">## 主题</span><br><span class="line">theme: modernist # raytaylorism # pacman # modernist # light</span><br><span class="line">exclude_generator:</span><br><span class="line"></span><br><span class="line"># Deployment #部署</span><br><span class="line">## Docs: http://zespia.tw/hexo/docs/deploy.html</span><br><span class="line">deploy:</span><br><span class="line">  type: github</span><br><span class="line">  repository: git@github.com:bruce-sha/bruce-sha.github.com.git #你的GitHub Pages仓库</span><br></pre></td></tr></table></figure></p>
<h1 id="修改局部页面"><a href="#修改局部页面" class="headerlink" title="修改局部页面"></a>修改局部页面</h1><p>页面展现的全部逻辑都在每个主题中控制，源代码在<code>hexo\themes\</code>你使用的主题\中，以<code>Next</code>主题为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── languages          #多语言</span><br><span class="line">|   ├── default.yml    #默认语言</span><br><span class="line">|   └── zh-CN.yml      #中文语言</span><br><span class="line">├── layout             #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</span><br><span class="line">|   ├── _partial       #局部的布局，此目录下的*.ejs是对头尾等局部的控制</span><br><span class="line">|   └── _widget        #小挂件的布局，页面下方小挂件的控制</span><br><span class="line">├── source             #源码</span><br><span class="line">|   ├── css            #css源码 </span><br><span class="line">|   |   ├── _base      #*.styl基础css</span><br><span class="line">|   |   ├── _partial   #*.styl局部css</span><br><span class="line">|   |   ├── fonts      #字体</span><br><span class="line">|   |   ├── images     #图片</span><br><span class="line">|   |   └── style.styl #*.styl引入需要的css源码</span><br><span class="line">|   ├── fancybox       #fancybox效果源码</span><br><span class="line">|   └── js             #javascript源代码</span><br><span class="line">├── _config.yml        #主题配置文件</span><br><span class="line">└── README.md          #用GitHub的都知道</span><br></pre></td></tr></table></figure></p>
<h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><h2 id="更新hexo："><a href="#更新hexo：" class="headerlink" title="更新hexo："></a>更新hexo：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update -g hexo</span><br></pre></td></tr></table></figure>
<h2 id="更新主题："><a href="#更新主题：" class="headerlink" title="更新主题："></a>更新主题：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/你的主题</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<h2 id="更新插件："><a href="#更新插件：" class="headerlink" title="更新插件："></a>更新插件：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update</span><br></pre></td></tr></table></figure>
<h1 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h1><p><a href="http://hexo.io/docs/" target="_blank" rel="external">hexo官方文档</a><br><a href="https://github.com/hexojs/hexo/wiki/Plugins" target="_blank" rel="external">hexo插件大全</a><br><a href="http://www.faviconer.com/" target="_blank" rel="external">自定义网站logo</a><br><a href="http://www.markdown.cn/" target="_blank" rel="external">MarkDown中文网</a><br><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">MarkDown语法说明</a><br><a href="http://www.jiathis.com/" target="_blank" rel="external">社交分享推荐使用jiathis</a><br><a href="http://duoshuo.com/" target="_blank" rel="external">评论插件推荐使用duoshuo</a><br><a href="http://zhanzhang.cnzz.com/" target="_blank" rel="external">网站流量统计推荐cnzz</a><br><a href="http://tongji.baidu.com/web/welcome/login" target="_blank" rel="external">网站流量统计推荐百度统计</a></p>
<hr>
<p>通过以上的设置，相信你已经可以通过注册域名来访问一个默认的hexo主题页面了。之后的工作就在于，<br>(1)如何对主题进行个性化设置及；<br>(2)发表博文以充实网站内容。<br><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">这里</a>有关于next主题的个性化设置说明。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的第一篇文章—记录]]></title>
      <url>http://blog.xheartx.com/2016/01/01/2016-01-01-heart-MyFirst/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-01-01.png" alt="精于心，简于形"><br>今天终于能建一个自己的网站了，看了很多的建站教程，最终还是决定在Github Page，舍弃了之前一直折腾的一些主题以及插件，改用了这款简约大方的NEXT主题，<em>“精于心，简于形！”</em> 毕竟自己刚开始学习，要专注于内容，用这里来记录我的学习之路，并时刻提醒自己，要努力！！<br><a id="more"></a>—–为了她。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://blog.xheartx.com/2016/01/01/2016-01-01-hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h2 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a> <a id="more"></a></p>
<h2 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h2 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h2 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
