<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hexo 问题汇总]]></title>
      <url>http://xheartx.com/2016/01/15/Hexo-The-problem-summary/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-15-01.png" alt=""></p>
<blockquote class="blockquote-center"><br> <strong>生命在于折腾，不懂的善用搜索，来享受研究的乐趣吧！</strong><br><br></blockquote>

<a id="more"></a>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo+Github 搭建之路-进阶篇]]></title>
      <url>http://xheartx.com/2016/01/10/Hexo-Github-Build-advanced-article/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-01.png" alt=""></p>
<h1 id="hexo双线部署到github和coding"><a href="#hexo双线部署到github和coding" class="headerlink" title="hexo双线部署到github和coding"></a>hexo双线部署到github和coding</h1><p>如果只把hexo托管在github，但是毕竟github是国外的，访问速度上还是有点慢，所以就有了同时再部署到国内的coding，实现全球快速访问，通过域名解析可以把国内流量的解析到Coding，国外的解析到Github(这里可以用DNSPod的免费服务)。</p>
<a id="more"></a>
<h2 id="注册Coding账户并建立项目"><a href="#注册Coding账户并建立项目" class="headerlink" title="注册Coding账户并建立项目"></a>注册Coding账户并建立项目</h2><p>github的托管详情，请看<a href="/2016/01/06/hexo-personal-blog-from-Octopress-to-Hexo/">基础篇</a>。Coding托管的方法与github的类似，托管完成后，你可以手动删除Coding上的项目。具体如下：</p>
<p>去<a href="https://coding.net" target="_blank" rel="external">Coding的官网</a>注册，在个人主页的<code>项目</code>中创建一个项目，最好创建与你账户名相同的项目。例如，我的账户名为xheart, 创建的项目名为xheart（大小写不区分）。</p>
<h2 id="上传SSH文件"><a href="#上传SSH文件" class="headerlink" title="上传SSH文件"></a>上传SSH文件</h2><p>在Coding的个人主页的<code>账户</code>中，进入<code>SSH公钥</code>。添加你的公钥，如果你之前生成过，公钥在<code>C:\Users\你的用户名\.ssh\id_rsa.pub</code>。复制里面的内容在<code>SSH-RSA公钥内容</code>中即可。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-03.png" alt=""></p>
<p>打开<code>git bash</code>，输入</p>
<pre><code>ssh -T git@git.coding.net
</code></pre><p>进行测试，如果显示如下则SSH配置成功：</p>
<pre><code>Hello ...! You&apos;ve conected to Coding.net by SSH successfully!
</code></pre><h2 id="修改网站的配置文件"><a href="#修改网站的配置文件" class="headerlink" title="修改网站的配置文件"></a>修改网站的配置文件</h2><p>修改网站根目录下的配置文件<code>_config.yml</code>，找到<code>deploy</code>的设置处，改为如下：</p>
<pre><code>deploy:
  type: git
  repo: 
       github: https://xheartx@github.com/xheartx/xheartx.github.io.git
       coding: git@git.coding.net:xheart/xheart.git
  branch: master
</code></pre><p>注意要改成你的项目地址。</p>
<h2 id="将网站文件部署至Coding"><a href="#将网站文件部署至Coding" class="headerlink" title="将网站文件部署至Coding"></a>将网站文件部署至Coding</h2><p>在网站根目录下打开<code>git bash</code>，输入</p>
<pre><code>hexo g -d
</code></pre><p>进行网站文件的生成和部署。成功之后，进入你的Coding对应的项目中应该能看到网站文件。</p>
<h2 id="配置Coding的Page服务"><a href="#配置Coding的Page服务" class="headerlink" title="配置Coding的Page服务"></a>配置Coding的Page服务</h2><p>进入你在Coding上的项目，点击左侧的<code>代码</code>可以看到<code>Coding Pages</code>服务。输入分支为<code>master</code>，点击开启服务。在自定义域名处填上你的网站域名，如下图所示：</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-04.png" alt=""></p>
<hr>
<h1 id="注册及绑定自己的域名地址"><a href="#注册及绑定自己的域名地址" class="headerlink" title="注册及绑定自己的域名地址"></a>注册及绑定自己的域名地址</h1><p>将hexo部署至github及Coding之后，可以通过github或者Coding分配的pages二级域名来访问博客，比如username.github.io。但是对于一个强迫症患者，一个爱折腾的人，怎么可以就这样满足了，当然是要有一个自己的个性域名了，通过将自己的博客绑定至自己购买的域名可以更加方便的访问，下面将介绍如何购买一个域名及将自定义域名绑定至github。</p>
<h2 id="注册域名"><a href="#注册域名" class="headerlink" title="注册域名"></a>注册域名</h2><p>这里推荐<a href="https://www.namesilo.com/?rid=e509366fb" target="_blank" rel="external">namesilo</a>域名注册商，支付宝付款方便，赠送永久whois保护、免备案，赠送域名停靠业务，很多新鲜功能，免费给客户使用。不必再去godaddy这类国际域名商那里注册了，性价比不高。<br>详细教程请看：<a href="http://since1989.org/wordpress/namesilo-coupon-godaddy-domain-free.html" target="_blank" rel="external">namesilo免费注册账号、购买域名教程</a> ，输入优惠码还可优惠1美元。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-02.png" alt=""></p>
<blockquote>
<p>提醒：</p>
<ul>
<li>一定不要注册.cn域名，一定不要在国内万网注册域名。原因我就不多说了，国内的环境你们懂的。</li>
<li>域名注册首选.com ,其它的都是浮云。</li>
</ul>
</blockquote>
<h2 id="DNS域名解析设置"><a href="#DNS域名解析设置" class="headerlink" title="DNS域名解析设置"></a>DNS域名解析设置</h2><p>域名解析推荐NDSPod国际版，NDSPod的域名解析服务中，提供根据线路进行不同的路由的功能是免费的，NDSPod国内版本目前只对国内线路做细分，没有海外线路的选择，所以不推荐，建议用NDSPod的国际版。</p>
<p>操作流程：</p>
<ul>
<li>注册dnspod国际帐号<a href="https://www.dnspod.com/" target="_blank" rel="external">www.dnspod.com</a><br>域名服务商那里更改ns记录为dnspod国际版的nameserver，默认为</li>
</ul>
<blockquote>
<p>   a.dnspod.com.<br>   b.dnspod.com.<br>   c.dnspod.com.</p>
</blockquote>
<ul>
<li>在dnspod添加域名解析：</li>
</ul>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-05.png" alt=""></p>
<blockquote>
<p>注意：<br>A解析：只能填IP地址，IP地址如果换了的话就需要换解析记录<br>CNAME解析：解析到另一个域名，即使被指向的域名的ip发生变化，也不需要更改解析记录。<br>建议全都用CNAME解析，具体可参考我的设置。（由于我还添加了自己的二级域名，只看红框里的就行）<br>Value的地址后面一定要加.  ,比如：pages.coding.me. </p>
</blockquote>
<ul>
<li>Github自定义域名需要在项目根目录下添加一个CNAME文件，文件内容为自定义域名。CNAME文件创建完之后扔到blog/source目录下即可 (不能直接扔到public下!!)。<br>CNAME文件设置的目的是，通过访问 MyGithub.github.io 可以跳转到你所注册的域名上。</li>
<li>Coding需要在项目Coding Pages 服务中直接绑定自己的域名即可。</li>
<li>DNS域名解析设置需要一定时间，请耐心等待。</li>
</ul>
<hr>
<h1 id="使用七牛图床分流"><a href="#使用七牛图床分流" class="headerlink" title="使用七牛图床分流"></a>使用七牛图床分流</h1><p>本来图片放在本地的文件夹里也可以，但是github还是有存储空间限制的，而且这样网站加载也慢，所以用云存储商的云服务来作图床还可以加速，图片也不会丢。其实还有很多免费图床网站可以用，但是七牛的口碑比较哦好，比较稳定。所以决定用七牛了。</p>
<h2 id="注册七牛账号"><a href="#注册七牛账号" class="headerlink" title="注册七牛账号"></a>注册七牛账号</h2><p><a href="https://portal.qiniu.com/signup?code=3lmwk5kdtr1oy" target="_blank" rel="external">点此注册</a>，官网注册很简单，都是中文。没有账先去注册，实名认证之后就可以使用云存储服务了。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-06.png" alt=""></p>
<p> <strong>注意：</strong> 一定要选公开空间，不然别人访问不到</p>
<h2 id="七牛云插件上传"><a href="#七牛云插件上传" class="headerlink" title="七牛云插件上传"></a>七牛云插件上传</h2><ul>
<li><p>推荐chrome里七牛云存储的 <a href="https://chrome.google.com/webstore/detail/qiniu-upload-files/emmfkgdgapbjphdolealbojmcmnphdcc" target="_blank" rel="external">qiniu upload files</a> 插件</p>
<blockquote>
<p>七牛云插件,像使用桌面系统一样管理你的七牛云空间<br>支持拖拽上传，批量操作，文件处理等功能</p>
</blockquote>
</li>
<li><p>安装完成后，填写表单,内容七牛网站密匙管理里都有。</p>
</li>
<li>配置完成后直接拖动图片进去即可。</li>
</ul>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-07.png" alt=""></p>
<h2 id="图片压缩处理"><a href="#图片压缩处理" class="headerlink" title="图片压缩处理"></a>图片压缩处理</h2><ul>
<li>使用七牛图床，免费账户有10G空间和每个月10G流量，如果不搞清楚 容量 和 流量 的区别，肆无忌惮的用，早晚会用爆的。</li>
<li>强烈建议使用图片压缩工具 <a href="https://tinypng.com/" target="_blank" rel="external">tinypng</a> 压缩后再上传到七牛，上传图片必须限制在 200 k 以内。(放心一般截图压缩一下也就100k左右)</li>
<li>使用起来很简单，同样也可以直接拖进去，压缩能力很强大，基本看不出失真。</li>
</ul>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-08.png" alt=""></p>
<hr>
<h1 id="hexo多台电脑间同步"><a href="#hexo多台电脑间同步" class="headerlink" title="hexo多台电脑间同步"></a>hexo多台电脑间同步</h1><p>由于hexo没有后台，而且全部文件都在本地生成，所以如果在家里电脑上发表了文章后，到公司又写了篇文章，就无法上传，我们的空闲时间都是很难得的，如果终于腾出来个时间想写点东西，却发现没家伙，岂不是很扫兴。我这里整理了现阶段主流的两种解决方案。如下： </p>
<ul>
<li>利用git到github分支的方法（大多数人的方法）</li>
<li>采用便携版，搭建Node+Git+Hexo的绿色环境（个人比较喜欢）</li>
</ul>
<h2 id="利用git解决多PC间同步问题"><a href="#利用git解决多PC间同步问题" class="headerlink" title="利用git解决多PC间同步问题"></a>利用git解决多PC间同步问题</h2><p>以下以备份到coding为例，github是一样的道理。</p>
<h3 id="备份博客源文件"><a href="#备份博客源文件" class="headerlink" title="备份博客源文件"></a>备份博客源文件</h3><p>在本地博客根目录打开<code>git bash</code> </p>
<p><code>git init</code>后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;远程项目地址&gt;</span><br><span class="line"></span><br><span class="line">git checkout -b coding-pages分支</span><br><span class="line"></span><br><span class="line">git add -A  </span><br><span class="line"></span><br><span class="line">git commit -m &quot;提交&quot;</span><br><span class="line"></span><br><span class="line">git push origin coding-pages</span><br></pre></td></tr></table></figure></p>
<p>此时备份到<code>coding-pages</code>分支成功</p>
<h3 id="在另一台电脑写博备份操作。"><a href="#在另一台电脑写博备份操作。" class="headerlink" title="在另一台电脑写博备份操作。"></a>在另一台电脑写博备份操作。</h3><p>某盘下：打开<code>git bash</code>键入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;远程博客地址&gt; &lt;本地文件夹名&gt;</span><br></pre></td></tr></table></figure></p>
<p>当前默认为<code>master</code>分支，也就是<code>hexo</code>编译后的静态博客。</p>
<p>切换到<code>coding-pages</code>分支。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -a </span><br><span class="line">git checkout coding-pages</span><br></pre></td></tr></table></figure>
<p>输入以下指令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli    # 安装hexo</span><br><span class="line"></span><br><span class="line">npm install                # 安装依赖包</span><br><span class="line"></span><br><span class="line">npm install hexo-deployer-git   # 用git部署插件</span><br><span class="line"></span><br><span class="line">（记得，不需要hexo init这条指令）。</span><br><span class="line"></span><br><span class="line">npm install hexo-generator-feed --save       RSS插件</span><br></pre></td></tr></table></figure>
<p>输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g  </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>打开： <code>http://localhost:4000/</code>   博客又完整回来了，神奇吧。。</p>
<h2 id="采用便携版，搭建Node-Git-Hexo的绿色环境"><a href="#采用便携版，搭建Node-Git-Hexo的绿色环境" class="headerlink" title="采用便携版，搭建Node+Git+Hexo的绿色环境"></a>采用便携版，搭建Node+Git+Hexo的绿色环境</h2><p>由于我有时需要用到别人的电脑写东西，但是在别人电脑上随便装一些东西(Node+Git+Hexo)不太礼貌，所以这种便捷版的方案很适合我。</p>
<p>首先还是要感谢下这个 <a href="https://project.bitmoe.cn/PortableHexo/" target="_blank" rel="external">Hexo 便携版</a>  的开发团队：<em> 深圳比特萌信息技术有限公司 </em>。</p>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-09.png" alt=""></p>
<blockquote>
<p>版本特性</p>
<ol>
<li>解压即用， 免 Nodejs 和 Git 的安装和配置；</li>
<li>包含了配置和懒人脚本；</li>
</ol>
</blockquote>
<p>使用方法<a href="http://project.bitmoe.cn/PortableHexo/" target="_blank" rel="external">官网</a> 上都写的很清楚，十分简单，并且不用装任何软件。我是直接同步到网盘上了，这个方法和第一种方法不冲突，可以一起使用。</p>
<h1 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h1><p>SEO (Search Engine Optimization)，即搜索引擎优化。对网站做SEO优化，有利于提高搜索引擎的收录速度及网页排名。下面讲解一些简单的SEO优化方法，主要针对Hexo网站。</p>
<hr>
<h2 id="SEO优化之title"><a href="#SEO优化之title" class="headerlink" title="SEO优化之title"></a>SEO优化之title</h2><p>编辑站点目录下的<code>themes/layout/index.swig</code>文件，</p>
<p>将下面的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endlock %&#125;</span><br></pre></td></tr></table></figure>
<p>改成</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endlock %&#125;</span><br></pre></td></tr></table></figure>
<p>这时将网站的描述及关键词加入了网站的<code>title</code>中，更有利于详细地描述网站。</p>
<h2 id="添加robots-txt"><a href="#添加robots-txt" class="headerlink" title="添加robots.txt"></a>添加robots.txt</h2><p>robots.txt是一种存放于网站根目录下的ASCII编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。robots.txt应该放在站点目录下的source文件中，网站生成后在网站的根目录(<code>站点目录/public/</code>)下。</p>
<p>我的robots.txt文件内容如下</p>
<pre><code>User-agent: *
Allow: /
Allow: /archives/
Allow: /categories/
Allow: /about/

Disallow: /vendors/
Disallow: /js/
Disallow: /css/
Disallow: /fonts/
Disallow: /vendors/
Disallow: /fancybox/
</code></pre><h2 id="添加sitemap"><a href="#添加sitemap" class="headerlink" title="添加sitemap"></a>添加sitemap</h2><p>Sitemap即网站地图，它的作用在于便于搜索引擎更加智能地抓取网站。最简单和常见的sitemap形式，是XML文件，在其中列出网站中的网址以及关于每个网址的其他元数据（上次更新时间、更新的频率及相对其他网址重要程度等）。</p>
<p><strong>Step 1</strong>: 安装sitemap生成插件</p>
<pre><code>npm install hexo-generator-sitemap --save
npm install hexo-generator-baidu-sitemap --save
</code></pre><p><strong>Step 2</strong>: 编辑站点目录下的_config.yml，添加</p>
<pre><code># hexo sitemap网站地图
sitemap:
path: sitemap.xml
baidusitemap:
path: baidusitemap.xml
</code></pre><p><strong>Step 3</strong>: 在robots.txt文件中添加</p>
<pre><code>Sitemap: http://www.jeyzhang.com/sitemap.xml
Sitemap: http://www.jeyzhang.com/baidusitemap.xml
</code></pre><h2 id="注册站长平台"><a href="#注册站长平台" class="headerlink" title="注册站长平台"></a>注册站长平台</h2><p>Google站长平台： <a href="https://www.google.com/webmasters/" target="_blank" rel="external">https://www.google.com/webmasters/</a><br>百度站长平台： <a href="http://zhanzhang.baidu.com/linksubmit/" target="_blank" rel="external">http://zhanzhang.baidu.com/linksubmit/</a><br>根据提示注册好之后，添加你的博客域名。然后点击你的域名进入:</p>
<p><em>Google</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-10.png" alt="Google站长平台"><br><em>百度</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-11.png" alt="百度站长平台"></p>
<h2 id="测试robots-txt"><a href="#测试robots-txt" class="headerlink" title="测试robots.txt"></a>测试robots.txt</h2><p>点击左侧的robots.txt测试工具，根据提示提交你的robots.txt，其实刚才我们已经提交了。</p>
<p><em>Google</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-12.png" alt="Google测试robots"><br><em>百度</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-13.png" alt="百度测试robots"></p>
<blockquote>
<p>注意要0错误才可以，如果有错误的话，会有提示，改正确就可以了。</p>
</blockquote>
<h2 id="提交站点地图"><a href="#提交站点地图" class="headerlink" title="提交站点地图"></a>提交站点地图</h2><p>还记得我们刚才创建创建<code>sitemap.xml</code>文件吧,现在它要派上用场了。点击左侧工具栏的<code>站点地图</code>添加。</p>
<p><em>Google</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-14.png" alt="Google站点地图"><br><em>百度</em><br><img src="http:// 7xvjap.com1.z0.glb.clouddn.com/2016-01-10-155.png" alt="百度站点地图"></p>
<h2 id="抓取方式"><a href="#抓取方式" class="headerlink" title="抓取方式"></a>抓取方式</h2><p>提交站点地图之后，点击左侧的<code>Google 抓取方式</code> || <code>抓取诊断</code>。</p>
<p><em>Google</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-16.png" alt="Google抓取方式"><br><em>百度</em><br><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-10-17.png" alt="百度抓取方式"></p>
<p>在这里我们填上我们需要抓取的url,不填这表示抓取首页，抓取方式可以选择桌面，智能手机等等，自行根据需要选择。填好url之后，点击抓取。<br>然后可能会出现几种情况，如:完成、部分完成、重定向等，自由这三种情况是可以提交的。<br>提交完成后，提交至索引，根据提示操作就可以了。</p>
<blockquote>
<p>Google提交之后索引很快就可以搜索到了，百度的就坑了，索引很慢要24小时。</p>
</blockquote>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo+Github 搭建之路-基础篇]]></title>
      <url>http://xheartx.com/2016/01/06/hexo-personal-blog-from-Octopress-to-Hexo/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/hexo-common.png" alt=""></p>
<blockquote>
<p>如果你对默认配置满意，只需几个命令便可秒搭一个hexo。<br>如果你跟我一样喜欢折腾下，30分钟也足够个性化。<br>如果你过于喜欢折腾，可以折腾个把星期，尽情的玩。</p>
</blockquote>
<p>就是看到这段话，让我决定落脚在Hexo和Githu上，Hexo是一个快速、简洁且高效的博客框架，而Github是一个免费的代码托管工具，利用Github Page可以免费创建一个静态网站。</p>
<p>其实最后只需要几个简单命令，你就可以完成一切。但是在那之前，却不是我想的那么简单，下面逐步介绍，进入正题。</p>
<a id="more"></a>
<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>安装Node<br>到<a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a>官网下载相应平台的最新版本，一路安装即可。<br>安装Git<br>到<a href="https://git-scm.com/download/win" target="_blank" rel="external">Git</a>官网，安装过程网上一堆，很简单。</p>
<h1 id="创建Github账号"><a href="#创建Github账号" class="headerlink" title="创建Github账号"></a>创建Github账号</h1><p>如果已经注册Github，可跳过此步骤。否则，访问<a href="https://github.com/" target="_blank" rel="external">Github官网</a>进行注册，下面假设你注册Github账号名为MyGithub。</p>
<blockquote>
<p>创建与账号同名的Repository</p>
</blockquote>
<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/QQ图片20160716162640.png" alt="New repository"><br>注册并登陆Github官网成功后，点击页面右上角的<code>+</code>，选择<code>New repository</code>。</p>
<p>在<code>Repository name</code>中填写<code>你的Github账号名.github.io</code>，这里是<code>MyGithub.github.io</code>。<code>Description</code>中填写对此repository的描述信息(可选，但建议填写，如<code>Personal website</code>)。<br><img src="http://7xvjap.com1.z0.glb.clouddn.com/QQ图片20160716162802.png" alt="Create repository"></p>
<p>点击<code>Create repository</code>，完成创建。</p>
<h1 id="添加SSH-Key"><a href="#添加SSH-Key" class="headerlink" title="添加SSH-Key"></a>添加SSH-Key</h1><p>首先设置你的用户名密码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></p>
<h1 id="生成密钥："><a href="#生成密钥：" class="headerlink" title="生成密钥："></a>生成密钥：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>
<p>想简单，过程一路回车。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;    你的email帐户</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/c/Documents and Settings/Administrator/.ssh/id_rsa): （设置保存公钥和私钥的位置，保持默认，可以不填直接回车）</span><br><span class="line">Enter passphrase (empty for no passphrase): （读取id_rsa的密码，可不填，不过建议填写）</span><br><span class="line">Enter same passphrase again: （再次输入id_rsa密码确认）</span><br><span class="line">Your identification has been saved in /c/Documents and Settings/Administrator/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /c/Documents and Settings/Administrator/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:生成的KEY 你的email帐户</span><br></pre></td></tr></table></figure></p>
<p>上述命令若执行成功，会在<code>c/Documents and Settings/Administrator/.ssh/</code>目录下生成两个文件<code>id_rsa</code>和<code>id_rsa.pub</code>，最后两步：</p>
<p>用文本编辑器打开<code>id_rsa.pub</code>文件，拷贝其中的内容，将其添加到<code>Add SSH Key</code> 不会添加的百度一下，这里不再说了。</p>
<p>最后可以验证一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p>
<p>顺利的话可以看到下面的信息</p>
<blockquote>
<p>Hi Your Name! You’ve successfully authenticated, but GitHub does not provide shell access.</p>
</blockquote>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><code>Node</code>和<code>Git</code>都安装好后，可执行如下命令安装<code>hexo</code>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure></p>
<h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><p>然后，执行init命令初始化hexo到你指定的目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>也可以cd到目标目录，执行<code>hexo init</code>。</p>
</blockquote>
<p>好啦，至此，全部安装工作已经完成！</p>
<h1 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h1><p><code>cd</code>到你的<code>init</code>目录，执行如下命令，生成静态页面至<code>hexo\public\</code>目录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>命令必须在<code>init</code>目录下执行，否则不成功，但是也不报错。<br>当你修改文章<code>Tag</code>或内容，不能正确重新生成内容，可以删除<code>hexo\db.json</code>后重试，还不行就到<code>public</code>目录删除对应的文件，重新生成。</p>
</blockquote>
<h1 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h1><p>执行如下命令，启动本地服务，进行文章预览调试。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></p>
<p>浏览器输入<code>http://localhost:4000</code>就可以看到效果。<br><img src="http://7xvjap.com1.z0.glb.clouddn.com/20160106-3.png" alt=""></p>
<blockquote>
<p>请使用高级浏览器，否则可能看不到你想要的…</p>
</blockquote>
<h1 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h1><p>Hexo的主题有很多，而且都很不错，可以到<a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo themes</a>找你喜欢的。<br>本文以Next主题为例，安装主题的方法就是一句git命令：</p>
<blockquote>
<p>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd your-hexo-site</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>安装完成后，打开hexo_config.yml，修改主题为NexT<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: NexT</span><br></pre></td></tr></table></figure></p>
<p>打开hexo\themes\modernist目录，编辑主题配置文件_config.yml：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">menu: #配置页头显示哪些菜单</span><br><span class="line">#  Home: /</span><br><span class="line">  Archives: /archives</span><br><span class="line">  Reading: /reading</span><br><span class="line">  About: /about</span><br><span class="line">#  Guestbook: /about</span><br><span class="line"></span><br><span class="line">excerpt_link: Read More #摘要链接文字</span><br><span class="line">archive_yearly: false #按年存档</span><br><span class="line"></span><br><span class="line">widgets: #配置页脚显示哪些小挂件</span><br><span class="line">  - category</span><br><span class="line">#  - tag</span><br><span class="line">  - tagcloud</span><br><span class="line">  - recent_posts</span><br><span class="line">#  - blogroll</span><br><span class="line"></span><br><span class="line">blogrolls: #友情链接</span><br><span class="line">  - bruce sha&apos;s duapp wordpress: http://ibruce.duapp.com</span><br><span class="line">  - bruce sha&apos;s javaeye: http://buru.iteye.com</span><br><span class="line">  - bruce sha&apos;s oschina blog: http://my.oschina.net/buru</span><br><span class="line">  - bruce sha&apos;s baidu space: http://hi.baidu.com/iburu</span><br><span class="line"></span><br><span class="line">fancybox: true #是否开启fancybox效果</span><br><span class="line"></span><br><span class="line">duoshuo_shortname: buru #多说账号</span><br><span class="line"></span><br><span class="line">google_analytics:</span><br><span class="line">rss:</span><br></pre></td></tr></table></figure></p>
<h1 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/modernist</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<p>主题其它使用配置及常见问题点此：<a href="http://theme-next.iissnan.com/" title="NexT 使用文档" target="_blank" rel="external">NexT 使用文档</a></p>
<h1 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h1><p>执行new命令，生成指定名称的文章至<code>hexo\source\_posts\postName.md</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &quot;postName&quot; #新建文章</span><br></pre></td></tr></table></figure></p>
<p>其中<code>layout</code>是可选参数，默认值为<code>post</code>。有哪些<code>layout</code>呢，请到<code>scaffolds</code>目录下查看，这些文件名称就是<code>layout</code>名称。当然你可以添加自己的<code>layout</code>，方法就是添加一个文件即可，同时你也可以编辑现有的<code>layout</code>，比如<code>post</code>的<code>layout</code>默认是<code>hexo\scaffolds\post.md</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line">date: &#123; &#123; date &#125; &#125;</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>请注意，大括号与大括号之间我多加了个空格，否则会被转义，不能正常显示。</p>
</blockquote>
<p>我想添加<code>categories</code>，以免每次手工输入，只需要修改这个文件添加一行，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line">date: &#123; &#123; date &#125; &#125;</span><br><span class="line">categories: </span><br><span class="line">tags: </span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<p><code>postName</code>是md文件的名字，同时也出现在你文章的URL中，<code>postName</code>如果包含空格，必须用”将其包围，<code>postName</code>可以为中文。</p>
<blockquote>
<p>注意，所有文件：后面都必须有个空格，不然会报错。</p>
</blockquote>
<p>看一下刚才生成的文件<code>hexo\source\_posts\postName.md</code>，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: postName #文章页面上的显示名称，可以任意修改，不会出现在URL中</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories: #文章分类目录，可以为空，注意:后面有个空格</span><br><span class="line">tags: #文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格</span><br><span class="line">---</span><br><span class="line">这里开始使用markdown格式输入你的正文。</span><br></pre></td></tr></table></figure></p>
<p>接下来，你就可以用喜爱的编辑器尽情书写你的文章。<a href="http://www.appinn.com/markdown/" title="Markdown 语法说明" target="_blank" rel="external">Markdown 语法说明。</a></p>
<h1 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h1><p>在需要显示摘要的地方添加如下代码即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以上是摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">以下是余下全文</span><br></pre></td></tr></table></figure></p>
<p>more以上内容即是文章摘要，在主页显示，more以下内容点击『&gt; Read More』链接打开全文才显示。</p>
<blockquote>
<p>hexo中所有文件的编码格式均是UTF-8。</p>
</blockquote>
<h1 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h1><h2 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHub</span><br></pre></td></tr></table></figure>
<h2 id="常用复合命令："><a href="#常用复合命令：" class="headerlink" title="常用复合命令："></a>常用复合命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy -g</span><br><span class="line">hexo server -g</span><br></pre></td></tr></table></figure>
<h2 id="简写："><a href="#简写：" class="headerlink" title="简写："></a>简写：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>
<h2 id="至此，基本操作介绍完毕，以下内容普通用户无需了解。"><a href="#至此，基本操作介绍完毕，以下内容普通用户无需了解。" class="headerlink" title="至此，基本操作介绍完毕，以下内容普通用户无需了解。"></a>至此，基本操作介绍完毕，以下内容普通用户无需了解。</h2><h1 id="目录介绍"><a href="#目录介绍" class="headerlink" title="目录介绍"></a>目录介绍</h1><h2 id="默认目录结构："><a href="#默认目录结构：" class="headerlink" title="默认目录结构："></a>默认目录结构：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── .deploy</span><br><span class="line">├── public</span><br><span class="line">├── scaffolds</span><br><span class="line">├── scripts</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">├── themes</span><br><span class="line">├── _config.yml</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure>
<ul>
<li>.deploy：执行hexo deploy命令部署到GitHub上的内容目录</li>
<li>public：执行hexo generate命令，输出的静态网页内容目录</li>
<li>scaffolds：layout模板文件目录，其中的md文件可以添加编辑</li>
<li>scripts：扩展脚本目录，这里可以自定义一些javascript脚本</li>
<li>source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。<ul>
<li>_drafts：草稿文章</li>
<li>_posts：发布文章</li>
</ul>
</li>
<li>themes：主题文件目录</li>
<li>_config.yml：全局配置文件，大多数的设置都在这里</li>
<li>package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮</li>
</ul>
<p>接下来是重头戏<code>_config.yml</code>，做个简单说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: http://zespia.tw/hexo/docs/configure.html</span><br><span class="line">## Source: https://github.com/tommy351/hexo/</span><br><span class="line"></span><br><span class="line"># Site #整站的基本信息</span><br><span class="line">title:  #网站标题</span><br><span class="line">subtitle: 码农，程序猿 #网站副标题</span><br><span class="line">description: bruce sha&apos;s blog | java | scala | bi #网站描述，给搜索引擎用的，在生成html中的head-&gt;meta中可看到</span><br><span class="line">author: bruce #网站作者，在下方显示</span><br><span class="line">email: *****u@qq.com #联系邮箱</span><br><span class="line">language: zh-CN #语言</span><br><span class="line"></span><br><span class="line"># URL #域名和文件结构</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://xheartx.como #你的域名</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line"></span><br><span class="line"># Writing #写文章选项</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post #默认layout方式</span><br><span class="line">auto_spacing: false # Add spaces between asian characters and western characters</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">max_open_file: 100</span><br><span class="line">multi_thread: true</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">highlight: #代码高亮</span><br><span class="line">  enable: true #是否启用</span><br><span class="line">  line_number: false #是否显示行号</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag #分类与标签</span><br><span class="line">default_category: uncategorized # default</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Archives #存档，这里的说明好像不对。全部选择1，这个选项与主题中的选项有时候会有冲突</span><br><span class="line">## 2: Enable pagination</span><br><span class="line">## 1: Disable pagination</span><br><span class="line">## 0: Fully Disable</span><br><span class="line">archive: 1</span><br><span class="line">category: 1</span><br><span class="line">tag: 1</span><br><span class="line"></span><br><span class="line"># Server #本地服务参数</span><br><span class="line">## Hexo uses Connect as a server</span><br><span class="line">## You can customize the logger format as defined in</span><br><span class="line">## http://www.senchalabs.org/connect/logger.html</span><br><span class="line">port: 4000</span><br><span class="line">logger: true</span><br><span class="line">logger_format:</span><br><span class="line"></span><br><span class="line"># Date / Time format #日期显示格式</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: MMM D YYYY</span><br><span class="line">time_format: H:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination #分页设置</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10 #每页10篇文章</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Disqus #社会化评论disqus，我使用多说，在主题中配置</span><br><span class="line">disqus_shortname:</span><br><span class="line"></span><br><span class="line"># Extensions #插件，暂时未安装插件</span><br><span class="line">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</span><br><span class="line">## Themes: https://github.com/tommy351/hexo/wiki/Themes</span><br><span class="line">## 主题</span><br><span class="line">theme: modernist # raytaylorism # pacman # modernist # light</span><br><span class="line">exclude_generator:</span><br><span class="line"></span><br><span class="line"># Deployment #部署</span><br><span class="line">## Docs: http://zespia.tw/hexo/docs/deploy.html</span><br><span class="line">deploy:</span><br><span class="line">  type: github</span><br><span class="line">  repository: git@github.com:bruce-sha/bruce-sha.github.com.git #你的GitHub Pages仓库</span><br></pre></td></tr></table></figure></p>
<h1 id="修改局部页面"><a href="#修改局部页面" class="headerlink" title="修改局部页面"></a>修改局部页面</h1><p>页面展现的全部逻辑都在每个主题中控制，源代码在<code>hexo\themes\</code>你使用的主题\中，以<code>Next</code>主题为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── languages          #多语言</span><br><span class="line">|   ├── default.yml    #默认语言</span><br><span class="line">|   └── zh-CN.yml      #中文语言</span><br><span class="line">├── layout             #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</span><br><span class="line">|   ├── _partial       #局部的布局，此目录下的*.ejs是对头尾等局部的控制</span><br><span class="line">|   └── _widget        #小挂件的布局，页面下方小挂件的控制</span><br><span class="line">├── source             #源码</span><br><span class="line">|   ├── css            #css源码 </span><br><span class="line">|   |   ├── _base      #*.styl基础css</span><br><span class="line">|   |   ├── _partial   #*.styl局部css</span><br><span class="line">|   |   ├── fonts      #字体</span><br><span class="line">|   |   ├── images     #图片</span><br><span class="line">|   |   └── style.styl #*.styl引入需要的css源码</span><br><span class="line">|   ├── fancybox       #fancybox效果源码</span><br><span class="line">|   └── js             #javascript源代码</span><br><span class="line">├── _config.yml        #主题配置文件</span><br><span class="line">└── README.md          #用GitHub的都知道</span><br></pre></td></tr></table></figure></p>
<h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><h2 id="更新hexo："><a href="#更新hexo：" class="headerlink" title="更新hexo："></a>更新hexo：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update -g hexo</span><br></pre></td></tr></table></figure>
<h2 id="更新主题："><a href="#更新主题：" class="headerlink" title="更新主题："></a>更新主题：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/你的主题</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<h2 id="更新插件："><a href="#更新插件：" class="headerlink" title="更新插件："></a>更新插件：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update</span><br></pre></td></tr></table></figure>
<h1 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h1><p><a href="http://hexo.io/docs/" target="_blank" rel="external">hexo官方文档</a><br><a href="https://github.com/hexojs/hexo/wiki/Plugins" target="_blank" rel="external">hexo插件大全</a><br><a href="http://www.faviconer.com/" target="_blank" rel="external">自定义网站logo</a><br><a href="http://www.markdown.cn/" target="_blank" rel="external">MarkDown中文网</a><br><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">MarkDown语法说明</a><br><a href="http://www.jiathis.com/" target="_blank" rel="external">社交分享推荐使用jiathis</a><br><a href="http://duoshuo.com/" target="_blank" rel="external">评论插件推荐使用duoshuo</a><br><a href="http://zhanzhang.cnzz.com/" target="_blank" rel="external">网站流量统计推荐cnzz</a><br><a href="http://tongji.baidu.com/web/welcome/login" target="_blank" rel="external">网站流量统计推荐百度统计</a></p>
<hr>
<p>通过以上的设置，相信你已经可以通过注册域名来访问一个默认的hexo主题页面了。之后的工作就在于，<br>(1)如何对主题进行个性化设置及；<br>(2)发表博文以充实网站内容。<br><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">这里</a>有关于next主题的个性化设置说明。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的第一篇文章—记录]]></title>
      <url>http://xheartx.com/2016/01/01/essays-My-first-article/</url>
      <content type="html"><![CDATA[<p><img src="http://7xvjap.com1.z0.glb.clouddn.com/2016-01-01-01.png" alt=""><br>今天终于能建一个自己的网站了，看了很多的建站教程，最终还是决定在Github Page，毕竟自己刚开始学习，用这里来记录我的学习之路，并时刻提醒自己，要努力！！<br><a id="more"></a>—–为了她。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://xheartx.com/2016/01/01/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a><br><a id="more"></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
